{
  "basePath": "/api_v3",
  "definitions": {
    "KalturaActionPermissionItem": {
      "properties": {
        "actionPrivacy": {
          "description": "Enum Type: `KalturaSocialActionPrivacy`\n\nActionPrivacy",
          "enum": [
            "ALLOW",
            "DONT_ALLOW"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALLOW",
            "DONT_ALLOW"
          ],
          "x-enumType": "KalturaSocialActionPrivacy"
        },
        "network": {
          "description": "Enum Type: `KalturaSocialNetwork`",
          "enum": [
            "facebook"
          ],
          "type": "string",
          "x-enumLabels": [
            "FACEBOOK"
          ],
          "x-enumType": "KalturaSocialNetwork"
        },
        "privacy": {
          "description": "Enum Type: `KalturaSocialPrivacy`\n\nPrivacy",
          "enum": [
            "UNKNOWN",
            "EVERYONE",
            "ALL_FRIENDS",
            "FRIENDS_OF_FRIENDS",
            "SELF",
            "CUSTOM"
          ],
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "EVERYONE",
            "ALL_FRIENDS",
            "FRIENDS_OF_FRIENDS",
            "SELF",
            "CUSTOM"
          ],
          "x-enumType": "KalturaSocialPrivacy"
        }
      },
      "title": "KalturaActionPermissionItem"
    },
    "KalturaAnnouncement": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "description": "`readOnly`",
          "readOnly": true,
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "recipients": {
          "description": "Enum Type: `KalturaAnnouncementRecipientsType`",
          "enum": [
            "All",
            "LoggedIn",
            "Guests",
            "Other"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "LOGGEDIN",
            "GUESTS",
            "OTHER"
          ],
          "x-enumType": "KalturaAnnouncementRecipientsType"
        },
        "startTime": {
          "type": "integer"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAnnouncementStatus`",
          "enum": [
            "NotSent",
            "Sending",
            "Sent",
            "Aborted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOTSENT",
            "SENDING",
            "SENT",
            "ABORTED"
          ],
          "x-enumType": "KalturaAnnouncementStatus"
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "KalturaAnnouncement"
    },
    "KalturaAnnouncementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {},
      "title": "KalturaAnnouncementFilter"
    },
    "KalturaAnnouncementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message announcements from DB.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAnnouncement"
          },
          "type": "array"
        }
      },
      "title": "KalturaAnnouncementListResponse"
    },
    "KalturaApiActionPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "action": {
          "description": "API action name",
          "type": "string"
        },
        "service": {
          "description": "API service name",
          "type": "string"
        }
      },
      "title": "KalturaApiActionPermissionItem"
    },
    "KalturaApiArgumentPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "action": {
          "description": "API action name",
          "type": "string"
        },
        "parameter": {
          "description": "API parameter name",
          "type": "string"
        },
        "service": {
          "description": "API service name",
          "type": "string"
        }
      },
      "title": "KalturaApiArgumentPermissionItem"
    },
    "KalturaApiParameterPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaApiParameterPermissionItemAction`\n\nAPI action type",
          "enum": [
            "READ",
            "INSERT",
            "UPDATE",
            "USAGE"
          ],
          "type": "string",
          "x-enumLabels": [
            "READ",
            "INSERT",
            "UPDATE",
            "USAGE"
          ],
          "x-enumType": "KalturaApiParameterPermissionItemAction"
        },
        "object": {
          "description": "API object name",
          "type": "string"
        },
        "parameter": {
          "description": "API parameter name",
          "type": "string"
        }
      },
      "title": "KalturaApiParameterPermissionItem"
    },
    "KalturaAppToken": {
      "description": "Application token",
      "properties": {
        "expiry": {
          "description": "Expiry time of current token (unix timestamp in seconds)",
          "type": "integer"
        },
        "hashType": {
          "description": "Enum Type: `KalturaAppTokenHashType`\n\nThe hash type of the token",
          "enum": [
            "SHA1",
            "SHA256",
            "SHA512",
            "MD5"
          ],
          "type": "string",
          "x-enumLabels": [
            "SHA1",
            "SHA256",
            "SHA512",
            "MD5"
          ],
          "x-enumType": "KalturaAppTokenHashType"
        },
        "id": {
          "description": "`readOnly`\n\nThe id of the application token",
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner identifier",
          "readOnly": true,
          "type": "integer"
        },
        "sessionDuration": {
          "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
          "type": "integer"
        },
        "sessionPrivileges": {
          "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "sessionType": {
          "description": "Enum Type: `KalturaSessionType`\n\nType of KS (Kaltura Session) that created using the current token",
          "enum": [
            0,
            2
          ],
          "type": "integer",
          "x-enumLabels": [
            "USER",
            "ADMIN"
          ],
          "x-enumType": "KalturaSessionType"
        },
        "sessionUserId": {
          "description": "User id of KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAppTokenStatus`\n\nApplication token status",
          "enum": [
            0,
            1,
            2
          ],
          "readOnly": true,
          "type": "integer",
          "x-enumLabels": [
            "DELETED",
            "DISABLED",
            "ACTIVE"
          ],
          "x-enumType": "KalturaAppTokenStatus"
        },
        "token": {
          "description": "The application token",
          "type": "string"
        }
      },
      "title": "KalturaAppToken"
    },
    "KalturaAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetInfo"
        }
      ],
      "description": "`abstract`\n\nAsset info",
      "properties": {
        "enableCatchUp": {
          "description": "Enable catch-up",
          "type": "boolean"
        },
        "enableCdvr": {
          "description": "Enable cDVR",
          "type": "boolean"
        },
        "enableStartOver": {
          "description": "Enable start over",
          "type": "boolean"
        },
        "enableTrickPlay": {
          "description": "Enable trick-play",
          "type": "boolean"
        },
        "endDate": {
          "description": "Date and time represented as epoch. For VOD – till when the asset be available in the catalog. For EPG/Linear – program end time and date",
          "type": "integer"
        },
        "metas": {
          "items": {
            "$ref": "#/definitions/KalturaValue"
          },
          "type": "array"
        },
        "startDate": {
          "description": "Date and time represented as epoch. For VOD – since when the asset is available in the catalog. For EPG/Linear – when the program is aired (can be in the future).",
          "type": "integer"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/KalturaStringValueArray"
          },
          "type": "array"
        }
      },
      "title": "KalturaAsset"
    },
    "KalturaAssetComment": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialComment"
        }
      ],
      "description": "Asset Comment",
      "properties": {
        "assetId": {
          "description": "Asset identifier",
          "type": "integer"
        },
        "assetType": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "id": {
          "description": "Comment ID",
          "type": "integer"
        },
        "subHeader": {
          "description": "Sub Header",
          "type": "string"
        }
      },
      "title": "KalturaAssetComment"
    },
    "KalturaAssetCommentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdEqual": {
          "description": "Asset Id",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        }
      },
      "title": "KalturaAssetCommentFilter"
    },
    "KalturaAssetCommentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset Comment Response",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetComment"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetCommentListResponse"
    },
    "KalturaAssetFileContext": {
      "properties": {
        "fullLifeCycle": {
          "description": "`readOnly`\n\nfullLifeCycle",
          "readOnly": true,
          "type": "string"
        },
        "isOfflinePlayBack": {
          "description": "`readOnly`\n\nisOfflinePlayBack",
          "readOnly": true,
          "type": "boolean"
        },
        "viewLifeCycle": {
          "description": "`readOnly`\n\nviewLifeCycle",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaAssetFileContext"
    },
    "KalturaAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {},
      "title": "KalturaAssetFilter"
    },
    "KalturaAssetHistory": {
      "description": "Watch history asset info",
      "properties": {
        "assetId": {
          "description": "`readOnly`\n\nAsset identifier",
          "readOnly": true,
          "type": "integer"
        },
        "assetType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetType`\n\nAsset identifier",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "duration": {
          "description": "`readOnly`\n\nDuration in seconds of the relevant asset",
          "readOnly": true,
          "type": "integer"
        },
        "finishedWatching": {
          "description": "`readOnly`\n\nBoolean which specifies whether the user finished watching the movie or not",
          "readOnly": true,
          "type": "boolean"
        },
        "position": {
          "description": "`readOnly`\n\nPosition in seconds of the relevant asset",
          "readOnly": true,
          "type": "integer"
        },
        "watchedDate": {
          "description": "`readOnly`\n\nThe date when the media was last watched",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaAssetHistory"
    },
    "KalturaAssetHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "daysLessThanOrEqual": {
          "description": "How many days back to return the watched media. If omitted, default to 7 days",
          "type": "integer"
        },
        "statusEqual": {
          "description": "Enum Type: `KalturaWatchStatus`\n\nWhich type of recently watched media to include in the result – those that finished watching, those that are in progress or both.\r\n            If omitted or specified filter = all – return all types.\r\n            Allowed values: progress – return medias that are in-progress, done – return medias that finished watching.",
          "enum": [
            "progress",
            "done",
            "all"
          ],
          "type": "string",
          "x-enumLabels": [
            "PROGRESS",
            "DONE",
            "ALL"
          ],
          "x-enumType": "KalturaWatchStatus"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within.\r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaAssetHistoryFilter"
    },
    "KalturaAssetHistoryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Watch history asset wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetHistory"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetHistoryListResponse"
    },
    "KalturaAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAsset"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetListResponse"
    },
    "KalturaAssetStatistics": {
      "description": "Asset statistics",
      "properties": {
        "assetId": {
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "buzzScore": {
          "$ref": "#/definitions/KalturaBuzzScore"
        },
        "likes": {
          "description": "Total number of likes for this asset",
          "type": "integer"
        },
        "rating": {
          "description": "Average rating for the asset",
          "type": "number"
        },
        "ratingCount": {
          "description": "Number of people that rated the asset",
          "type": "integer"
        },
        "views": {
          "description": "Total number of views for this asset",
          "type": "integer"
        }
      },
      "title": "KalturaAssetStatistics"
    },
    "KalturaAssetStatisticsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of assets statistics",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetStatistics"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetStatisticsListResponse"
    },
    "KalturaAssetStatisticsQuery": {
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "endDateGreaterThanOrEqual": {
          "description": "/// The end of the time window to get the statistics for (in epoch).",
          "type": "integer"
        },
        "startDateGreaterThanOrEqual": {
          "description": "The beginning of the time window to get the statistics for (in epoch).",
          "type": "integer"
        }
      },
      "title": "KalturaAssetStatisticsQuery"
    },
    "KalturaBaseAssetInfo": {
      "description": "Slim asset info",
      "properties": {
        "description": {
          "description": "Asset description",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the asset",
          "readOnly": true,
          "type": "integer"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          },
          "type": "array"
        },
        "mediaFiles": {
          "items": {
            "$ref": "#/definitions/KalturaMediaFile"
          },
          "type": "array"
        },
        "name": {
          "description": "Asset name",
          "type": "string"
        },
        "type": {
          "description": "Identifies the asset type (EPG, Recording, Movie, TV Series, etc). \r\n            Possible values: 0 – EPG linear programs, 1 - Recording; or any asset type ID according to the asset types IDs defined in the system.",
          "type": "integer"
        }
      },
      "title": "KalturaBaseAssetInfo"
    },
    "KalturaBaseChannel": {
      "description": "Slim channel",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the channel",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Channel name",
          "type": "string"
        }
      },
      "title": "KalturaBaseChannel"
    },
    "KalturaBaseOTTUser": {
      "description": "Slim user data",
      "properties": {
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "username": {
          "description": "Username",
          "type": "string"
        }
      },
      "title": "KalturaBaseOTTUser"
    },
    "KalturaBillingPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner billing configuration",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaPartnerConfigurationType`\n\npartner configuration type",
          "enum": [
            "DefaultPaymentGateway",
            "EnablePaymentGatewaySelection",
            "OSSAdapter"
          ],
          "type": "string",
          "x-enumLabels": [
            "DEFAULTPAYMENTGATEWAY",
            "ENABLEPAYMENTGATEWAYSELECTION",
            "OSSADAPTER"
          ],
          "x-enumType": "KalturaPartnerConfigurationType"
        },
        "value": {
          "description": "configuration value",
          "type": "string"
        }
      },
      "title": "KalturaBillingPartnerConfig"
    },
    "KalturaBillingResponse": {
      "description": "Billing response",
      "properties": {
        "externalReceiptCode": {
          "description": "External receipt Code",
          "type": "string"
        },
        "receiptCode": {
          "description": "Receipt Code",
          "type": "string"
        }
      },
      "title": "KalturaBillingResponse"
    },
    "KalturaBillingTransaction": {
      "description": "Billing Transaction",
      "properties": {
        "actionDate": {
          "description": "`readOnly`\n\nAction Date",
          "readOnly": true,
          "type": "integer"
        },
        "billingAction": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBillingAction`\n\nBilling Action",
          "enum": [
            "unknown",
            "purchase",
            "renew_payment",
            "renew_canceled_subscription",
            "cancel_subscription_order",
            "subscription_date_changed"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "PURCHASE",
            "RENEW_PAYMENT",
            "RENEW_CANCELED_SUBSCRIPTION",
            "CANCEL_SUBSCRIPTION_ORDER",
            "SUBSCRIPTION_DATE_CHANGED"
          ],
          "x-enumType": "KalturaBillingAction"
        },
        "billingProviderRef": {
          "description": "`readOnly`\n\nBilling Provider Ref",
          "readOnly": true,
          "type": "integer"
        },
        "endDate": {
          "description": "`readOnly`\n\nEnd Date",
          "readOnly": true,
          "type": "integer"
        },
        "isRecurring": {
          "description": "`readOnly`\n\nIs Recurring",
          "readOnly": true,
          "type": "boolean"
        },
        "itemType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBillingItemsType`\n\nItem Type",
          "enum": [
            "unknown",
            "ppv",
            "subscription",
            "pre_paid",
            "pre_paid_expired",
            "collection"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "PPV",
            "SUBSCRIPTION",
            "PRE_PAID",
            "PRE_PAID_EXPIRED",
            "COLLECTION"
          ],
          "x-enumType": "KalturaBillingItemsType"
        },
        "paymentMethod": {
          "description": "`readOnly`\n\nEnum Type: `KalturaPaymentMethodType`\n\nPayment Method",
          "enum": [
            "unknown",
            "credit_card",
            "sms",
            "pay_pal",
            "debit_card",
            "ideal",
            "incaso",
            "gift",
            "visa",
            "master_card",
            "in_app",
            "m1",
            "change_subscription",
            "offline"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "CREDIT_CARD",
            "SMS",
            "PAY_PAL",
            "DEBIT_CARD",
            "IDEAL",
            "INCASO",
            "GIFT",
            "VISA",
            "MASTER_CARD",
            "IN_APP",
            "M1",
            "CHANGE_SUBSCRIPTION",
            "OFFLINE"
          ],
          "x-enumType": "KalturaPaymentMethodType"
        },
        "paymentMethodExtraDetails": {
          "description": "`readOnly`\n\nPayment Method Extra Details",
          "readOnly": true,
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseId": {
          "description": "`readOnly`\n\nPurchase ID",
          "readOnly": true,
          "type": "integer"
        },
        "purchasedItemCode": {
          "description": "`readOnly`\n\nPurchased Item Code",
          "readOnly": true,
          "type": "string"
        },
        "purchasedItemName": {
          "description": "`readOnly`\n\nPurchased Item Name",
          "readOnly": true,
          "type": "string"
        },
        "recieptCode": {
          "description": "`readOnly`\n\nReciept Code",
          "readOnly": true,
          "type": "string"
        },
        "remarks": {
          "description": "`readOnly`\n\nRemarks",
          "readOnly": true,
          "type": "string"
        },
        "startDate": {
          "description": "`readOnly`\n\nStart Date",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaBillingTransaction"
    },
    "KalturaBillingTransactionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Billing Transactions",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBillingTransaction"
          },
          "type": "array"
        }
      },
      "title": "KalturaBillingTransactionListResponse"
    },
    "KalturaBookmark": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSlimAsset"
        }
      ],
      "properties": {
        "finishedWatching": {
          "description": "`readOnly`\n\nSpecifies whether the user&#39;s current position exceeded 95% of the duration",
          "readOnly": true,
          "type": "boolean"
        },
        "playerData": {
          "$ref": "#/definitions/KalturaBookmarkPlayerData"
        },
        "position": {
          "description": "`insertOnly`\n\nThe position of the user in the specific asset (in seconds)",
          "type": "integer"
        },
        "positionOwner": {
          "description": "`readOnly`\n\nEnum Type: `KalturaPositionOwner`\n\nIndicates who is the owner of this position",
          "enum": [
            "household",
            "user"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "HOUSEHOLD",
            "USER"
          ],
          "x-enumType": "KalturaPositionOwner"
        },
        "userId": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaBookmark"
    },
    "KalturaBookmarkFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering Assets requests",
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of assets identifiers",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        }
      },
      "title": "KalturaBookmarkFilter"
    },
    "KalturaBookmarkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of assets and their bookmarks",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBookmark"
          },
          "type": "array"
        }
      },
      "title": "KalturaBookmarkListResponse"
    },
    "KalturaBookmarkPlayerData": {
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaBookmarkActionType`\n\nAction",
          "enum": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "x-enumType": "KalturaBookmarkActionType"
        },
        "averageBitrate": {
          "description": "Average Bitrate",
          "type": "integer"
        },
        "currentBitrate": {
          "description": "Current Bitrate",
          "type": "integer"
        },
        "fileId": {
          "description": "Identifier of the file",
          "type": "integer"
        },
        "totalBitrate": {
          "description": "Total Bitrate",
          "type": "integer"
        }
      },
      "title": "KalturaBookmarkPlayerData"
    },
    "KalturaBooleanValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of booleans",
      "properties": {
        "value": {
          "type": "boolean"
        }
      },
      "title": "KalturaBooleanValue"
    },
    "KalturaBundleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "bundleTypeEqual": {
          "description": "Enum Type: `KalturaBundleType`\n\nbundleType - possible values: Subscription or Collection",
          "enum": [
            "subscription",
            "collection"
          ],
          "type": "string",
          "x-enumLabels": [
            "SUBSCRIPTION",
            "COLLECTION"
          ],
          "x-enumType": "KalturaBundleType"
        },
        "idEqual": {
          "description": "Bundle Id.",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaBundleFilter"
    },
    "KalturaBuzzScore": {
      "description": "Buzz score",
      "properties": {
        "avgScore": {
          "description": "Average score",
          "type": "number"
        },
        "normalizedAvgScore": {
          "description": "Normalized average score",
          "type": "number"
        },
        "updateDate": {
          "description": "Update date",
          "type": "integer"
        }
      },
      "title": "KalturaBuzzScore"
    },
    "KalturaCDNAdapterProfile": {
      "description": "CDN Adapter",
      "properties": {
        "adapterUrl": {
          "description": "CDN adapter URL",
          "type": "string"
        },
        "baseUrl": {
          "description": "CDN adapter base URL",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nCDN adapter identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "CDN adapter active status",
          "type": "boolean"
        },
        "name": {
          "description": "CDNR adapter name",
          "type": "string"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nCDN shared secret",
          "readOnly": true,
          "type": "string"
        },
        "systemName": {
          "description": "CDN adapter alias",
          "type": "string"
        }
      },
      "title": "KalturaCDNAdapterProfile"
    },
    "KalturaCDNAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCDNAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaCDNAdapterProfileListResponse"
    },
    "KalturaCDNPartnerSettings": {
      "properties": {
        "defaultAdapterId": {
          "description": "Default CDN adapter identifier",
          "type": "integer"
        },
        "defaultRecordingAdapterId": {
          "description": "Default recording CDN adapter identifier",
          "type": "integer"
        }
      },
      "title": "KalturaCDNPartnerSettings"
    },
    "KalturaCDVRAdapterProfile": {
      "description": "C-DVR Adapter",
      "properties": {
        "adapterUrl": {
          "description": "C-DVR adapter adapter URL",
          "type": "string"
        },
        "dynamicLinksSupport": {
          "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
          "type": "boolean"
        },
        "externalIdentifier": {
          "description": "C-DVR adapter external identifier",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nC-DVR adapter identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "C-DVR adapter active status",
          "type": "boolean"
        },
        "name": {
          "description": "C-DVR adapter name",
          "type": "string"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nC-DVR shared secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaCDVRAdapterProfile"
    },
    "KalturaCDVRAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "C-DVR adapter profiles",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCDVRAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaCDVRAdapterProfileListResponse"
    },
    "KalturaCatalogWithHolder": {
      "description": "Holder object for Catalog With enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaCatalogWith`",
          "enum": [
            "images",
            "files",
            "stats"
          ],
          "type": "string",
          "x-enumLabels": [
            "IMAGES",
            "FILES",
            "STATS"
          ],
          "x-enumType": "KalturaCatalogWith"
        }
      },
      "title": "KalturaCatalogWithHolder"
    },
    "KalturaChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannel"
        }
      ],
      "description": "Channel details",
      "properties": {
        "assetTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "description": {
          "description": "Cannel description",
          "type": "string"
        },
        "filterExpression": {
          "description": "Filter expression",
          "type": "string"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          },
          "type": "array"
        },
        "isActive": {
          "description": "active status",
          "type": "boolean"
        },
        "order": {
          "description": "Enum Type: `KalturaAssetOrderBy`\n\nChannel order",
          "enum": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC"
          ],
          "x-enumType": "KalturaAssetOrderBy"
        }
      },
      "title": "KalturaChannel"
    },
    "KalturaChannelEnrichmentHolder": {
      "description": "Holder object for channel enrichment enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaChannelEnrichment`",
          "enum": [
            "ClientLocation",
            "UserId",
            "HouseholdId",
            "DeviceId",
            "DeviceType",
            "UTCOffset",
            "Language",
            "NPVRSupport",
            "Catchup",
            "Parental",
            "DTTRegion",
            "AtHome"
          ],
          "type": "string",
          "x-enumLabels": [
            "CLIENTLOCATION",
            "USERID",
            "HOUSEHOLDID",
            "DEVICEID",
            "DEVICETYPE",
            "UTCOFFSET",
            "LANGUAGE",
            "NPVRSUPPORT",
            "CATCHUP",
            "PARENTAL",
            "DTTREGION",
            "ATHOME"
          ],
          "x-enumType": "KalturaChannelEnrichment"
        }
      },
      "title": "KalturaChannelEnrichmentHolder"
    },
    "KalturaChannelExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "freeText": {
          "description": "FreeTextEqual",
          "type": "string"
        },
        "idEqual": {
          "description": "External Channel Id.",
          "type": "integer"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "number"
        }
      },
      "title": "KalturaChannelExternalFilter"
    },
    "KalturaChannelFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "Channel Id",
          "type": "integer"
        },
        "kSql": {
          "type": "string"
        }
      },
      "title": "KalturaChannelFilter"
    },
    "KalturaClientConfiguration": {
      "description": "Define client optional configurations",
      "properties": {
        "apiVersion": {
          "description": "API client version",
          "type": "string"
        },
        "clientTag": {
          "description": "Client Tag",
          "type": "string"
        }
      },
      "title": "KalturaClientConfiguration"
    },
    "KalturaConfigurationGroup": {
      "properties": {
        "configurationIdentifiers": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationIdentifier"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nConfiguration group identifier",
          "readOnly": true,
          "type": "string"
        },
        "isDefault": {
          "description": "`insertOnly`\n\nIs default",
          "type": "boolean"
        },
        "name": {
          "description": "Configuration group name",
          "type": "string"
        },
        "numberOfDevices": {
          "description": "`readOnly`\n\nNumber of devices",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner id",
          "readOnly": true,
          "type": "integer"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroup"
    },
    "KalturaConfigurationGroupDevice": {
      "properties": {
        "configurationGroupId": {
          "description": "Configuration group id",
          "type": "string"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner id",
          "readOnly": true,
          "type": "integer"
        },
        "udid": {
          "description": "Device UDID",
          "type": "string"
        }
      },
      "title": "KalturaConfigurationGroupDevice"
    },
    "KalturaConfigurationGroupDeviceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Configuration group device filter",
      "properties": {
        "configurationGroupIdEqual": {
          "type": "string"
        }
      },
      "title": "KalturaConfigurationGroupDeviceFilter"
    },
    "KalturaConfigurationGroupDeviceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configuration group devices info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationGroupDevice"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroupDeviceListResponse"
    },
    "KalturaConfigurationGroupListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configuration groups info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationGroup"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroupListResponse"
    },
    "KalturaConfigurationGroupTag": {
      "properties": {
        "configurationGroupId": {
          "description": "Configuration group identifier",
          "type": "string"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner identifier",
          "readOnly": true,
          "type": "integer"
        },
        "tag": {
          "description": "Tag",
          "type": "string"
        }
      },
      "title": "KalturaConfigurationGroupTag"
    },
    "KalturaConfigurationGroupTagFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Configuration group tag filter",
      "properties": {
        "configurationGroupIdEqual": {
          "type": "string"
        }
      },
      "title": "KalturaConfigurationGroupTagFilter"
    },
    "KalturaConfigurationGroupTagListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configurations group tags info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationGroupTag"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroupTagListResponse"
    },
    "KalturaConfigurationIdentifier": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "KalturaConfigurationIdentifier"
    },
    "KalturaConfigurations": {
      "properties": {
        "appName": {
          "description": "Application name",
          "type": "string"
        },
        "clientVersion": {
          "description": "Client version",
          "type": "string"
        },
        "configurationGroupId": {
          "description": "Configuration group id",
          "type": "string"
        },
        "content": {
          "description": "Content",
          "type": "string"
        },
        "externalPushId": {
          "description": "External push id",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nConfiguration id",
          "readOnly": true,
          "type": "string"
        },
        "isForceUpdate": {
          "description": "Is force update",
          "type": "boolean"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner id",
          "readOnly": true,
          "type": "integer"
        },
        "platform": {
          "description": "Enum Type: `KalturaPlatform`\n\nPlatform: Android/iOS/WindowsPhone/Blackberry/STB/CTV/Other",
          "enum": [
            "Android",
            "iOS",
            "WindowsPhone",
            "Blackberry",
            "STB",
            "CTV",
            "Other"
          ],
          "type": "string",
          "x-enumLabels": [
            "ANDROID",
            "IOS",
            "WINDOWSPHONE",
            "BLACKBERRY",
            "STB",
            "CTV",
            "OTHER"
          ],
          "x-enumType": "KalturaPlatform"
        }
      },
      "title": "KalturaConfigurations"
    },
    "KalturaConfigurationsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Configuration filter",
      "properties": {
        "configurationGroupIdEqual": {
          "type": "string"
        }
      },
      "title": "KalturaConfigurationsFilter"
    },
    "KalturaConfigurationsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configurations info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurations"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationsListResponse"
    },
    "KalturaCountry": {
      "description": "Country details",
      "properties": {
        "code": {
          "description": "Country code",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nCountry identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Country name",
          "type": "string"
        }
      },
      "title": "KalturaCountry"
    },
    "KalturaCountryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Country filter",
      "properties": {
        "idIn": {
          "description": "Country identifiers",
          "type": "string"
        }
      },
      "title": "KalturaCountryFilter"
    },
    "KalturaCountryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCountry"
          },
          "type": "array"
        }
      },
      "title": "KalturaCountryListResponse"
    },
    "KalturaCoupon": {
      "description": "Coupon details container",
      "properties": {
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaCouponStatus`\n\nCoupon status",
          "enum": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "x-enumType": "KalturaCouponStatus"
        }
      },
      "title": "KalturaCoupon"
    },
    "KalturaCouponsGroup": {
      "description": "Coupons group details",
      "properties": {
        "descriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "endDate": {
          "description": "The last date the coupons in this coupons group are valid",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nCoupon group identifier",
          "readOnly": true,
          "type": "string"
        },
        "maxUsesNumber": {
          "description": "Maximum number of uses for each coupon in the group",
          "type": "integer"
        },
        "maxUsesNumberOnRenewableSub": {
          "description": "Maximum number of uses for each coupon in the group on a renewable subscription",
          "type": "integer"
        },
        "name": {
          "description": "Coupon group name",
          "type": "string"
        },
        "startDate": {
          "description": "The first date the coupons in this coupons group are valid",
          "type": "integer"
        }
      },
      "title": "KalturaCouponsGroup"
    },
    "KalturaDeviceBrand": {
      "description": "Device brand details",
      "properties": {
        "deviceFamilyid": {
          "description": "`readOnly`\n\nDevice family identifier",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nDevice brand identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Device brand name",
          "type": "string"
        }
      },
      "title": "KalturaDeviceBrand"
    },
    "KalturaDeviceBrandListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDeviceBrand"
          },
          "type": "array"
        }
      },
      "title": "KalturaDeviceBrandListResponse"
    },
    "KalturaDeviceFamily": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceFamilyBase"
        }
      ],
      "description": "Device family details",
      "properties": {},
      "title": "KalturaDeviceFamily"
    },
    "KalturaDeviceFamilyBase": {
      "description": "Device family details",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nDevice family identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Device family name",
          "type": "string"
        }
      },
      "title": "KalturaDeviceFamilyBase"
    },
    "KalturaDeviceFamilyListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDeviceFamily"
          },
          "type": "array"
        }
      },
      "title": "KalturaDeviceFamilyListResponse"
    },
    "KalturaDevicePin": {
      "description": "Device pin",
      "properties": {
        "pin": {
          "description": "Device pin",
          "type": "string"
        }
      },
      "title": "KalturaDevicePin"
    },
    "KalturaDeviceRegistrationStatusHolder": {
      "description": "Holder object for household device registration status enum",
      "properties": {
        "status": {
          "description": "Enum Type: `KalturaDeviceRegistrationStatus`\n\nHousehold device registration status",
          "enum": [
            "not_registered",
            "registered",
            "registered_to_another_household"
          ],
          "type": "string",
          "x-enumLabels": [
            "NOT_REGISTERED",
            "REGISTERED",
            "REGISTERED_TO_ANOTHER_HOUSEHOLD"
          ],
          "x-enumType": "KalturaDeviceRegistrationStatus"
        }
      },
      "title": "KalturaDeviceRegistrationStatusHolder"
    },
    "KalturaDeviceReport": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReport"
        }
      ],
      "properties": {
        "configurationGroupId": {
          "description": "Configuration group id",
          "type": "string"
        },
        "lastAccessDate": {
          "description": "Last access date",
          "type": "integer"
        },
        "lastAccessIP": {
          "description": "Last access IP",
          "type": "string"
        },
        "operationSystem": {
          "description": "Operation system",
          "type": "string"
        },
        "partnerId": {
          "description": "Partner id",
          "type": "integer"
        },
        "pushParameters": {
          "$ref": "#/definitions/KalturaPushParams"
        },
        "udid": {
          "description": "Device UDID",
          "type": "string"
        },
        "userAgent": {
          "description": "User agent",
          "type": "string"
        },
        "versionAppName": {
          "description": "Version application name",
          "type": "string"
        },
        "versionNumber": {
          "description": "Version number",
          "type": "string"
        },
        "versionPlatform": {
          "description": "Enum Type: `KalturaPlatform`\n\nVersion platform",
          "enum": [
            "Android",
            "iOS",
            "WindowsPhone",
            "Blackberry",
            "STB",
            "CTV",
            "Other"
          ],
          "type": "string",
          "x-enumLabels": [
            "ANDROID",
            "IOS",
            "WINDOWSPHONE",
            "BLACKBERRY",
            "STB",
            "CTV",
            "OTHER"
          ],
          "x-enumType": "KalturaPlatform"
        }
      },
      "title": "KalturaDeviceReport"
    },
    "KalturaDeviceReportFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReportFilter"
        }
      ],
      "description": "Report filter",
      "properties": {
        "lastAccessDateGreaterThanOrEqual": {
          "type": "integer"
        }
      },
      "title": "KalturaDeviceReportFilter"
    },
    "KalturaDiscountModule": {
      "description": "Discount module",
      "properties": {
        "endDate": {
          "description": "The last date the discount is available",
          "type": "integer"
        },
        "percent": {
          "description": "The discount percentage",
          "type": "number"
        },
        "startDate": {
          "description": "The first date the discount is available",
          "type": "integer"
        }
      },
      "title": "KalturaDiscountModule"
    },
    "KalturaDoubleValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of doubles",
      "properties": {
        "value": {
          "type": "number"
        }
      },
      "title": "KalturaDoubleValue"
    },
    "KalturaEntitlement": {
      "description": "Entitlement",
      "properties": {
        "currentDate": {
          "description": "`readOnly`\n\nCurrent date",
          "readOnly": true,
          "type": "integer"
        },
        "currentUses": {
          "description": "`readOnly`\n\nThe current number of uses",
          "readOnly": true,
          "type": "integer"
        },
        "deviceName": {
          "description": "`readOnly`\n\nThe name of the device from which the purchase was made",
          "readOnly": true,
          "type": "string"
        },
        "deviceUdid": {
          "description": "`readOnly`\n\nThe UDID of the device from which the purchase was made",
          "readOnly": true,
          "type": "string"
        },
        "endDate": {
          "description": "`readOnly`\n\nThe end date of the entitlement",
          "readOnly": true,
          "type": "integer"
        },
        "entitlementId": {
          "description": "`readOnly`\n\nEntitlement identifier",
          "readOnly": true,
          "type": "string"
        },
        "isCancelationWindowEnabled": {
          "description": "`readOnly`\n\nIndicates whether a cancelation window period is enabled",
          "readOnly": true,
          "type": "boolean"
        },
        "isInGracePeriod": {
          "description": "`readOnly`\n\nIndicates whether the user is currently in his grace period entitlement",
          "readOnly": true,
          "type": "boolean"
        },
        "isRenewable": {
          "description": "`readOnly`\n\nIndicates whether a subscription is renewable (only for subscription)",
          "readOnly": true,
          "type": "boolean"
        },
        "isRenewableForPurchase": {
          "description": "`readOnly`\n\nIndicates whether the subscription is renewable in this purchase (only for subscription)",
          "readOnly": true,
          "type": "boolean"
        },
        "lastViewDate": {
          "description": "`readOnly`\n\nThe last date the item was viewed",
          "readOnly": true,
          "type": "integer"
        },
        "maxUses": {
          "description": "`readOnly`\n\nThe maximum number of uses available for this item (only for subscription and PPV)",
          "readOnly": true,
          "type": "integer"
        },
        "mediaFileId": {
          "description": "`readOnly`\n\nMedia file identifier (only for PPV)",
          "readOnly": true,
          "type": "integer"
        },
        "mediaId": {
          "description": "`readOnly`\n\nMedia identifier (only for PPV)",
          "readOnly": true,
          "type": "integer"
        },
        "nextRenewalDate": {
          "description": "`readOnly`\n\nThe date of the next renewal (only for subscription)",
          "readOnly": true,
          "type": "integer"
        },
        "paymentMethod": {
          "description": "`readOnly`\n\nEnum Type: `KalturaPaymentMethodType`\n\nPayment Method",
          "enum": [
            "unknown",
            "credit_card",
            "sms",
            "pay_pal",
            "debit_card",
            "ideal",
            "incaso",
            "gift",
            "visa",
            "master_card",
            "in_app",
            "m1",
            "change_subscription",
            "offline"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "CREDIT_CARD",
            "SMS",
            "PAY_PAL",
            "DEBIT_CARD",
            "IDEAL",
            "INCASO",
            "GIFT",
            "VISA",
            "MASTER_CARD",
            "IN_APP",
            "M1",
            "CHANGE_SUBSCRIPTION",
            "OFFLINE"
          ],
          "x-enumType": "KalturaPaymentMethodType"
        },
        "purchaseDate": {
          "description": "`readOnly`\n\nPurchase date",
          "readOnly": true,
          "type": "integer"
        },
        "purchaseId": {
          "description": "`readOnly`\n\nPurchase identifier (for subscriptions and collections only)",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaTransactionType`\n\nEntitlement type",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaEntitlement"
    },
    "KalturaEntitlementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Entitlements filter",
      "properties": {
        "entitlementTypeEqual": {
          "description": "Enum Type: `KalturaTransactionType`\n\nThe type of the entitlements to return",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "enum": [
            "user",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaEntityReferenceBy"
        },
        "isExpiredEqual": {
          "description": "Is expired",
          "type": "boolean"
        }
      },
      "title": "KalturaEntitlementFilter"
    },
    "KalturaEntitlementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Entitlements list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEntitlement"
          },
          "type": "array"
        }
      },
      "title": "KalturaEntitlementListResponse"
    },
    "KalturaExportTask": {
      "description": "Bulk export task",
      "properties": {
        "alias": {
          "description": "Alias for the task used to solicit an export using API",
          "type": "string"
        },
        "dataType": {
          "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
          "enum": [
            "vod",
            "epg",
            "users"
          ],
          "type": "string",
          "x-enumLabels": [
            "VOD",
            "EPG",
            "USERS"
          ],
          "x-enumType": "KalturaExportDataType"
        },
        "exportType": {
          "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
          "enum": [
            "full",
            "incremental"
          ],
          "type": "string",
          "x-enumLabels": [
            "FULL",
            "INCREMENTAL"
          ],
          "x-enumType": "KalturaExportType"
        },
        "filter": {
          "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
          "type": "string"
        },
        "frequency": {
          "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nTask identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "Indicates if the task is active or not",
          "type": "boolean"
        },
        "name": {
          "description": "Task display name",
          "type": "string"
        },
        "notificationUrl": {
          "description": "The URL for sending a notification when the task&#39;s export process is done",
          "type": "string"
        },
        "vodTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaExportTask"
    },
    "KalturaExportTaskFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Bulk export tasks filter",
      "properties": {
        "idIn": {
          "description": "Comma separated tasks identifiers",
          "type": "string"
        }
      },
      "title": "KalturaExportTaskFilter"
    },
    "KalturaExportTaskListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Export task list wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaExportTask"
          },
          "type": "array"
        }
      },
      "title": "KalturaExportTaskListResponse"
    },
    "KalturaExternalChannelProfile": {
      "description": "OSS Adapter",
      "properties": {
        "enrichments": {
          "items": {
            "$ref": "#/definitions/KalturaChannelEnrichmentHolder"
          },
          "type": "array"
        },
        "externalIdentifier": {
          "description": "External channel external identifier",
          "type": "string"
        },
        "filterExpression": {
          "description": "Filter expression",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nExternal channel id",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "External channel active status",
          "type": "boolean"
        },
        "name": {
          "description": "External channel name",
          "type": "string"
        },
        "recommendationEngineId": {
          "description": "Recommendation engine id",
          "type": "integer"
        }
      },
      "title": "KalturaExternalChannelProfile"
    },
    "KalturaExternalChannelProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "External channel profiles",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaExternalChannelProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaExternalChannelProfileListResponse"
    },
    "KalturaExternalReceipt": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        }
      ],
      "properties": {
        "paymentGatewayName": {
          "description": "The payment gateway name for the In-App billing service to be used. Possible values: Google/Apple",
          "type": "string"
        },
        "receiptId": {
          "description": "A unique identifier that was provided by the In-App billing service to validate the purchase",
          "type": "string"
        }
      },
      "title": "KalturaExternalReceipt"
    },
    "KalturaFacebookPost": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialNetworkComment"
        }
      ],
      "properties": {
        "comments": {
          "items": {
            "$ref": "#/definitions/KalturaSocialNetworkComment"
          },
          "type": "array"
        },
        "link": {
          "description": "A link associated to the post",
          "type": "string"
        }
      },
      "title": "KalturaFacebookPost"
    },
    "KalturaFacebookSocial": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocial"
        }
      ],
      "properties": {},
      "title": "KalturaFacebookSocial"
    },
    "KalturaFavorite": {
      "description": "Favorite details",
      "properties": {
        "assetId": {
          "description": "AssetInfo Model",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the favorite created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer"
        },
        "extraData": {
          "description": "Extra Value",
          "type": "string"
        }
      },
      "title": "KalturaFavorite"
    },
    "KalturaFavoriteFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Favorite request filter",
      "properties": {
        "mediaIdIn": {
          "description": "Media identifiers from which to filter the favorite assets",
          "type": "string"
        },
        "mediaTypeEqual": {
          "description": "Media type to filter by the favorite assets",
          "type": "integer"
        }
      },
      "title": "KalturaFavoriteFilter"
    },
    "KalturaFavoriteListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Favorite list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFavorite"
          },
          "type": "array"
        }
      },
      "title": "KalturaFavoriteListResponse"
    },
    "KalturaFeed": {
      "properties": {
        "assetId": {
          "description": "`readOnly`",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaFeed"
    },
    "KalturaFilter": {
      "description": "`abstract`",
      "properties": {
        "orderBy": {
          "type": "integer"
        }
      },
      "title": "KalturaFilter"
    },
    "KalturaFilterPager": {
      "description": "The KalturaFilterPager object enables paging management to be applied upon service list actions",
      "properties": {
        "pageIndex": {
          "description": "The page number for which {pageSize} of objects should be retrieved",
          "type": "integer"
        },
        "pageSize": {
          "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
          "type": "integer"
        }
      },
      "title": "KalturaFilterPager"
    },
    "KalturaFollowDataBase": {
      "properties": {
        "announcementId": {
          "description": "`readOnly`\n\nAnnouncement Id",
          "readOnly": true,
          "type": "integer"
        },
        "followPhrase": {
          "description": "`readOnly`\n\nFollow Phrase",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nStatus",
          "readOnly": true,
          "type": "integer"
        },
        "timestamp": {
          "description": "`readOnly`\n\nTimestamp",
          "readOnly": true,
          "type": "integer"
        },
        "title": {
          "description": "`readOnly`\n\nTitle",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaFollowDataBase"
    },
    "KalturaFollowTvSeries": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFollowDataBase"
        }
      ],
      "properties": {
        "assetId": {
          "description": "Asset Id",
          "type": "integer"
        }
      },
      "title": "KalturaFollowTvSeries"
    },
    "KalturaFollowTvSeriesFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {},
      "title": "KalturaFollowTvSeriesFilter"
    },
    "KalturaFollowTvSeriesListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message follow data.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFollowTvSeries"
          },
          "type": "array"
        }
      },
      "title": "KalturaFollowTvSeriesListResponse"
    },
    "KalturaGroupPermission": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermission"
        }
      ],
      "properties": {
        "group": {
          "description": "Permission identifier",
          "type": "string"
        }
      },
      "title": "KalturaGroupPermission"
    },
    "KalturaHomeNetwork": {
      "description": "Home network details",
      "properties": {
        "description": {
          "description": "Home network description",
          "type": "string"
        },
        "externalId": {
          "description": "`insertOnly`\n\nHome network identifier",
          "type": "string"
        },
        "isActive": {
          "description": "Is home network is active",
          "type": "boolean"
        },
        "name": {
          "description": "Home network name",
          "type": "string"
        }
      },
      "title": "KalturaHomeNetwork"
    },
    "KalturaHomeNetworkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Home networks",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHomeNetwork"
          },
          "type": "array"
        }
      },
      "title": "KalturaHomeNetworkListResponse"
    },
    "KalturaHousehold": {
      "description": "Household details",
      "properties": {
        "concurrentLimit": {
          "description": "`readOnly`\n\nThe max number of concurrent streams in the household",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "Household description",
          "type": "string"
        },
        "devicesLimit": {
          "description": "`readOnly`\n\nThe max number of the devices that can be added to the household",
          "readOnly": true,
          "type": "integer"
        },
        "externalId": {
          "description": "`insertOnly`\n\nHousehold external identifier",
          "type": "string"
        },
        "frequencyNextDeviceAction": {
          "description": "`readOnly`\n\nThe next time a device is allowed to be removed from the household (epoch)",
          "readOnly": true,
          "type": "integer"
        },
        "frequencyNextUserAction": {
          "description": "`readOnly`\n\nThe next time a user is allowed to be removed from the household (epoch)",
          "readOnly": true,
          "type": "integer"
        },
        "householdLimitationsId": {
          "description": "`readOnly`\n\nHousehold limitation module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nHousehold identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isFrequencyEnabled": {
          "description": "`readOnly`\n\nIs household frequency enabled",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "Household name",
          "type": "string"
        },
        "regionId": {
          "description": "`readOnly`\n\nThe households region identifier",
          "readOnly": true,
          "type": "integer"
        },
        "restriction": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdRestriction`\n\nHousehold restriction",
          "enum": [
            "not_restricted",
            "user_master_restricted",
            "device_master_restricted",
            "device_user_master_restricted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOT_RESTRICTED",
            "USER_MASTER_RESTRICTED",
            "DEVICE_MASTER_RESTRICTED",
            "DEVICE_USER_MASTER_RESTRICTED"
          ],
          "x-enumType": "KalturaHouseholdRestriction"
        },
        "state": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdState`\n\nHousehold state",
          "enum": [
            "ok",
            "created_without_npvr_account",
            "suspended",
            "no_users_in_household"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "CREATED_WITHOUT_NPVR_ACCOUNT",
            "SUSPENDED",
            "NO_USERS_IN_HOUSEHOLD"
          ],
          "x-enumType": "KalturaHouseholdState"
        },
        "usersLimit": {
          "description": "`readOnly`\n\nThe max number of the users that can be added to the household",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaHousehold"
    },
    "KalturaHouseholdDevice": {
      "description": "Device details",
      "properties": {
        "activatedOn": {
          "description": "Device activation date (epoch)",
          "type": "integer"
        },
        "brandId": {
          "description": "Device brand identifier",
          "type": "integer"
        },
        "deviceFamilyId": {
          "description": "`readOnly`\n\nDevice family id",
          "readOnly": true,
          "type": "integer"
        },
        "householdId": {
          "description": "Household identifier",
          "type": "integer"
        },
        "name": {
          "description": "Device name",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaDeviceStatus`\n\nDevice state",
          "enum": [
            "PENDING",
            "ACTIVATED",
            "NOT_ACTIVATED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PENDING",
            "ACTIVATED",
            "NOT_ACTIVATED"
          ],
          "x-enumType": "KalturaDeviceStatus"
        },
        "udid": {
          "description": "`insertOnly`\n\nDevice UDID",
          "type": "string"
        }
      },
      "title": "KalturaHouseholdDevice"
    },
    "KalturaHouseholdDeviceFamilyLimitations": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceFamilyBase"
        }
      ],
      "description": "Device family limitations details",
      "properties": {
        "concurrentLimit": {
          "description": "Max number of streams allowed for this family",
          "type": "integer"
        },
        "deviceLimit": {
          "description": "Max number of devices allowed for this family",
          "type": "integer"
        },
        "frequency": {
          "description": "Allowed device change frequency code",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdDeviceFamilyLimitations"
    },
    "KalturaHouseholdDeviceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "deviceFamilyIdIn": {
          "description": "Device family Ids",
          "type": "string"
        },
        "householdIdEqual": {
          "description": "The identifier of the household",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdDeviceFilter"
    },
    "KalturaHouseholdDeviceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdDevice"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdDeviceListResponse"
    },
    "KalturaHouseholdLimitations": {
      "description": "Household limitations details",
      "properties": {
        "concurrentLimit": {
          "description": "`readOnly`\n\nMax number of streams allowed for the household",
          "readOnly": true,
          "type": "integer"
        },
        "deviceFamiliesLimitations": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdDeviceFamilyLimitations"
          },
          "type": "array"
        },
        "deviceFrequency": {
          "description": "`readOnly`\n\nAllowed device change frequency code",
          "readOnly": true,
          "type": "integer"
        },
        "deviceFrequencyDescription": {
          "description": "`readOnly`\n\nAllowed device change frequency description",
          "readOnly": true,
          "type": "string"
        },
        "deviceLimit": {
          "description": "`readOnly`\n\nMax number of devices allowed for the household",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nHousehold limitation module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "`readOnly`\n\nHousehold limitation module name",
          "readOnly": true,
          "type": "string"
        },
        "npvrQuotaInSeconds": {
          "description": "`readOnly`\n\nAllowed NPVR Quota in Seconds",
          "readOnly": true,
          "type": "integer"
        },
        "userFrequency": {
          "description": "`readOnly`\n\nAllowed user change frequency code",
          "readOnly": true,
          "type": "integer"
        },
        "userFrequencyDescription": {
          "description": "`readOnly`\n\nAllowed user change frequency description",
          "readOnly": true,
          "type": "string"
        },
        "usersLimit": {
          "description": "`readOnly`\n\nMax number of users allowed for the household",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdLimitations"
    },
    "KalturaHouseholdPaymentGateway": {
      "properties": {
        "id": {
          "description": "`readOnly`\n\npayment gateway id",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "Payment gateway default (true/false)",
          "type": "boolean"
        },
        "name": {
          "description": "payment gateway name",
          "type": "string"
        },
        "selectedBy": {
          "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
          "enum": [
            "none",
            "account",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "ACCOUNT",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaHouseholdPaymentGatewaySelectedBy"
        }
      },
      "title": "KalturaHouseholdPaymentGateway"
    },
    "KalturaHouseholdPaymentGatewayListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of household payment gateways.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPaymentGateway"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdPaymentGatewayListResponse"
    },
    "KalturaHouseholdPaymentMethod": {
      "properties": {
        "details": {
          "description": "Description of the payment method details",
          "type": "string"
        },
        "externalId": {
          "description": "`insertOnly`\n\nExternal identifier for the household payment method",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nHousehold payment method identifier (internal)",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "`readOnly`\n\nindicates whether the payment method is set as default for the household",
          "readOnly": true,
          "type": "boolean"
        },
        "paymentGatewayId": {
          "description": "Payment-gateway identifier",
          "type": "integer"
        },
        "paymentMethodProfileId": {
          "description": "Payment method profile identifier",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdPaymentMethod"
    },
    "KalturaHouseholdPaymentMethodListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of household payment methods.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdPaymentMethodListResponse"
    },
    "KalturaHouseholdPremiumService": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPremiumService"
        }
      ],
      "description": "Houshold premium service",
      "properties": {},
      "title": "KalturaHouseholdPremiumService"
    },
    "KalturaHouseholdPremiumServiceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Premium services list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPremiumService"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdPremiumServiceListResponse"
    },
    "KalturaHouseholdQuota": {
      "properties": {
        "availableQuota": {
          "description": "`readOnly`\n\nAvailable quota that household has remaining",
          "readOnly": true,
          "type": "integer"
        },
        "householdId": {
          "description": "`readOnly`\n\nHousehold identifier",
          "readOnly": true,
          "type": "integer"
        },
        "totalQuota": {
          "description": "`readOnly`\n\nTotal quota that is allocated to the household",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdQuota"
    },
    "KalturaHouseholdUser": {
      "description": "Household user",
      "properties": {
        "householdId": {
          "description": "The identifier of the household",
          "type": "integer"
        },
        "householdMasterUsername": {
          "description": "`insertOnly`\n\nThe username of the household master for adding a user in status pending for the household master to approve",
          "type": "string"
        },
        "isDefault": {
          "description": "`readOnly`\n\nTrue if the user is a default user",
          "readOnly": true,
          "type": "boolean"
        },
        "isMaster": {
          "description": "True if the user added as master use",
          "type": "boolean"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdUserStatus`\n\nThe status of the user in the household",
          "enum": [
            "OK",
            "PENDING"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "PENDING"
          ],
          "x-enumType": "KalturaHouseholdUserStatus"
        },
        "userId": {
          "description": "The identifier of the user",
          "type": "string"
        }
      },
      "title": "KalturaHouseholdUser"
    },
    "KalturaHouseholdUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "householdIdEqual": {
          "description": "The identifier of the household",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdUserFilter"
    },
    "KalturaHouseholdUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Household users list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdUser"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdUserListResponse"
    },
    "KalturaHouseholdWithHolder": {
      "description": "Holder object for Household With enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaHouseholdWith`",
          "enum": [
            "users_base_info",
            "users_full_info"
          ],
          "type": "string",
          "x-enumLabels": [
            "USERS_BASE_INFO",
            "USERS_FULL_INFO"
          ],
          "x-enumType": "KalturaHouseholdWith"
        }
      },
      "title": "KalturaHouseholdWithHolder"
    },
    "KalturaInboxMessage": {
      "properties": {
        "createdAt": {
          "description": "`readOnly`\n\nCreated at",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nmessage id",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "message",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaInboxMessageStatus`\n\nStatus",
          "enum": [
            "Unread",
            "Read",
            "Deleted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNREAD",
            "READ",
            "DELETED"
          ],
          "x-enumType": "KalturaInboxMessageStatus"
        },
        "type": {
          "description": "Enum Type: `KalturaInboxMessageType`\n\nType",
          "enum": [
            "SystemAnnouncement",
            "Followed"
          ],
          "type": "string",
          "x-enumLabels": [
            "SYSTEMANNOUNCEMENT",
            "FOLLOWED"
          ],
          "x-enumType": "KalturaInboxMessageType"
        },
        "url": {
          "description": "url",
          "type": "string"
        }
      },
      "title": "KalturaInboxMessage"
    },
    "KalturaInboxMessageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "description": "createdAtGreaterThanOrEqual",
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "description": "createdAtLessThanOrEqual",
          "type": "integer"
        },
        "typeIn": {
          "description": "List of inbox message types to search within.",
          "type": "string"
        }
      },
      "title": "KalturaInboxMessageFilter"
    },
    "KalturaInboxMessageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of inbox message.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaInboxMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaInboxMessageListResponse"
    },
    "KalturaIntegerValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of ints",
      "properties": {
        "value": {
          "type": "integer"
        }
      },
      "title": "KalturaIntegerValue"
    },
    "KalturaItemPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "PPV price details",
      "properties": {
        "fileId": {
          "description": "Media file identifier",
          "type": "integer"
        },
        "ppvPriceDetails": {
          "items": {
            "$ref": "#/definitions/KalturaPPVItemPriceDetails"
          },
          "type": "array"
        }
      },
      "title": "KalturaItemPrice"
    },
    "KalturaItemPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ItemPrice list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaItemPrice"
          },
          "type": "array"
        }
      },
      "title": "KalturaItemPriceListResponse"
    },
    "KalturaKeyValue": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "KalturaKeyValue"
    },
    "KalturaLicensedUrl": {
      "properties": {
        "altUrl": {
          "description": "An alternate URL to use in case the main fails",
          "type": "string"
        },
        "mainUrl": {
          "description": "Main licensed URL",
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrl"
    },
    "KalturaLicensedUrlBaseRequest": {
      "properties": {
        "assetId": {
          "description": "Asset identifier",
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrlBaseRequest"
    },
    "KalturaLicensedUrlEpgRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlMediaRequest"
        }
      ],
      "properties": {
        "startDate": {
          "description": "The start date of the stream (epoch)",
          "type": "integer"
        },
        "streamType": {
          "description": "Enum Type: `KalturaStreamType`\n\nThe stream type to get the URL for",
          "enum": [
            "catchup",
            "start_over",
            "trick_play"
          ],
          "type": "string",
          "x-enumLabels": [
            "CATCHUP",
            "START_OVER",
            "TRICK_PLAY"
          ],
          "x-enumType": "KalturaStreamType"
        }
      },
      "title": "KalturaLicensedUrlEpgRequest"
    },
    "KalturaLicensedUrlMediaRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        }
      ],
      "properties": {
        "baseUrl": {
          "description": "Base URL for the licensed URLs",
          "type": "string"
        },
        "contentId": {
          "description": "Identifier of the content to get the link for (file identifier)",
          "type": "integer"
        }
      },
      "title": "KalturaLicensedUrlMediaRequest"
    },
    "KalturaLicensedUrlRecordingRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        }
      ],
      "properties": {
        "fileType": {
          "description": "The file type for the URL",
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrlRecordingRequest"
    },
    "KalturaListResponse": {
      "description": "Base list wrapper",
      "properties": {
        "totalCount": {
          "description": "Total items",
          "type": "integer"
        }
      },
      "title": "KalturaListResponse"
    },
    "KalturaLoginResponse": {
      "properties": {
        "loginSession": {
          "$ref": "#/definitions/KalturaLoginSession"
        },
        "user": {
          "$ref": "#/definitions/KalturaOTTUser"
        }
      },
      "title": "KalturaLoginResponse"
    },
    "KalturaLoginSession": {
      "description": "Login response",
      "properties": {
        "ks": {
          "description": "Access token in a KS format",
          "type": "string"
        },
        "refreshToken": {
          "description": "Refresh Token",
          "type": "string"
        }
      },
      "title": "KalturaLoginSession"
    },
    "KalturaLongValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of longs",
      "properties": {
        "value": {
          "type": "integer"
        }
      },
      "title": "KalturaLongValue"
    },
    "KalturaMediaAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "Media-asset info",
      "properties": {
        "catchUpBuffer": {
          "description": "Catch-up buffer",
          "type": "integer"
        },
        "enableRecordingPlaybackNonEntitledChannel": {
          "description": "`readOnly`\n\nEnable Recording playback for non entitled channel",
          "readOnly": true,
          "type": "boolean"
        },
        "externalIds": {
          "description": "External identifiers",
          "type": "string"
        },
        "trickPlayBuffer": {
          "description": "Trick-play buffer",
          "type": "integer"
        }
      },
      "title": "KalturaMediaAsset"
    },
    "KalturaMediaFile": {
      "description": "Media file details",
      "properties": {
        "assetId": {
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "duration": {
          "description": "Duration of the media file",
          "type": "integer"
        },
        "externalId": {
          "description": "External identifier for the media file",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nFile unique identifier",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "Device types as defined in the system",
          "type": "string"
        },
        "url": {
          "description": "URL of the media file to be played",
          "type": "string"
        }
      },
      "title": "KalturaMediaFile"
    },
    "KalturaMediaImage": {
      "description": "Image details",
      "properties": {
        "height": {
          "description": "Image height",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nImage ID",
          "readOnly": true,
          "type": "string"
        },
        "isDefault": {
          "description": "Determined whether image was taken from default configuration or not",
          "type": "boolean"
        },
        "ratio": {
          "description": "Image aspect ratio",
          "type": "string"
        },
        "url": {
          "description": "Image URL",
          "type": "string"
        },
        "version": {
          "description": "Image Version",
          "type": "integer"
        },
        "width": {
          "description": "Image width",
          "type": "integer"
        }
      },
      "title": "KalturaMediaImage"
    },
    "KalturaMessageTemplate": {
      "properties": {
        "action": {
          "description": "an optional action",
          "type": "string"
        },
        "assetType": {
          "description": "Enum Type: `KalturaOTTAssetType`\n\nTemplate type. Possible values: Series",
          "enum": [
            0
          ],
          "type": "integer",
          "x-enumLabels": [
            "SERIES"
          ],
          "x-enumType": "KalturaOTTAssetType"
        },
        "dateFormat": {
          "description": "Default date format for the date &amp; time entries used in the template",
          "type": "string"
        },
        "message": {
          "description": "The message template with placeholders",
          "type": "string"
        },
        "sound": {
          "description": "Sound file name to play upon message arrival to the device (if supported by target device)",
          "type": "string"
        },
        "url": {
          "description": "URL template for deep linking. Example - /app/location/{mediaId}",
          "type": "string"
        }
      },
      "title": "KalturaMessageTemplate"
    },
    "KalturaMeta": {
      "description": "Asset meta",
      "properties": {
        "assetType": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type this meta is related to",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "fieldName": {
          "description": "Enum Type: `KalturaMetaFieldName`\n\nMeta system field name",
          "enum": [
            "NONE",
            "SERIES_ID",
            "SEASON_NUMBER",
            "EPISODE_NUMBER"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "SERIES_ID",
            "SEASON_NUMBER",
            "EPISODE_NUMBER"
          ],
          "x-enumType": "KalturaMetaFieldName"
        },
        "name": {
          "description": "Meta name for the partner",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaMetaType`\n\nMeta value type",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "STRING_ARRAY"
          ],
          "type": "string",
          "x-enumLabels": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "STRING_ARRAY"
          ],
          "x-enumType": "KalturaMetaType"
        }
      },
      "title": "KalturaMeta"
    },
    "KalturaMetaFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Meta filter",
      "properties": {
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "fieldNameEqual": {
          "description": "Enum Type: `KalturaMetaFieldName`\n\nMeta system field name to filter by",
          "enum": [
            "NONE",
            "SERIES_ID",
            "SEASON_NUMBER",
            "EPISODE_NUMBER"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "SERIES_ID",
            "SEASON_NUMBER",
            "EPISODE_NUMBER"
          ],
          "x-enumType": "KalturaMetaFieldName"
        },
        "fieldNameNotEqual": {
          "description": "Enum Type: `KalturaMetaFieldName`\n\nMeta system field name to filter by",
          "enum": [
            "NONE",
            "SERIES_ID",
            "SEASON_NUMBER",
            "EPISODE_NUMBER"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "SERIES_ID",
            "SEASON_NUMBER",
            "EPISODE_NUMBER"
          ],
          "x-enumType": "KalturaMetaFieldName"
        },
        "typeEqual": {
          "description": "Enum Type: `KalturaMetaType`\n\nMeta type to filter by",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "STRING_ARRAY"
          ],
          "type": "string",
          "x-enumLabels": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "STRING_ARRAY"
          ],
          "x-enumType": "KalturaMetaType"
        }
      },
      "title": "KalturaMetaFilter"
    },
    "KalturaMetaListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Meta list response",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMeta"
          },
          "type": "array"
        }
      },
      "title": "KalturaMetaListResponse"
    },
    "KalturaNetworkActionStatus": {
      "properties": {
        "network": {
          "description": "Enum Type: `KalturaSocialNetwork`",
          "enum": [
            "facebook"
          ],
          "type": "string",
          "x-enumLabels": [
            "FACEBOOK"
          ],
          "x-enumType": "KalturaSocialNetwork"
        },
        "status": {
          "description": "Enum Type: `KalturaSocialStatus`",
          "enum": [
            "error",
            "ok",
            "user_does_not_exist",
            "no_user_social_settings_found",
            "asset_already_liked",
            "not_allowed",
            "invalid_parameters",
            "no_facebook_action",
            "asset_already_rated",
            "asset_dose_not_exists",
            "invalid_platform_request",
            "invalid_access_token"
          ],
          "type": "string",
          "x-enumLabels": [
            "ERROR",
            "OK",
            "USER_DOES_NOT_EXIST",
            "NO_USER_SOCIAL_SETTINGS_FOUND",
            "ASSET_ALREADY_LIKED",
            "NOT_ALLOWED",
            "INVALID_PARAMETERS",
            "NO_FACEBOOK_ACTION",
            "ASSET_ALREADY_RATED",
            "ASSET_DOSE_NOT_EXISTS",
            "INVALID_PLATFORM_REQUEST",
            "INVALID_ACCESS_TOKEN"
          ],
          "x-enumType": "KalturaSocialStatus"
        }
      },
      "title": "KalturaNetworkActionStatus"
    },
    "KalturaNotificationsPartnerSettings": {
      "properties": {
        "automaticIssueFollowNotification": {
          "description": "Automatic issue follow notification",
          "type": "boolean"
        },
        "inboxEnabled": {
          "description": "Inbox enabled",
          "type": "boolean"
        },
        "messageTTLDays": {
          "description": "Message TTL in days",
          "type": "integer"
        },
        "pushAdapterUrl": {
          "description": "Push adapter URL",
          "type": "string"
        },
        "pushEndHour": {
          "description": "Window end time (UTC) for send automated push messages",
          "type": "integer"
        },
        "pushNotificationEnabled": {
          "description": "Push notification capability is enabled for the account",
          "type": "boolean"
        },
        "pushStartHour": {
          "description": "Window start time (UTC) for send automated push messages",
          "type": "integer"
        },
        "pushSystemAnnouncementsEnabled": {
          "description": "System announcement capability is enabled for the account",
          "type": "boolean"
        },
        "topicExpirationDurationDays": {
          "description": "Topic expiration duration in days",
          "type": "integer"
        }
      },
      "title": "KalturaNotificationsPartnerSettings"
    },
    "KalturaNotificationsSettings": {
      "properties": {
        "pushFollowEnabled": {
          "description": "Specify if the user will be notified for followed content via push. (requires push_notification_enabled to be enabled)",
          "type": "boolean"
        },
        "pushNotificationEnabled": {
          "description": "Specify if the user want to receive push notifications or not",
          "type": "boolean"
        }
      },
      "title": "KalturaNotificationsSettings"
    },
    "KalturaOSSAdapterBaseProfile": {
      "description": "OSS adapter basic",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nOSS adapter id",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "OSS adapter name",
          "type": "string"
        }
      },
      "title": "KalturaOSSAdapterBaseProfile"
    },
    "KalturaOSSAdapterProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOSSAdapterBaseProfile"
        }
      ],
      "description": "OSS Adapter",
      "properties": {
        "adapterUrl": {
          "description": "OSS adapter adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "OSS adapter external identifier",
          "type": "string"
        },
        "isActive": {
          "description": "OSS adapter active status",
          "type": "boolean"
        },
        "ossAdapterSettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nShared Secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaOSSAdapterProfile"
    },
    "KalturaOSSAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "OSS adapter-profiles list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaOSSAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaOSSAdapterProfileListResponse"
    },
    "KalturaOTTCategory": {
      "description": "Category details",
      "properties": {
        "channels": {
          "items": {
            "$ref": "#/definitions/KalturaChannel"
          },
          "type": "array"
        },
        "childCategories": {
          "items": {
            "$ref": "#/definitions/KalturaOTTCategory"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the category",
          "readOnly": true,
          "type": "integer"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          },
          "type": "array"
        },
        "name": {
          "description": "Category name",
          "type": "string"
        },
        "parentCategoryId": {
          "description": "Category parent identifier",
          "type": "integer"
        }
      },
      "title": "KalturaOTTCategory"
    },
    "KalturaOTTUser": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseOTTUser"
        }
      ],
      "description": "User",
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "affiliateCode": {
          "description": "`insertOnly`\n\nAffiliate code",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "countryId": {
          "description": "Country identifier",
          "type": "integer"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "externalId": {
          "description": "`insertOnly`\n\nExternal user identifier",
          "type": "string"
        },
        "householdId": {
          "description": "`readOnly`\n\nHousehold identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isHouseholdMaster": {
          "description": "`readOnly`\n\nIs the user the household master",
          "readOnly": true,
          "type": "boolean"
        },
        "phone": {
          "description": "Phone",
          "type": "string"
        },
        "suspensionState": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdSuspensionState`\n\nSuspension state",
          "enum": [
            "NOT_SUSPENDED",
            "SUSPENDED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOT_SUSPENDED",
            "SUSPENDED"
          ],
          "x-enumType": "KalturaHouseholdSuspensionState"
        },
        "userState": {
          "description": "`readOnly`\n\nEnum Type: `KalturaUserState`\n\nUser state",
          "enum": [
            "ok",
            "user_with_no_household",
            "user_created_with_no_role",
            "user_not_activated"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "USER_WITH_NO_HOUSEHOLD",
            "USER_CREATED_WITH_NO_ROLE",
            "USER_NOT_ACTIVATED"
          ],
          "x-enumType": "KalturaUserState"
        },
        "userType": {
          "$ref": "#/definitions/KalturaOTTUserType"
        },
        "zip": {
          "description": "Zip code",
          "type": "string"
        }
      },
      "title": "KalturaOTTUser"
    },
    "KalturaOTTUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "OTT User filter",
      "properties": {
        "externalIdEqual": {
          "description": "User external identifier",
          "type": "string"
        },
        "idIn": {
          "description": "List of user identifiers separated by &#39;,&#39;",
          "type": "string"
        },
        "usernameEqual": {
          "description": "Username",
          "type": "string"
        }
      },
      "title": "KalturaOTTUserFilter"
    },
    "KalturaOTTUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Users list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaOTTUser"
          },
          "type": "array"
        }
      },
      "title": "KalturaOTTUserListResponse"
    },
    "KalturaOTTUserType": {
      "description": "User type",
      "properties": {
        "description": {
          "description": "User type description",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUser type identifier",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaOTTUserType"
    },
    "KalturaObjectBase": {},
    "KalturaPPVItemPriceDetails": {
      "description": "PPV item price details",
      "properties": {
        "collectionId": {
          "description": "The identifier of the relevant collection",
          "type": "string"
        },
        "discountEndDate": {
          "description": "Discount end date",
          "type": "integer"
        },
        "endDate": {
          "description": "If the item already purchased - until when the user can watch the item",
          "type": "integer"
        },
        "firstDeviceName": {
          "description": "If the item already purchased and played - the name of the device on which it was first played",
          "type": "string"
        },
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "isInCancelationPeriod": {
          "description": "If waiver period is enabled - donates whether the user is still in the cancelation window",
          "type": "boolean"
        },
        "isSubscriptionOnly": {
          "description": "Denotes whether this object is available only as part of a subscription or can be sold separately",
          "type": "boolean"
        },
        "ppvDescriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "ppvModuleId": {
          "description": "The associated PPV module identifier",
          "type": "string"
        },
        "ppvProductCode": {
          "description": "The PPV product code",
          "type": "string"
        },
        "prePaidId": {
          "description": "The identifier of the relevant pre paid",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseStatus": {
          "description": "Enum Type: `KalturaPurchaseStatus`\n\nSubscription purchase status",
          "enum": [
            "ppv_purchased",
            "free",
            "for_purchase_subscription_only",
            "subscription_purchased",
            "for_purchase",
            "subscription_purchased_wrong_currency",
            "pre_paid_purchased",
            "geo_commerce_blocked",
            "entitled_to_preview_module",
            "first_device_limitation",
            "collection_purchased",
            "user_suspended",
            "not_for_purchase"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV_PURCHASED",
            "FREE",
            "FOR_PURCHASE_SUBSCRIPTION_ONLY",
            "SUBSCRIPTION_PURCHASED",
            "FOR_PURCHASE",
            "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY",
            "PRE_PAID_PURCHASED",
            "GEO_COMMERCE_BLOCKED",
            "ENTITLED_TO_PREVIEW_MODULE",
            "FIRST_DEVICE_LIMITATION",
            "COLLECTION_PURCHASED",
            "USER_SUSPENDED",
            "NOT_FOR_PURCHASE"
          ],
          "x-enumType": "KalturaPurchaseStatus"
        },
        "purchaseUserId": {
          "description": "If the item already purchased - the identifier of the user (in the household) who purchased this item",
          "type": "string"
        },
        "purchasedMediaFileId": {
          "description": "If the item already purchased - the identifier of the purchased file",
          "type": "integer"
        },
        "relatedMediaFileIds": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "startDate": {
          "description": "If the item already purchased - since when the user can start watching the item",
          "type": "integer"
        },
        "subscriptionId": {
          "description": "The identifier of the relevant subscription",
          "type": "string"
        }
      },
      "title": "KalturaPPVItemPriceDetails"
    },
    "KalturaParentalRule": {
      "description": "Parental rule",
      "properties": {
        "blockAnonymousAccess": {
          "description": "Content that correspond to this rule is not available for guests",
          "type": "boolean"
        },
        "description": {
          "description": "Explanatory description",
          "type": "string"
        },
        "epgTag": {
          "description": "EPG asset tag ID to in which to look for corresponding trigger values",
          "type": "integer"
        },
        "epgTagValues": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nUnique parental rule identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "Is the rule the default rule of the account",
          "type": "boolean"
        },
        "mediaTag": {
          "description": "Media asset tag ID to in which to look for corresponding trigger values",
          "type": "integer"
        },
        "mediaTagValues": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "name": {
          "description": "Rule display name",
          "type": "string"
        },
        "order": {
          "description": "Rule order within the full list of rules",
          "type": "integer"
        },
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere was this rule defined account, household or user",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "type": "string",
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ],
          "x-enumType": "KalturaRuleLevel"
        },
        "ruleType": {
          "description": "Enum Type: `KalturaParentalRuleType`\n\nRule type – Movies, TV series or both",
          "enum": [
            "ALL",
            "MOVIES",
            "TV_SERIES"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "MOVIES",
            "TV_SERIES"
          ],
          "x-enumType": "KalturaParentalRuleType"
        }
      },
      "title": "KalturaParentalRule"
    },
    "KalturaParentalRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "enum": [
            "user",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaEntityReferenceBy"
        }
      },
      "title": "KalturaParentalRuleFilter"
    },
    "KalturaParentalRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ParentalRules list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaParentalRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaParentalRuleListResponse"
    },
    "KalturaPartnerConfiguration": {
      "description": "`abstract`\n\nPartner  base configuration",
      "properties": {},
      "title": "KalturaPartnerConfiguration"
    },
    "KalturaPartnerConfigurationHolder": {
      "description": "Holder object for channel enrichment enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaPartnerConfigurationType`",
          "enum": [
            "DefaultPaymentGateway",
            "EnablePaymentGatewaySelection",
            "OSSAdapter"
          ],
          "type": "string",
          "x-enumLabels": [
            "DEFAULTPAYMENTGATEWAY",
            "ENABLEPAYMENTGATEWAYSELECTION",
            "OSSADAPTER"
          ],
          "x-enumType": "KalturaPartnerConfigurationType"
        }
      },
      "title": "KalturaPartnerConfigurationHolder"
    },
    "KalturaPaymentGatewayBaseProfile": {
      "description": "Payment gateway base profile",
      "properties": {
        "id": {
          "description": "`readOnly`\n\npayment gateway id",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "Payment gateway default (true/false)",
          "type": "boolean"
        },
        "name": {
          "description": "payment gateway name",
          "type": "string"
        },
        "selectedBy": {
          "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
          "enum": [
            "none",
            "account",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "ACCOUNT",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaHouseholdPaymentGatewaySelectedBy"
        }
      },
      "title": "KalturaPaymentGatewayBaseProfile"
    },
    "KalturaPaymentGatewayConfiguration": {
      "properties": {
        "paymentGatewayConfiguration": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentGatewayConfiguration"
    },
    "KalturaPaymentGatewayProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPaymentGatewayBaseProfile"
        }
      ],
      "description": "Payment gateway profile",
      "properties": {
        "adapterUrl": {
          "description": "Payment gateway adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "Payment gateway external identifier",
          "type": "string"
        },
        "isActive": {
          "description": "Payment gateway is active status",
          "type": "integer"
        },
        "paymentGatewaySettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "pendingInterval": {
          "description": "Pending Interval in minutes",
          "type": "integer"
        },
        "pendingRetries": {
          "description": "Pending Retries",
          "type": "integer"
        },
        "renewIntervalMinutes": {
          "description": "Renew Interval Minutes",
          "type": "integer"
        },
        "renewStartMinutes": {
          "description": "Renew Start Minutes",
          "type": "integer"
        },
        "renewUrl": {
          "description": "Payment gateway renew URL",
          "type": "string"
        },
        "sharedSecret": {
          "description": "Shared Secret",
          "type": "string"
        },
        "statusUrl": {
          "description": "Payment gateway status URL",
          "type": "string"
        },
        "transactUrl": {
          "description": "Payment gateway transact URL",
          "type": "string"
        }
      },
      "title": "KalturaPaymentGatewayProfile"
    },
    "KalturaPaymentGatewayProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "PaymentGatewayProfile list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPaymentGatewayProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentGatewayProfileListResponse"
    },
    "KalturaPaymentMethodProfile": {
      "properties": {
        "allowMultiInstance": {
          "description": "Indicates whether the payment method allow multiple instances",
          "type": "boolean"
        },
        "id": {
          "description": "`readOnly`\n\nPayment method identifier (internal)",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Payment method name",
          "type": "string"
        },
        "paymentGatewayId": {
          "description": "Payment gateway identifier (internal)",
          "type": "integer"
        }
      },
      "title": "KalturaPaymentMethodProfile"
    },
    "KalturaPaymentMethodProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "paymentGatewayIdEqual": {
          "description": "Payment gateway identifier to list the payment methods for",
          "type": "integer"
        }
      },
      "title": "KalturaPaymentMethodProfileFilter"
    },
    "KalturaPaymentMethodProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of payment method profiles.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPaymentMethodProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentMethodProfileListResponse"
    },
    "KalturaPermission": {
      "properties": {
        "id": {
          "description": "`readOnly`\n\nPermission identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Permission name",
          "type": "string"
        },
        "permissionItems": {
          "items": {
            "$ref": "#/definitions/KalturaPermissionItem"
          },
          "type": "array"
        }
      },
      "title": "KalturaPermission"
    },
    "KalturaPermissionItem": {
      "properties": {
        "id": {
          "description": "`readOnly`\n\nPermission item identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Permission item name",
          "type": "string"
        }
      },
      "title": "KalturaPermissionItem"
    },
    "KalturaPersonalFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFeed"
        }
      ],
      "properties": {},
      "title": "KalturaPersonalFeed"
    },
    "KalturaPersonalFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {},
      "title": "KalturaPersonalFeedFilter"
    },
    "KalturaPersonalFeedListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message follow data.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPersonalFeed"
          },
          "type": "array"
        }
      },
      "title": "KalturaPersonalFeedListResponse"
    },
    "KalturaPin": {
      "description": "PIN and its origin of definition",
      "properties": {
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "type": "string",
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ],
          "x-enumType": "KalturaRuleLevel"
        },
        "pin": {
          "description": "PIN code",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaPinType`\n\nPIN type",
          "enum": [
            "purchase",
            "parental"
          ],
          "type": "string",
          "x-enumLabels": [
            "PURCHASE",
            "PARENTAL"
          ],
          "x-enumType": "KalturaPinType"
        }
      },
      "title": "KalturaPin"
    },
    "KalturaPinResponse": {
      "description": "PIN and its origin of definition",
      "properties": {
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "type": "string",
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ],
          "x-enumType": "KalturaRuleLevel"
        },
        "pin": {
          "description": "PIN code",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaPinType`\n\nPIN type",
          "enum": [
            "purchase",
            "parental"
          ],
          "type": "string",
          "x-enumLabels": [
            "PURCHASE",
            "PARENTAL"
          ],
          "x-enumType": "KalturaPinType"
        }
      },
      "title": "KalturaPinResponse"
    },
    "KalturaPlayerAssetData": {
      "description": "Kaltura bookmark data",
      "properties": {
        "action": {
          "description": "Action: HIT/PLAY/STOP/PAUSE/FIRST_PLAY/SWOOSH/FULL_SCREEN/SEND_TO_FRIEND/LOAD/FULL_SCREEN_EXIT/FINISH/BITRATE_CHANGE/ERROR/NONE",
          "type": "string"
        },
        "averageBitrate": {
          "description": "Average Bitrate",
          "type": "integer"
        },
        "currentBitrate": {
          "description": "Current Bitrate",
          "type": "integer"
        },
        "location": {
          "description": "Location",
          "type": "integer"
        },
        "totalBitrate": {
          "description": "Total Bitrate",
          "type": "integer"
        }
      },
      "title": "KalturaPlayerAssetData"
    },
    "KalturaPpv": {
      "description": "PPV details",
      "properties": {
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "descriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "discountModules": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "fileTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "firstDeviceLimitation": {
          "description": "Indicates whether or not this ppv can be consumed only on the first device",
          "type": "boolean"
        },
        "id": {
          "description": "PPV identifier",
          "type": "string"
        },
        "isSubscriptionOnly": {
          "description": "Indicates whether or not this ppv can be purchased standalone or only as part of a subscription",
          "type": "boolean"
        },
        "name": {
          "description": "the name for the ppv",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPriceDetails"
        },
        "productCode": {
          "description": "Product code for the ppv",
          "type": "string"
        },
        "usageModule": {
          "$ref": "#/definitions/KalturaUsageModule"
        }
      },
      "title": "KalturaPpv"
    },
    "KalturaPpvPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "PPV price details",
      "properties": {
        "collectionId": {
          "description": "The identifier of the relevant collection",
          "type": "string"
        },
        "discountEndDate": {
          "description": "Discount end date",
          "type": "integer"
        },
        "endDate": {
          "description": "If the item already purchased - until when the user can watch the item",
          "type": "integer"
        },
        "fileId": {
          "description": "Media file identifier",
          "type": "integer"
        },
        "firstDeviceName": {
          "description": "If the item already purchased and played - the name of the device on which it was first played",
          "type": "string"
        },
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "isInCancelationPeriod": {
          "description": "If waiver period is enabled - donates whether the user is still in the cancelation window",
          "type": "boolean"
        },
        "isSubscriptionOnly": {
          "description": "Denotes whether this object is available only as part of a subscription or can be sold separately",
          "type": "boolean"
        },
        "ppvDescriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "ppvModuleId": {
          "description": "The associated PPV module identifier",
          "type": "string"
        },
        "ppvProductCode": {
          "description": "The PPV product code",
          "type": "string"
        },
        "prePaidId": {
          "description": "The identifier of the relevant pre paid",
          "type": "string"
        },
        "purchaseUserId": {
          "description": "If the item already purchased - the identifier of the user (in the household) who purchased this item",
          "type": "string"
        },
        "purchasedMediaFileId": {
          "description": "If the item already purchased - the identifier of the purchased file",
          "type": "integer"
        },
        "relatedMediaFileIds": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "startDate": {
          "description": "If the item already purchased - since when the user can start watching the item",
          "type": "integer"
        },
        "subscriptionId": {
          "description": "The identifier of the relevant subscription",
          "type": "string"
        }
      },
      "title": "KalturaPpvPrice"
    },
    "KalturaPremiumService": {
      "description": "Premium service",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nService identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Service name / description",
          "type": "string"
        }
      },
      "title": "KalturaPremiumService"
    },
    "KalturaPreviewModule": {
      "description": "Preview module",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nPreview module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "lifeCycle": {
          "description": "Preview module life cycle - for how long the preview module is active",
          "type": "integer"
        },
        "name": {
          "description": "Preview module name",
          "type": "string"
        },
        "nonRenewablePeriod": {
          "description": "The time you can&#39;t buy the item to which the preview module is assigned to again",
          "type": "integer"
        }
      },
      "title": "KalturaPreviewModule"
    },
    "KalturaPrice": {
      "description": "Price",
      "properties": {
        "amount": {
          "description": "Price",
          "type": "number"
        },
        "currency": {
          "description": "Currency",
          "type": "string"
        },
        "currencySign": {
          "description": "Currency Sign",
          "type": "string"
        }
      },
      "title": "KalturaPrice"
    },
    "KalturaPriceDetails": {
      "description": "Price details",
      "properties": {
        "descriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "id": {
          "description": "The price code identifier",
          "type": "integer"
        },
        "name": {
          "description": "The price code name",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        }
      },
      "title": "KalturaPriceDetails"
    },
    "KalturaPricePlan": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUsageModule"
        }
      ],
      "description": "Price plan",
      "properties": {
        "discountId": {
          "description": "The discount module identifier of the price plan",
          "type": "integer"
        },
        "isRenewable": {
          "description": "Denotes whether or not this object can be renewed",
          "type": "boolean"
        },
        "priceId": {
          "description": "Unique identifier associated with this object&#39;s price",
          "type": "integer"
        },
        "renewalsNumber": {
          "description": "Defines the number of times the module will be renewed (for the life_cycle period)",
          "type": "integer"
        }
      },
      "title": "KalturaPricePlan"
    },
    "KalturaProductPrice": {
      "description": "`abstract`",
      "properties": {
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "productId": {
          "description": "Product identifier",
          "type": "string"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nProduct Type",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "purchaseStatus": {
          "description": "Enum Type: `KalturaPurchaseStatus`\n\nProduct purchase status",
          "enum": [
            "ppv_purchased",
            "free",
            "for_purchase_subscription_only",
            "subscription_purchased",
            "for_purchase",
            "subscription_purchased_wrong_currency",
            "pre_paid_purchased",
            "geo_commerce_blocked",
            "entitled_to_preview_module",
            "first_device_limitation",
            "collection_purchased",
            "user_suspended",
            "not_for_purchase"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV_PURCHASED",
            "FREE",
            "FOR_PURCHASE_SUBSCRIPTION_ONLY",
            "SUBSCRIPTION_PURCHASED",
            "FOR_PURCHASE",
            "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY",
            "PRE_PAID_PURCHASED",
            "GEO_COMMERCE_BLOCKED",
            "ENTITLED_TO_PREVIEW_MODULE",
            "FIRST_DEVICE_LIMITATION",
            "COLLECTION_PURCHASED",
            "USER_SUSPENDED",
            "NOT_FOR_PURCHASE"
          ],
          "x-enumType": "KalturaPurchaseStatus"
        }
      },
      "title": "KalturaProductPrice"
    },
    "KalturaProductPriceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "couponCodeEqual": {
          "description": "Discount coupon code",
          "type": "string"
        },
        "fileIdIn": {
          "description": "Comma separated media files identifiers",
          "type": "string"
        },
        "isLowest": {
          "description": "A flag that indicates if only the lowest price of an item should return",
          "type": "boolean"
        },
        "subscriptionIdIn": {
          "description": "Comma separated subscriptions identifiers",
          "type": "string"
        }
      },
      "title": "KalturaProductPriceFilter"
    },
    "KalturaProductPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaProductPrice"
          },
          "type": "array"
        }
      },
      "title": "KalturaProductPriceListResponse"
    },
    "KalturaProductsPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaProductPrice"
          },
          "type": "array"
        }
      },
      "title": "KalturaProductsPriceListResponse"
    },
    "KalturaProgramAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "Program-asset info",
      "properties": {
        "crid": {
          "description": "Unique identifier for the program",
          "type": "string"
        },
        "epgChannelId": {
          "description": "EPG channel identifier",
          "type": "integer"
        },
        "epgId": {
          "description": "EPG identifier",
          "type": "string"
        },
        "relatedMediaId": {
          "description": "Ralated media identifier",
          "type": "integer"
        }
      },
      "title": "KalturaProgramAsset"
    },
    "KalturaPurchase": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        }
      ],
      "properties": {
        "adapterData": {
          "description": "Additional data for the adapter",
          "type": "string"
        },
        "coupon": {
          "description": "Coupon code",
          "type": "string"
        },
        "currency": {
          "description": "Identifier for paying currency, according to ISO 4217",
          "type": "string"
        },
        "paymentGatewayId": {
          "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
          "type": "integer"
        },
        "paymentMethodId": {
          "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
          "type": "integer"
        },
        "price": {
          "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
          "type": "number"
        }
      },
      "title": "KalturaPurchase"
    },
    "KalturaPurchaseBase": {
      "properties": {
        "contentId": {
          "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
          "type": "integer"
        },
        "productId": {
          "description": "Identifier for the package from which this content is offered",
          "type": "integer"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaPurchaseBase"
    },
    "KalturaPurchaseSession": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchase"
        }
      ],
      "properties": {
        "previewModuleId": {
          "description": "Preview module identifier (relevant only for subscription)",
          "type": "integer"
        }
      },
      "title": "KalturaPurchaseSession"
    },
    "KalturaPurchaseSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPin"
        }
      ],
      "description": "Purchase settings and PIN",
      "properties": {
        "permission": {
          "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
          "enum": [
            "block",
            "ask",
            "allow"
          ],
          "type": "string",
          "x-enumLabels": [
            "BLOCK",
            "ASK",
            "ALLOW"
          ],
          "x-enumType": "KalturaPurchaseSettingsType"
        }
      },
      "title": "KalturaPurchaseSettings"
    },
    "KalturaPushParams": {
      "properties": {
        "externalToken": {
          "description": "External token",
          "type": "string"
        },
        "token": {
          "description": "Token",
          "type": "string"
        }
      },
      "title": "KalturaPushParams"
    },
    "KalturaRecommendationProfile": {
      "description": "PaymentGW",
      "properties": {
        "adapterUrl": {
          "description": "recommendation engine adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "recommendation engine external identifier",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nrecommendation engine id",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "recommendation engine is active status",
          "type": "boolean"
        },
        "name": {
          "description": "recommendation engine name",
          "type": "string"
        },
        "recommendationEngineSettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nShared Secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaRecommendationProfile"
    },
    "KalturaRecommendationProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of recommendation profiles.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRecommendationProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaRecommendationProfileListResponse"
    },
    "KalturaRecording": {
      "properties": {
        "assetId": {
          "description": "Kaltura unique ID representing the program identifier",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the recording created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nKaltura unique ID representing the recording identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isProtected": {
          "description": "`readOnly`\n\nSpecifies whether or not the recording is protected",
          "readOnly": true,
          "type": "boolean"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaRecordingStatus`\n\nRecording state: scheduled/recording/recorded/canceled/failed/does_not_exists/deleted",
          "enum": [
            "SCHEDULED",
            "RECORDING",
            "RECORDED",
            "CANCELED",
            "FAILED",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SCHEDULED",
            "RECORDING",
            "RECORDED",
            "CANCELED",
            "FAILED",
            "DELETED"
          ],
          "x-enumType": "KalturaRecordingStatus"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaRecordingType`\n\nRecording Type: single/season/series",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ],
          "x-enumType": "KalturaRecordingType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the recording last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer"
        },
        "viewableUntilDate": {
          "description": "`readOnly`\n\nSpecifies until when the recording is available for viewing. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaRecording"
    },
    "KalturaRecordingAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProgramAsset"
        }
      ],
      "description": "Recording-asset info",
      "properties": {
        "recordingId": {
          "description": "Recording identifier",
          "type": "string"
        }
      },
      "title": "KalturaRecordingAsset"
    },
    "KalturaRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering recordings",
      "properties": {
        "filterExpression": {
          "description": "KSQL expression",
          "type": "string"
        },
        "statusIn": {
          "description": "Recording Statuses",
          "type": "string"
        }
      },
      "title": "KalturaRecordingFilter"
    },
    "KalturaRecordingListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Recordings info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRecording"
          },
          "type": "array"
        }
      },
      "title": "KalturaRecordingListResponse"
    },
    "KalturaRegion": {
      "properties": {
        "externalId": {
          "description": "Region external identifier",
          "type": "string"
        },
        "id": {
          "description": "Region identifier",
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicates whether this is the default region for the partner",
          "type": "boolean"
        },
        "linearChannels": {
          "items": {
            "$ref": "#/definitions/KalturaRegionalChannel"
          },
          "type": "array"
        },
        "name": {
          "description": "Region name",
          "type": "string"
        }
      },
      "title": "KalturaRegion"
    },
    "KalturaRegionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "externalIdIn": {
          "description": "List of comma separated regions external identifiers",
          "type": "string"
        }
      },
      "title": "KalturaRegionFilter"
    },
    "KalturaRegionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Regions list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRegion"
          },
          "type": "array"
        }
      },
      "title": "KalturaRegionListResponse"
    },
    "KalturaRegionalChannel": {
      "properties": {
        "channelNumber": {
          "description": "The number of the channel",
          "type": "integer"
        },
        "linearChannelId": {
          "description": "The identifier of the linear media representing the channel",
          "type": "integer"
        }
      },
      "title": "KalturaRegionalChannel"
    },
    "KalturaRegistryResponse": {
      "properties": {
        "announcementId": {
          "description": "Announcement Id",
          "type": "integer"
        },
        "key": {
          "description": "Key",
          "type": "string"
        },
        "url": {
          "description": "URL",
          "type": "string"
        }
      },
      "title": "KalturaRegistryResponse"
    },
    "KalturaRegistrySettings": {
      "properties": {
        "key": {
          "description": "Permission item identifier",
          "type": "string"
        },
        "value": {
          "description": "Permission item name",
          "type": "string"
        }
      },
      "title": "KalturaRegistrySettings"
    },
    "KalturaRegistrySettingsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of registry settings.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRegistrySettings"
          },
          "type": "array"
        }
      },
      "title": "KalturaRegistrySettingsListResponse"
    },
    "KalturaRelatedExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "freeText": {
          "description": "FreeText",
          "type": "string"
        },
        "idEqual": {
          "description": "the External ID of the asset for which to return related assets",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "integer"
        }
      },
      "title": "KalturaRelatedExternalFilter"
    },
    "KalturaRelatedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "the ID of the asset for which to return related assets",
          "type": "integer"
        },
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restriced to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            epg_channel_id – the channel identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). For alpha-numerical fields =, != (not), ~ (like), !~, ^ (starts with). Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each.\r\n            (maximum length of entire filter is 2048 characters)",
          "type": "string"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted –   same type as the provided asset.",
          "type": "string"
        }
      },
      "title": "KalturaRelatedFilter"
    },
    "KalturaReport": {
      "properties": {},
      "title": "KalturaReport"
    },
    "KalturaReportFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "`abstract`\n\nReport filter",
      "properties": {},
      "title": "KalturaReportFilter"
    },
    "KalturaReportListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Reports info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaReport"
          },
          "type": "array"
        }
      },
      "title": "KalturaReportListResponse"
    },
    "KalturaRequestConfiguration": {
      "description": "Define client request optional configurations",
      "properties": {
        "ks": {
          "description": "Kaltura API session",
          "type": "string"
        },
        "language": {
          "description": "Content language",
          "type": "string"
        },
        "partnerId": {
          "description": "Impersonated partner id",
          "type": "integer"
        },
        "userId": {
          "description": "Impersonated user id",
          "type": "integer"
        }
      },
      "title": "KalturaRequestConfiguration"
    },
    "KalturaScheduledRecordingProgramFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "channelsIn": {
          "description": "Channels to filter by",
          "type": "string"
        },
        "endDateLessThanOrNull": {
          "description": "end date",
          "type": "integer"
        },
        "recordingTypeEqual": {
          "description": "Enum Type: `KalturaScheduledRecordingAssetType`\n\nThe type of recordings to return",
          "enum": [
            "single",
            "series",
            "all"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SERIES",
            "ALL"
          ],
          "x-enumType": "KalturaScheduledRecordingAssetType"
        },
        "startDateGreaterThanOrNull": {
          "description": "start date",
          "type": "integer"
        }
      },
      "title": "KalturaScheduledRecordingProgramFilter"
    },
    "KalturaSearchAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated list of EPG channel ids to search within.",
          "type": "string"
        },
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restriced to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            epg_channel_id – the channel identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). For alpha-numerical fields =, != (not), ~ (like), !~, ^ (starts with). Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each.\r\n            (maximum length of entire filter is 2048 characters)",
          "type": "string"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries; 1 - Recordings; Any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaSearchAssetFilter"
    },
    "KalturaSearchExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "query": {
          "description": "Query",
          "type": "string"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "integer"
        }
      },
      "title": "KalturaSearchExternalFilter"
    },
    "KalturaSeriesRecording": {
      "properties": {
        "channelId": {
          "description": "Kaltura ChannelId",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the series recording created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer"
        },
        "epgId": {
          "description": "Kaltura EpgId",
          "type": "integer"
        },
        "excludedSeasons": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nKaltura unique ID representing the series recording identifier",
          "readOnly": true,
          "type": "integer"
        },
        "seasonNumber": {
          "description": "Kaltura SeasonNumber",
          "type": "integer"
        },
        "seriesId": {
          "description": "Kaltura SeriesId",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/series/season",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ],
          "x-enumType": "KalturaRecordingType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the series recording last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaSeriesRecording"
    },
    "KalturaSeriesRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering recordings",
      "properties": {},
      "title": "KalturaSeriesRecordingFilter"
    },
    "KalturaSeriesRecordingListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Series Recordings info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSeriesRecording"
          },
          "type": "array"
        }
      },
      "title": "KalturaSeriesRecordingListResponse"
    },
    "KalturaSession": {
      "description": "Kaltura Session",
      "properties": {
        "expiry": {
          "description": "Expiry",
          "type": "integer"
        },
        "ks": {
          "description": "KS",
          "type": "string"
        },
        "partnerId": {
          "description": "Partner identifier",
          "type": "integer"
        },
        "privileges": {
          "description": "Privileges",
          "type": "string"
        },
        "sessionType": {
          "description": "Enum Type: `KalturaSessionType`\n\nSession type",
          "enum": [
            0,
            2
          ],
          "type": "integer",
          "x-enumLabels": [
            "USER",
            "ADMIN"
          ],
          "x-enumType": "KalturaSessionType"
        },
        "udid": {
          "description": "udid",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        }
      },
      "title": "KalturaSession"
    },
    "KalturaSessionInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSession"
        }
      ],
      "description": "Kaltura Session",
      "properties": {},
      "title": "KalturaSessionInfo"
    },
    "KalturaSlimAsset": {
      "description": "Slim Asset Details",
      "properties": {
        "id": {
          "description": "`insertOnly`\n\nInternal identifier of the asset",
          "type": "string"
        },
        "type": {
          "description": "`insertOnly`\n\nEnum Type: `KalturaAssetType`\n\nThe type of the asset. Possible values: media, recording, epg",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        }
      },
      "title": "KalturaSlimAsset"
    },
    "KalturaSlimAssetInfoWrapper": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Slim assets wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBaseAssetInfo"
          },
          "type": "array"
        }
      },
      "title": "KalturaSlimAssetInfoWrapper"
    },
    "KalturaSocial": {
      "description": "`abstract`",
      "properties": {
        "birthday": {
          "description": "User birthday",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nFacebook identifier",
          "readOnly": true,
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "name": {
          "description": "Full name",
          "type": "string"
        },
        "pictureUrl": {
          "description": "Profile picture URL",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nUser model status\r\n            Possible values: UNKNOWN, OK, ERROR, NOACTION, NOTEXIST, CONFLICT, MERGE, MERGEOK, NEWUSER, MINFRIENDS, INVITEOK, INVITEERROR, ACCESSDENIED, WRONGPASSWORDORUSERNAME, UNMERGEOK",
          "readOnly": true,
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaSocial"
    },
    "KalturaSocialAction": {
      "properties": {
        "actionType": {
          "description": "Enum Type: `KalturaSocialActionType`\n\nAction type",
          "enum": [
            "LIKE",
            "WATCH",
            "RATE",
            "SHARE"
          ],
          "type": "string",
          "x-enumLabels": [
            "LIKE",
            "WATCH",
            "RATE",
            "SHARE"
          ],
          "x-enumType": "KalturaSocialActionType"
        },
        "assetId": {
          "description": "ID of the asset that was acted upon",
          "type": "integer"
        },
        "assetType": {
          "description": "Enum Type: `KalturaAssetType`\n\nType of the asset that was acted upon, currently only VOD (media)",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "id": {
          "description": "`readOnly`\n\nsocial action document id",
          "readOnly": true,
          "type": "string"
        },
        "time": {
          "description": "EPOC based timestamp for when the action occurred",
          "type": "integer"
        },
        "url": {
          "description": "`writeOnly`\n\nThe value of the url",
          "type": "string"
        }
      },
      "title": "KalturaSocialAction"
    },
    "KalturaSocialActionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "actionTypeIn": {
          "description": "Comma separated list of social actions to filter by",
          "type": "string"
        },
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        }
      },
      "title": "KalturaSocialActionFilter"
    },
    "KalturaSocialActionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSocialAction"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialActionListResponse"
    },
    "KalturaSocialActionRate": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialAction"
        }
      ],
      "properties": {
        "rate": {
          "description": "The value of the rating",
          "type": "integer"
        }
      },
      "title": "KalturaSocialActionRate"
    },
    "KalturaSocialComment": {
      "properties": {
        "createDate": {
          "description": "Comment creation date",
          "type": "integer"
        },
        "header": {
          "description": "Comment header",
          "type": "string"
        },
        "text": {
          "description": "Comment body",
          "type": "string"
        },
        "writer": {
          "description": "The writer of the comment",
          "type": "string"
        }
      },
      "title": "KalturaSocialComment"
    },
    "KalturaSocialCommentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdEqual": {
          "description": "Asset ID to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by, currently only VOD (media)",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "createDateGreaterThan": {
          "description": "The create date from which to get the comments",
          "type": "integer"
        },
        "socialPlatformEqual": {
          "description": "Enum Type: `KalturaSocialPlatform`\n\nComma separated list of social actions to filter by",
          "enum": [
            "IN_APP",
            "FACEBOOK",
            "TWITTER"
          ],
          "type": "string",
          "x-enumLabels": [
            "IN_APP",
            "FACEBOOK",
            "TWITTER"
          ],
          "x-enumType": "KalturaSocialPlatform"
        }
      },
      "title": "KalturaSocialCommentFilter"
    },
    "KalturaSocialCommentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSocialComment"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialCommentListResponse"
    },
    "KalturaSocialConfig": {
      "description": "Returns social configuration for the partner",
      "properties": {},
      "title": "KalturaSocialConfig"
    },
    "KalturaSocialFacebookConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialConfig"
        }
      ],
      "description": "Returns social configuration for the partner",
      "properties": {
        "appId": {
          "description": "The application identifier",
          "type": "string"
        },
        "permissions": {
          "description": "List of application permissions",
          "type": "string"
        }
      },
      "title": "KalturaSocialFacebookConfig"
    },
    "KalturaSocialFriendActivity": {
      "properties": {
        "socialAction": {
          "$ref": "#/definitions/KalturaSocialAction"
        },
        "userFullName": {
          "description": "The full name of the user who did the social action",
          "type": "string"
        },
        "userPictureUrl": {
          "description": "The URL of the profile picture of the user who did the social action",
          "type": "string"
        }
      },
      "title": "KalturaSocialFriendActivity"
    },
    "KalturaSocialFriendActivityFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "actionTypeIn": {
          "description": "Comma separated list of social actions to filter by",
          "type": "string"
        },
        "assetIdEqual": {
          "description": "Asset ID to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by, currently only VOD (media)",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        }
      },
      "title": "KalturaSocialFriendActivityFilter"
    },
    "KalturaSocialFriendActivityListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSocialFriendActivity"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialFriendActivityListResponse"
    },
    "KalturaSocialNetworkComment": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialComment"
        }
      ],
      "properties": {
        "authorImageUrl": {
          "description": "The URL of the profile picture of the author of the comment",
          "type": "string"
        },
        "likeCounter": {
          "description": "Number of likes",
          "type": "string"
        }
      },
      "title": "KalturaSocialNetworkComment"
    },
    "KalturaSocialResponse": {
      "properties": {
        "data": {
          "description": "Data",
          "type": "string"
        },
        "kalturaUsername": {
          "description": "Kaltura username",
          "type": "string"
        },
        "minFriendsLimitation": {
          "description": "Minimum number of friends limitation",
          "type": "string"
        },
        "pic": {
          "description": "Facebook profile picture",
          "type": "string"
        },
        "socialUser": {
          "$ref": "#/definitions/KalturaSocialUser"
        },
        "socialUsername": {
          "description": "Facebook username",
          "type": "string"
        },
        "status": {
          "description": "User model status\r\n            Possible values: UNKNOWN, OK, ERROR, NOACTION, NOTEXIST, CONFLICT, MERGE, MERGEOK, NEWUSER, MINFRIENDS, INVITEOK, INVITEERROR, ACCESSDENIED, WRONGPASSWORDORUSERNAME, UNMERGEOK",
          "type": "string"
        },
        "token": {
          "description": "Facebook encrypted token",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        }
      },
      "title": "KalturaSocialResponse"
    },
    "KalturaSocialUser": {
      "properties": {
        "birthday": {
          "description": "User birthday",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "id": {
          "description": "Facebook identifier",
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "name": {
          "description": "Full name",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        }
      },
      "title": "KalturaSocialUser"
    },
    "KalturaSocialUserConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialConfig"
        }
      ],
      "properties": {
        "actionPermissionItems": {
          "items": {
            "$ref": "#/definitions/KalturaActionPermissionItem"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialUserConfig"
    },
    "KalturaStringValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of strings",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "KalturaStringValue"
    },
    "KalturaStringValueArray": {
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaStringValueArray"
    },
    "KalturaSubscription": {
      "description": "Subscription details",
      "properties": {
        "channels": {
          "items": {
            "$ref": "#/definitions/KalturaBaseChannel"
          },
          "type": "array"
        },
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "descriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "discountModule": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "endDate": {
          "description": "The last date the subscription is available for purchasing",
          "type": "integer"
        },
        "fileTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "gracePeriodMinutes": {
          "description": "The subscription grace period in minutes",
          "type": "integer"
        },
        "householdLimitationsId": {
          "description": "The household limitation module identifier associated with this subscription",
          "type": "integer"
        },
        "id": {
          "description": "Subscription identifier",
          "type": "string"
        },
        "isInfiniteRenewal": {
          "description": "Indicates whether the subscription will renew forever",
          "type": "boolean"
        },
        "isRenewable": {
          "description": "Denotes whether or not this subscription can be renewed",
          "type": "boolean"
        },
        "isWaiverEnabled": {
          "description": "Indicates whether or not the end user has the right to waive his rights to cancel a purchase",
          "type": "boolean"
        },
        "maxViewsNumber": {
          "description": "The maximum number of times an item in this usage module can be viewed",
          "type": "integer"
        },
        "mediaId": {
          "description": "Identifier of the media associated with the subscription",
          "type": "integer"
        },
        "names": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "premiumServices": {
          "items": {
            "$ref": "#/definitions/KalturaPremiumService"
          },
          "type": "array"
        },
        "previewModule": {
          "$ref": "#/definitions/KalturaPreviewModule"
        },
        "price": {
          "$ref": "#/definitions/KalturaPriceDetails"
        },
        "pricePlans": {
          "items": {
            "$ref": "#/definitions/KalturaPricePlan"
          },
          "type": "array"
        },
        "productCode": {
          "description": "Product code for the subscription",
          "type": "string"
        },
        "prorityInOrder": {
          "description": "Subscription order (when returned in methods that retrieve subscriptions)",
          "type": "integer"
        },
        "renewalsNumber": {
          "description": "Defines the number of times this subscription will be renewed",
          "type": "integer"
        },
        "startDate": {
          "description": "The first date the subscription is available for purchasing",
          "type": "integer"
        },
        "userTypes": {
          "items": {
            "$ref": "#/definitions/KalturaOTTUserType"
          },
          "type": "array"
        },
        "viewLifeCycle": {
          "description": "The amount time an item is available for viewing since a user started watching the item",
          "type": "integer"
        },
        "waiverPeriod": {
          "description": "Time period during which the end user can waive his rights to cancel a purchase. When the time period is passed, the purchase can no longer be cancelled",
          "type": "integer"
        }
      },
      "title": "KalturaSubscription"
    },
    "KalturaSubscriptionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "mediaFileIdEqual": {
          "description": "Media-file identifier to get the subscriptions by",
          "type": "integer"
        },
        "subscriptionIdIn": {
          "description": "Comma separated subscription identifiers or file identifier (only 1) to get the subscriptions by",
          "type": "string"
        }
      },
      "title": "KalturaSubscriptionFilter"
    },
    "KalturaSubscriptionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Subscriptions list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSubscription"
          },
          "type": "array"
        }
      },
      "title": "KalturaSubscriptionListResponse"
    },
    "KalturaSubscriptionPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "Subscription price details",
      "properties": {},
      "title": "KalturaSubscriptionPrice"
    },
    "KalturaTimeShiftedTvPartnerSettings": {
      "properties": {
        "catchUpBufferLength": {
          "description": "Catch-up buffer length",
          "type": "integer"
        },
        "catchUpEnabled": {
          "description": "Is catch-up enabled",
          "type": "boolean"
        },
        "cdvrEnabled": {
          "description": "Is c-dvr enabled",
          "type": "boolean"
        },
        "cleanupNoticePeriod": {
          "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
          "type": "integer"
        },
        "nonEntitledChannelPlaybackEnabled": {
          "description": "Is recording playback for non-entitled channel enables",
          "type": "boolean"
        },
        "nonExistingChannelPlaybackEnabled": {
          "description": "Is recording playback for non-existing channel enables",
          "type": "boolean"
        },
        "paddingAfterProgramEnds": {
          "description": "Indicates how long (in seconds) after the program ends the recording will end",
          "type": "integer"
        },
        "paddingBeforeProgramStarts": {
          "description": "Indicates how long (in seconds) before the program starts the recording will begin",
          "type": "integer"
        },
        "protectionEnabled": {
          "description": "Is recording protection enabled",
          "type": "boolean"
        },
        "protectionPeriod": {
          "description": "Specify the time in days that a recording should be protected. Start time begins at protection request.",
          "type": "integer"
        },
        "protectionQuotaPercentage": {
          "description": "Indicates how many percent of the quota can be used for protection",
          "type": "integer"
        },
        "recordingLifetimePeriod": {
          "description": "Specify the time in days that a recording should be kept for user. Start time begins with the program end date.",
          "type": "integer"
        },
        "recordingScheduleWindow": {
          "description": "Recording schedule window. Indicates how long (in minutes) after the program starts it is allowed to schedule the recording",
          "type": "integer"
        },
        "recordingScheduleWindowEnabled": {
          "description": "Is recording schedule window enabled",
          "type": "boolean"
        },
        "seriesRecordingEnabled": {
          "description": "Is recording of series enabled",
          "type": "boolean"
        },
        "startOverEnabled": {
          "description": "Is start-over enabled",
          "type": "boolean"
        },
        "trickPlayBufferLength": {
          "description": "Trick play buffer length",
          "type": "integer"
        },
        "trickPlayEnabled": {
          "description": "Is trick-play enabled",
          "type": "boolean"
        }
      },
      "title": "KalturaTimeShiftedTvPartnerSettings"
    },
    "KalturaTopic": {
      "properties": {
        "automaticIssueNotification": {
          "description": "Enum Type: `KalturaTopicAutomaticIssueNotification`\n\nautomaticIssueNotification",
          "enum": [
            "Inherit",
            "Yes",
            "No"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERIT",
            "YES",
            "NO"
          ],
          "x-enumType": "KalturaTopicAutomaticIssueNotification"
        },
        "id": {
          "description": "`readOnly`\n\nmessage id",
          "readOnly": true,
          "type": "string"
        },
        "lastMessageSentDateSec": {
          "description": "lastMessageSentDateSec",
          "type": "integer"
        },
        "name": {
          "description": "message",
          "type": "string"
        },
        "subscribersAmount": {
          "description": "message",
          "type": "string"
        }
      },
      "title": "KalturaTopic"
    },
    "KalturaTopicFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {},
      "title": "KalturaTopicFilter"
    },
    "KalturaTopicListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of inbox message.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTopic"
          },
          "type": "array"
        }
      },
      "title": "KalturaTopicListResponse"
    },
    "KalturaTransaction": {
      "properties": {
        "createdAt": {
          "description": "Entitlement creation date",
          "type": "integer"
        },
        "failReasonCode": {
          "description": "Adapter failure reason code\r\n            Insufficient funds = 20, Invalid account = 21, User unknown = 22, Reason unknown = 23, Unknown payment gateway response = 24,\r\n            No response from payment gateway = 25, Exceeded retry limit = 26, Illegal client request = 27, Expired = 28",
          "type": "integer"
        },
        "id": {
          "description": "Kaltura unique ID representing the transaction",
          "type": "string"
        },
        "paymentGatewayReferenceId": {
          "description": "Transaction reference ID received from the payment gateway. \r\n            Value is available only if the payment gateway provides this information.",
          "type": "string"
        },
        "paymentGatewayResponseId": {
          "description": "Response ID received from by the payment gateway. \r\n            Value is available only if the payment gateway provides this information.",
          "type": "string"
        },
        "state": {
          "description": "Transaction state: OK/Pending/Failed",
          "type": "string"
        }
      },
      "title": "KalturaTransaction"
    },
    "KalturaTransactionHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Transactions filter",
      "properties": {
        "endDateLessThanOrEqual": {
          "description": "Filter transactions earlier than specific date",
          "type": "integer"
        },
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "enum": [
            "user",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaEntityReferenceBy"
        },
        "startDateGreaterThanOrEqual": {
          "description": "Filter transactions later than specific date",
          "type": "integer"
        }
      },
      "title": "KalturaTransactionHistoryFilter"
    },
    "KalturaTransactionStatus": {
      "properties": {
        "adapterTransactionStatus": {
          "description": "Enum Type: `KalturaTransactionAdapterStatus`\n\nPayment gateway adapter application state for the transaction to update",
          "enum": [
            "OK",
            "PENDING",
            "FAILED"
          ],
          "type": "string",
          "x-enumLabels": [
            "OK",
            "PENDING",
            "FAILED"
          ],
          "x-enumType": "KalturaTransactionAdapterStatus"
        },
        "externalId": {
          "description": "External transaction identifier",
          "type": "string"
        },
        "externalMessage": {
          "description": "Payment gateway message",
          "type": "string"
        },
        "externalStatus": {
          "description": "Payment gateway transaction status",
          "type": "string"
        },
        "failReason": {
          "description": "The reason the transaction failed",
          "type": "integer"
        }
      },
      "title": "KalturaTransactionStatus"
    },
    "KalturaTranslationToken": {
      "description": "Container for translation",
      "properties": {
        "language": {
          "description": "Language code",
          "type": "string"
        },
        "value": {
          "description": "Translated value",
          "type": "string"
        }
      },
      "title": "KalturaTranslationToken"
    },
    "KalturaTwitterTwit": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialNetworkComment"
        }
      ],
      "properties": {},
      "title": "KalturaTwitterTwit"
    },
    "KalturaUsageModule": {
      "description": "Pricing usage module",
      "properties": {
        "couponId": {
          "description": "Identifies a specific coupon linked to this object",
          "type": "integer"
        },
        "fullLifeCycle": {
          "description": "The amount time an item is available for viewing",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nUsage module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isOfflinePlayback": {
          "description": "Indicates that usage is targeted for offline playback",
          "type": "boolean"
        },
        "isWaiverEnabled": {
          "description": "Indicates whether or not the end user has the right to waive his rights to cancel a purchase",
          "type": "boolean"
        },
        "maxViewsNumber": {
          "description": "The maximum number of times an item in this usage module can be viewed",
          "type": "integer"
        },
        "name": {
          "description": "Usage module name",
          "type": "string"
        },
        "viewLifeCycle": {
          "description": "The amount time an item is available for viewing since a user started watching the item",
          "type": "integer"
        },
        "waiverPeriod": {
          "description": "Time period during which the end user can waive his rights to cancel a purchase. When the time period is passed, the purchase can no longer be cancelled",
          "type": "integer"
        }
      },
      "title": "KalturaUsageModule"
    },
    "KalturaUserAssetRule": {
      "description": "User asset rule - representing different type of rules on an asset(Parental, Geo, User Type, Device)",
      "properties": {
        "description": {
          "description": "Additional description for the specific rule",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUnique rule identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Rule display name",
          "type": "string"
        },
        "ruleType": {
          "description": "Enum Type: `KalturaRuleType`\n\nRule type - possible values: Rule type – Parental, Geo, UserType, Device",
          "enum": [
            "parental",
            "geo",
            "user_type",
            "device"
          ],
          "type": "string",
          "x-enumLabels": [
            "PARENTAL",
            "GEO",
            "USER_TYPE",
            "DEVICE"
          ],
          "x-enumType": "KalturaRuleType"
        }
      },
      "title": "KalturaUserAssetRule"
    },
    "KalturaUserAssetRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User asset rule filter",
      "properties": {
        "assetIdEqual": {
          "description": "Asset identifier to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Asset type to filter by - 0 = EPG, 1 = media",
          "type": "integer"
        }
      },
      "title": "KalturaUserAssetRuleFilter"
    },
    "KalturaUserAssetRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "GenericRules list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserAssetRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserAssetRuleListResponse"
    },
    "KalturaUserAssetsListItem": {
      "description": "An item of user asset list",
      "properties": {
        "id": {
          "description": "Asset identifier",
          "type": "string"
        },
        "listType": {
          "description": "Enum Type: `KalturaUserAssetsListType`\n\nThe type of the list, all is not supported",
          "enum": [
            "all",
            "watch",
            "purchase",
            "library"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "WATCH",
            "PURCHASE",
            "LIBRARY"
          ],
          "x-enumType": "KalturaUserAssetsListType"
        },
        "orderIndex": {
          "description": "The order index of the asset in the list",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nThe type of the asset",
          "enum": [
            "all",
            "media"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "MEDIA"
          ],
          "x-enumType": "KalturaUserAssetsListItemType"
        },
        "userId": {
          "description": "`readOnly`\n\nThe identifier of the user who added the item to the list",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaUserAssetsListItem"
    },
    "KalturaUserLoginPin": {
      "description": "Log in pin code details",
      "properties": {
        "expirationTime": {
          "description": "Login pin expiration time (epoch)",
          "type": "integer"
        },
        "pinCode": {
          "description": "Generated login pin code",
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser Identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaUserLoginPin"
    },
    "KalturaUserRole": {
      "properties": {
        "id": {
          "description": "`readOnly`\n\nUser role identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "User role name",
          "type": "string"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/KalturaPermission"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserRole"
    },
    "KalturaUserRoleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User roles filter",
      "properties": {
        "idIn": {
          "description": "Comma separated roles identifiers",
          "type": "string"
        }
      },
      "title": "KalturaUserRoleFilter"
    },
    "KalturaUserRoleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "User-roles list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserRole"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserRoleListResponse"
    },
    "KalturaUserSocialActionResponse": {
      "properties": {
        "failStatus": {
          "items": {
            "$ref": "#/definitions/KalturaNetworkActionStatus"
          },
          "type": "array"
        },
        "socialAction": {
          "$ref": "#/definitions/KalturaSocialAction"
        }
      },
      "title": "KalturaUserSocialActionResponse"
    },
    "KalturaValue": {
      "description": "`abstract`\n\nA representation to return an array of values",
      "properties": {
        "description": {
          "type": "string"
        }
      },
      "title": "KalturaValue"
    }
  },
  "host": "tvpapi-us-preprod.ott.kaltura.com",
  "info": {
    "description": "The Kaltura OTT API",
    "title": "Kaltura OTT",
    "version": "3.6.1542.28904"
  },
  "parameters": {
    "format": {
      "description": "The format of the response",
      "enum": [
        1,
        2,
        3
      ],
      "in": "query",
      "name": "format",
      "type": "integer",
      "x-consoleDefault": 1,
      "x-enumLabels": [
        "JSON",
        "XML",
        "PHP"
      ],
      "x-global": true
    },
    "ks": {
      "in": "query",
      "name": "ks",
      "type": "string",
      "x-global": true
    }
  },
  "paths": {
    "/service/announcement/action/add": {
      "get": {
        "description": "Add a new future scheduled system announcement push notification",
        "operationId": "announcement.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "announcement[name]",
            "type": "string",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[message]",
            "type": "string",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[enabled]",
            "type": "boolean",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[startTime]",
            "type": "integer",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[timezone]",
            "type": "string",
            "x-group": "announcement"
          },
          {
            "description": "Enum Type: `KalturaAnnouncementRecipientsType`",
            "enum": [
              "All",
              "LoggedIn",
              "Guests",
              "Other"
            ],
            "in": "query",
            "name": "announcement[recipients]",
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "LOGGEDIN",
              "GUESTS",
              "OTHER"
            ],
            "x-enumType": "KalturaAnnouncementRecipientsType",
            "x-group": "announcement"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementInvalidTimezone`: undefined\n* `FeatureDisabled`: undefined\n* `AnnouncementMessageTooLong`: undefined\n* `AnnouncementMessageIsEmpty`: undefined\n* `TimeInPast`: Argument [@argument@] time have passed"
          }
        },
        "tags": [
          "announcement"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAnnouncement`",
            "name": "announcement",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/announcement/action/delete": {
      "get": {
        "description": "Delete an existing announcing. Announcement cannot be delete while being sent.",
        "operationId": "announcement.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Id of the announcement.",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `FeatureDisabled`: undefined\n* `AnnouncementNotFound`: undefined"
          }
        },
        "tags": [
          "announcement"
        ]
      }
    },
    "/service/announcement/action/enableSystemAnnouncements": {
      "get": {
        "description": "Enable system announcements",
        "operationId": "announcement.enableSystemAnnouncements",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `FailCreateAnnouncement`: undefined\n* `FeatureDisabled`: undefined"
          }
        },
        "tags": [
          "announcement"
        ]
      }
    },
    "/service/announcement/action/list": {
      "get": {
        "description": "Lists all announcements in the system.",
        "operationId": "announcement.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaAnnouncementOrderBy",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncementListResponse"
            }
          },
          "x-Errors": {
            "description": "* `FeatureDisabled`: undefined"
          }
        },
        "tags": [
          "announcement"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAnnouncementFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncementFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/announcement/action/update": {
      "get": {
        "description": "Update an existing future system announcement push notification. Announcement can only be updated only before sending",
        "operationId": "announcement.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The announcement identifier",
            "in": "query",
            "name": "announcementId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "announcement[name]",
            "type": "string",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[message]",
            "type": "string",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[enabled]",
            "type": "boolean",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[startTime]",
            "type": "integer",
            "x-group": "announcement"
          },
          {
            "in": "query",
            "name": "announcement[timezone]",
            "type": "string",
            "x-group": "announcement"
          },
          {
            "description": "Enum Type: `KalturaAnnouncementRecipientsType`",
            "enum": [
              "All",
              "LoggedIn",
              "Guests",
              "Other"
            ],
            "in": "query",
            "name": "announcement[recipients]",
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "LOGGEDIN",
              "GUESTS",
              "OTHER"
            ],
            "x-enumType": "KalturaAnnouncementRecipientsType",
            "x-group": "announcement"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementInvalidTimezone`: undefined\n* `FeatureDisabled`: undefined\n* `TimeInPast`: Argument [@argument@] time have passed\n* `AnnouncementMessageTooLong`: undefined\n* `AnnouncementMessageIsEmpty`: undefined\n* `AnnouncementNotFound`: undefined\n* `AnnouncementUpdateNotAllowed`: undefined"
          }
        },
        "tags": [
          "announcement"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAnnouncement`",
            "name": "announcement",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/announcement/action/updateStatus": {
      "get": {
        "description": "Update a system announcement status",
        "operationId": "announcement.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Id of the announcement.",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Status to update to.",
            "in": "query",
            "name": "status",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: undefined\n* `AnnouncementUpdateNotAllowed`: undefined\n* `FeatureDisabled`: undefined"
          }
        },
        "tags": [
          "announcement"
        ]
      }
    },
    "/service/apptoken/action/add": {
      "get": {
        "description": "Add new application authentication token",
        "operationId": "appToken.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Expiry time of current token (unix timestamp in seconds)",
            "in": "query",
            "name": "appToken[expiry]",
            "type": "integer",
            "x-group": "appToken"
          },
          {
            "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
            "in": "query",
            "name": "appToken[sessionDuration]",
            "type": "integer",
            "x-group": "appToken"
          },
          {
            "description": "Enum Type: `KalturaAppTokenHashType`\n\nThe hash type of the token",
            "enum": [
              "SHA1",
              "SHA256",
              "SHA512",
              "MD5"
            ],
            "in": "query",
            "name": "appToken[hashType]",
            "type": "string",
            "x-enumLabels": [
              "SHA1",
              "SHA256",
              "SHA512",
              "MD5"
            ],
            "x-enumType": "KalturaAppTokenHashType",
            "x-group": "appToken"
          },
          {
            "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
            "in": "query",
            "name": "appToken[sessionPrivileges]",
            "type": "string",
            "x-group": "appToken"
          },
          {
            "description": "Enum Type: `KalturaSessionType`\n\nType of KS (Kaltura Session) that created using the current token",
            "enum": [
              0,
              2
            ],
            "in": "query",
            "name": "appToken[sessionType]",
            "type": "integer",
            "x-enumLabels": [
              "USER",
              "ADMIN"
            ],
            "x-enumType": "KalturaSessionType",
            "x-group": "appToken"
          },
          {
            "description": "The application token",
            "in": "query",
            "name": "appToken[token]",
            "type": "string",
            "x-group": "appToken"
          },
          {
            "description": "User id of KS (Kaltura Session) that created using the current token",
            "in": "query",
            "name": "appToken[sessionUserId]",
            "type": "string",
            "x-group": "appToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        },
        "tags": [
          "appToken"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAppToken`",
            "name": "appToken",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/apptoken/action/delete": {
      "get": {
        "description": "Delete application authentication token by id",
        "operationId": "appToken.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Application token identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/get": {
      "get": {
        "description": "Get application authentication token by id",
        "operationId": "appToken.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Application token identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/apptoken/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        },
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/startSession": {
      "get": {
        "description": "Starts a new KS (Kaltura Session) based on application authentication token id",
        "operationId": "appToken.startSession",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "application token id",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "hashed token - current KS concatenated with the application token hashed using the application token ‘hashType’",
            "in": "query",
            "name": "tokenHash",
            "required": true,
            "type": "string"
          },
          {
            "description": "session user id, will be ignored if a different user id already defined on the application token",
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaSessionType`\n\nsession type, will be ignored if a different session type already defined on the application token",
            "enum": [
              0,
              2
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "integer",
            "x-enumLabels": [
              "USER",
              "ADMIN"
            ],
            "x-enumType": "KalturaSessionType"
          },
          {
            "description": "session expiry (in seconds), could be overwritten by shorter expiry of the application token and the session-expiry that defined on the application token",
            "in": "query",
            "name": "expiry",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "udid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSessionInfo"
            }
          },
          "x-Errors": {
            "description": "* `InvalidAppTokenHash`: Invalid application-token hash\n* `ExpiredAppToken`: Application-token is expired\n* `NotActiveAppToken`: Application-token [@id@] is not active"
          }
        },
        "security": [],
        "tags": [
          "appToken"
        ]
      }
    },
    "/service/asset/action/get": {
      "get": {
        "description": "Returns media or EPG asset by media / EPG internal or external identifier",
        "operationId": "asset.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/asset/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          },
          {
            "description": "Enum Type: `KalturaAssetReferenceType`\n\nAsset type",
            "enum": [
              "media",
              "epg_internal",
              "epg_external"
            ],
            "in": "query",
            "name": "assetReferenceType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "EPG_INTERNAL",
              "EPG_EXTERNAL"
            ],
            "x-enumType": "KalturaAssetReferenceType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAsset"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found"
          }
        },
        "tags": [
          "asset"
        ]
      }
    },
    "/service/asset/action/list": {
      "get": {
        "description": "Returns media or EPG assets. Filters by media identifiers or by EPG internal or external identifier.",
        "operationId": "asset.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "x-enumType": "KalturaAssetOrderBy",
            "x-group": "filter"
          },
          {
            "enum": [
              "KalturaScheduledRecordingProgramFilter",
              "KalturaBundleFilter",
              "KalturaChannelExternalFilter",
              "KalturaChannelFilter",
              "KalturaRelatedFilter",
              "KalturaRelatedExternalFilter",
              "KalturaSearchAssetFilter",
              "KalturaSearchExternalFilter"
            ],
            "in": "query",
            "name": "filter[objectType]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaScheduledRecordingAssetType`\n\nThe type of recordings to return",
            "enum": [
              "single",
              "series",
              "all"
            ],
            "in": "query",
            "name": "filter[recordingTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "SINGLE",
              "SERIES",
              "ALL"
            ],
            "x-enumType": "KalturaScheduledRecordingAssetType",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaScheduledRecordingProgramFilter"
              ]
            }
          },
          {
            "description": "Channels to filter by",
            "in": "query",
            "name": "filter[channelsIn]",
            "type": "string",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaScheduledRecordingProgramFilter"
              ]
            }
          },
          {
            "description": "start date",
            "in": "query",
            "name": "filter[startDateGreaterThanOrNull]",
            "type": "integer",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaScheduledRecordingProgramFilter"
              ]
            }
          },
          {
            "description": "end date",
            "in": "query",
            "name": "filter[endDateLessThanOrNull]",
            "type": "integer",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaScheduledRecordingProgramFilter"
              ]
            }
          },
          {
            "description": "Bundle Id.",
            "in": "query",
            "name": "filter[idEqual]",
            "type": "integer",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaBundleFilter",
                "KalturaChannelExternalFilter",
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchAssetFilter",
                "KalturaSearchExternalFilter"
              ]
            }
          },
          {
            "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaBundleFilter",
                "KalturaChannelExternalFilter",
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchAssetFilter",
                "KalturaSearchExternalFilter"
              ]
            }
          },
          {
            "description": "Enum Type: `KalturaBundleType`\n\nbundleType - possible values: Subscription or Collection",
            "enum": [
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "filter[bundleTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaBundleType",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaBundleFilter",
                "KalturaChannelExternalFilter",
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchAssetFilter",
                "KalturaSearchExternalFilter"
              ]
            }
          },
          {
            "description": "UtcOffsetEqual",
            "in": "query",
            "name": "filter[utcOffsetEqual]",
            "type": "number",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaChannelExternalFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchExternalFilter"
              ]
            }
          },
          {
            "description": "FreeTextEqual",
            "in": "query",
            "name": "filter[freeText]",
            "type": "string",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaChannelExternalFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchExternalFilter"
              ]
            }
          },
          {
            "in": "query",
            "name": "filter[kSql]",
            "type": "string",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaSearchAssetFilter"
              ]
            }
          },
          {
            "description": "Comma separated list of EPG channel ids to search within.",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaSearchAssetFilter"
              ]
            }
          },
          {
            "description": "Query",
            "in": "query",
            "name": "filter[query]",
            "type": "string",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaSearchExternalFilter"
              ]
            }
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetListResponse"
            }
          }
        },
        "tags": [
          "asset"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAssetFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/assetcomment/action/add": {
      "get": {
        "description": "Add asset comments by asset id",
        "operationId": "assetComment.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Comment header",
            "in": "query",
            "name": "comment[header]",
            "type": "string",
            "x-group": "comment"
          },
          {
            "description": "Comment body",
            "in": "query",
            "name": "comment[text]",
            "type": "string",
            "x-group": "comment"
          },
          {
            "description": "Comment creation date",
            "in": "query",
            "name": "comment[createDate]",
            "type": "integer",
            "x-group": "comment",
            "x-inputType": "datetime"
          },
          {
            "description": "The writer of the comment",
            "in": "query",
            "name": "comment[writer]",
            "type": "string",
            "x-group": "comment"
          },
          {
            "description": "Comment ID",
            "in": "query",
            "name": "comment[id]",
            "type": "integer",
            "x-group": "comment"
          },
          {
            "description": "Asset identifier",
            "in": "query",
            "name": "comment[assetId]",
            "type": "integer",
            "x-group": "comment"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "comment[assetType]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "comment"
          },
          {
            "description": "Sub Header",
            "in": "query",
            "name": "comment[subHeader]",
            "type": "string",
            "x-group": "comment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetComment"
            }
          }
        },
        "tags": [
          "assetComment"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAssetComment`",
            "name": "comment",
            "schema": {
              "$ref": "#/definitions/KalturaAssetComment"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/assetcomment/action/list": {
      "get": {
        "description": "Returns asset comments by asset id",
        "operationId": "assetComment.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "CREATE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "CREATE_DATE_DESC"
            ],
            "x-enumType": "KalturaAssetCommentOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Asset Id",
            "in": "query",
            "name": "filter[assetIdEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetCommentListResponse"
            }
          }
        },
        "tags": [
          "assetComment"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAssetCommentFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaAssetCommentFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/assetfile/action/getContext": {
      "get": {
        "description": "get KalturaAssetFileContext",
        "operationId": "assetFile.getContext",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset file identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaContextType`",
            "enum": [
              "none",
              "recording"
            ],
            "in": "query",
            "name": "contextType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "NONE",
              "RECORDING"
            ],
            "x-enumType": "KalturaContextType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFileContext"
            }
          }
        },
        "tags": [
          "assetFile"
        ]
      }
    },
    "/service/assethistory/action/list": {
      "get": {
        "description": "Get recently watched media for user, ordered by recently watched first.",
        "operationId": "assetHistory.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaAssetHistoryOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated list of asset types to search within.\r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Comma separated list of asset identifiers.",
            "in": "query",
            "name": "filter[assetIdIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaWatchStatus`\n\nWhich type of recently watched media to include in the result – those that finished watching, those that are in progress or both.\r\n            If omitted or specified filter = all – return all types.\r\n            Allowed values: progress – return medias that are in-progress, done – return medias that finished watching.",
            "enum": [
              "progress",
              "done",
              "all"
            ],
            "in": "query",
            "name": "filter[statusEqual]",
            "type": "string",
            "x-enumLabels": [
              "PROGRESS",
              "DONE",
              "ALL"
            ],
            "x-enumType": "KalturaWatchStatus",
            "x-group": "filter"
          },
          {
            "description": "How many days back to return the watched media. If omitted, default to 7 days",
            "in": "query",
            "name": "filter[daysLessThanOrEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetHistoryListResponse"
            }
          }
        },
        "tags": [
          "assetHistory"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAssetHistoryFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaAssetHistoryFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/assetstatistics/action/query": {
      "get": {
        "description": "Returns statistics for given list of assets by type and / or time period",
        "operationId": "assetStatistics.query",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Comma separated list of asset identifiers.",
            "in": "query",
            "name": "query[assetIdIn]",
            "type": "string",
            "x-group": "query"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "query[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "query"
          },
          {
            "description": "The beginning of the time window to get the statistics for (in epoch).",
            "in": "query",
            "name": "query[startDateGreaterThanOrEqual]",
            "type": "integer",
            "x-group": "query"
          },
          {
            "description": "/// The end of the time window to get the statistics for (in epoch).",
            "in": "query",
            "name": "query[endDateGreaterThanOrEqual]",
            "type": "integer",
            "x-group": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStatisticsListResponse"
            }
          }
        },
        "tags": [
          "assetStatistics"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaAssetStatisticsQuery`",
            "name": "query",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStatisticsQuery"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/bookmark/action/add": {
      "get": {
        "description": "Report player position and action for the user on the watched asset. Player position is used to later allow resume watching.",
        "operationId": "bookmark.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "`insertOnly`\n\nInternal identifier of the asset",
            "in": "query",
            "name": "bookmark[id]",
            "type": "string",
            "x-group": "bookmark"
          },
          {
            "description": "`insertOnly`\n\nEnum Type: `KalturaAssetType`\n\nThe type of the asset. Possible values: media, recording, epg",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "bookmark[type]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "bookmark"
          },
          {
            "description": "`insertOnly`\n\nThe position of the user in the specific asset (in seconds)",
            "in": "query",
            "name": "bookmark[position]",
            "type": "integer",
            "x-group": "bookmark"
          },
          {
            "description": "Enum Type: `KalturaBookmarkActionType`\n\nAction",
            "enum": [
              "HIT",
              "PLAY",
              "STOP",
              "PAUSE",
              "FIRST_PLAY",
              "SWOOSH",
              "FULL_SCREEN",
              "SEND_TO_FRIEND",
              "LOAD",
              "FULL_SCREEN_EXIT",
              "FINISH",
              "ERROR",
              "BITRATE_CHANGE",
              "NONE"
            ],
            "in": "query",
            "name": "bookmark[playerData][action]",
            "type": "string",
            "x-enumLabels": [
              "HIT",
              "PLAY",
              "STOP",
              "PAUSE",
              "FIRST_PLAY",
              "SWOOSH",
              "FULL_SCREEN",
              "SEND_TO_FRIEND",
              "LOAD",
              "FULL_SCREEN_EXIT",
              "FINISH",
              "ERROR",
              "BITRATE_CHANGE",
              "NONE"
            ],
            "x-enumType": "KalturaBookmarkActionType",
            "x-group": "bookmark[playerData]"
          },
          {
            "description": "Average Bitrate",
            "in": "query",
            "name": "bookmark[playerData][averageBitrate]",
            "type": "integer",
            "x-group": "bookmark[playerData]"
          },
          {
            "description": "Total Bitrate",
            "in": "query",
            "name": "bookmark[playerData][totalBitrate]",
            "type": "integer",
            "x-group": "bookmark[playerData]"
          },
          {
            "description": "Current Bitrate",
            "in": "query",
            "name": "bookmark[playerData][currentBitrate]",
            "type": "integer",
            "x-group": "bookmark[playerData]"
          },
          {
            "description": "Identifier of the file",
            "in": "query",
            "name": "bookmark[playerData][fileId]",
            "type": "integer",
            "x-group": "bookmark[playerData]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ActionNotRecognized`: undefined\n* `InvalidAssetId`: undefined\n* `ConcurrencyLimitation`: undefined\n* `InvalidAssetType`: undefined\n* `ProgramDoesntExist`: undefined"
          }
        },
        "tags": [
          "bookmark"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaBookmark`",
            "name": "bookmark",
            "schema": {
              "$ref": "#/definitions/KalturaBookmark"
            },
            "subGroups": [
              {
                "name": "bookmark[playerData]"
              }
            ]
          }
        ]
      }
    },
    "/service/bookmark/action/list": {
      "get": {
        "description": "Returns player position record/s for the requested asset and the requesting user. \r\n            If default user makes the request – player position records are provided for all of the users in the household.\r\n            If non-default user makes the request - player position records are provided for the requesting user and the default user of the household.",
        "operationId": "bookmark.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "POSITION_ASC",
              "POSITION_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "POSITION_ASC",
              "POSITION_DESC"
            ],
            "x-enumType": "KalturaBookmarkOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated list of assets identifiers",
            "in": "query",
            "name": "filter[assetIdIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBookmarkListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotExistsInDomain`: undefined\n* `InvalidAssetType`: undefined\n* `InvalidUser`: undefined"
          }
        },
        "tags": [
          "bookmark"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaBookmarkFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaBookmarkFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/cdnadapterprofile/action/add": {
      "get": {
        "description": "Insert new CDN adapter for partner",
        "operationId": "cdnAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "CDNR adapter name",
            "in": "query",
            "name": "adapter[name]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter active status",
            "in": "query",
            "name": "adapter[isActive]",
            "type": "boolean",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter URL",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter base URL",
            "in": "query",
            "name": "adapter[baseUrl]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter alias",
            "in": "query",
            "name": "adapter[systemName]",
            "type": "string",
            "x-group": "adapter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AliasMustBeUnique`: undefined\n* `AdapterUrlRequired`: undefined\n* `NameRequired`: undefined\n* `AliasRequired`: undefined"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaCDNAdapterProfile`",
            "name": "adapter",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/cdnadapterprofile/action/delete": {
      "get": {
        "description": "Delete CDN adapter by CDN adapter id",
        "operationId": "cdnAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "CDN adapter identifier",
            "in": "query",
            "name": "adapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AdapterIdentifierRequired`: undefined\n* `AdapterNotExists`: undefined"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ]
      }
    },
    "/service/cdnadapterprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate CDN adapter shared secret",
        "operationId": "cdnAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "CDN adapter identifier",
            "in": "query",
            "name": "adapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: undefined\n* `AdapterIdentifierRequired`: undefined"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ]
      }
    },
    "/service/cdnadapterprofile/action/list": {
      "get": {
        "description": "Returns all CDN adapters for partner",
        "operationId": "cdnAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ]
      }
    },
    "/service/cdnadapterprofile/action/update": {
      "get": {
        "description": "Update CDN adapter details",
        "operationId": "cdnAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "CDN adapter id to update",
            "in": "query",
            "name": "adapterId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "CDNR adapter name",
            "in": "query",
            "name": "adapter[name]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter active status",
            "in": "query",
            "name": "adapter[isActive]",
            "type": "boolean",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter URL",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter base URL",
            "in": "query",
            "name": "adapter[baseUrl]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "CDN adapter alias",
            "in": "query",
            "name": "adapter[systemName]",
            "type": "string",
            "x-group": "adapter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: undefined\n* `AdapterIdentifierRequired`: undefined\n* `AdapterUrlRequired`: undefined\n* `AliasMustBeUnique`: undefined\n* `NameRequired`: undefined\n* `AliasRequired`: undefined"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaCDNAdapterProfile`",
            "name": "adapter",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/cdnpartnersettings/action/get": {
      "get": {
        "description": "Retrieve the partner’s CDN settings (default adapters)",
        "operationId": "cdnPartnerSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            }
          },
          "x-Errors": {
            "description": "* `CDNPartnerSettingsNotFound`: undefined"
          }
        },
        "tags": [
          "cdnPartnerSettings"
        ]
      }
    },
    "/service/cdnpartnersettings/action/update": {
      "get": {
        "description": "Configure the partner’s CDN settings (default adapters)",
        "operationId": "cdnPartnerSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Default CDN adapter identifier",
            "in": "query",
            "name": "settings[defaultAdapterId]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Default recording CDN adapter identifier",
            "in": "query",
            "name": "settings[defaultRecordingAdapterId]",
            "type": "integer",
            "x-group": "settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            }
          },
          "x-Errors": {
            "description": "* `CDNPartnerSettingsNotFound`: undefined"
          }
        },
        "tags": [
          "cdnPartnerSettings"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaCDNPartnerSettings`",
            "name": "settings",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/cdvradapterprofile/action/add": {
      "get": {
        "description": "Insert new C-DVR adapter for partner",
        "operationId": "cDVRAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "C-DVR adapter name",
            "in": "query",
            "name": "adapter[name]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "C-DVR adapter active status",
            "in": "query",
            "name": "adapter[isActive]",
            "type": "boolean",
            "x-group": "adapter"
          },
          {
            "description": "C-DVR adapter adapter URL",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "C-DVR adapter external identifier",
            "in": "query",
            "name": "adapter[externalIdentifier]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
            "in": "query",
            "name": "adapter[dynamicLinksSupport]",
            "type": "boolean",
            "x-group": "adapter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `AdapterUrlRequired`: undefined\n* `ExternalIdentifierRequired`: undefined"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaCDVRAdapterProfile`",
            "name": "adapter",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/cdvradapterprofile/action/delete": {
      "get": {
        "description": "Delete C-DVR adapter by C-DVR adapter id",
        "operationId": "cDVRAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "C-DVR adapter identifier",
            "in": "query",
            "name": "adapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: undefined"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ]
      }
    },
    "/service/cdvradapterprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate C-DVR adapter shared secret",
        "operationId": "cDVRAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "C-DVR adapter identifier",
            "in": "query",
            "name": "adapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterIdentifierRequired`: undefined\n* `AdapterNotExists`: undefined"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ]
      }
    },
    "/service/cdvradapterprofile/action/list": {
      "get": {
        "description": "Returns all C-DVR adapters for partner",
        "operationId": "cDVRAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ]
      }
    },
    "/service/cdvradapterprofile/action/update": {
      "get": {
        "description": "Update C-DVR adapter details",
        "operationId": "cDVRAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "C-DVR adapter identifier",
            "in": "query",
            "name": "adapterId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "C-DVR adapter name",
            "in": "query",
            "name": "adapter[name]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "C-DVR adapter active status",
            "in": "query",
            "name": "adapter[isActive]",
            "type": "boolean",
            "x-group": "adapter"
          },
          {
            "description": "C-DVR adapter adapter URL",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "C-DVR adapter external identifier",
            "in": "query",
            "name": "adapter[externalIdentifier]",
            "type": "string",
            "x-group": "adapter"
          },
          {
            "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
            "in": "query",
            "name": "adapter[dynamicLinksSupport]",
            "type": "boolean",
            "x-group": "adapter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdentifierRequired`: undefined\n* `AdapterNotExists`: undefined\n* `AdapterIdentifierRequired`: undefined\n* `AdapterUrlRequired`: undefined\n* `NameRequired`: undefined"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaCDVRAdapterProfile`",
            "name": "adapter",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/channel/action/add": {
      "get": {
        "description": "Insert new channel for partner. Currently supports only KSQL channel",
        "operationId": "channel.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Channel name",
            "in": "query",
            "name": "channel[name]",
            "type": "string",
            "x-group": "channel"
          },
          {
            "description": "Cannel description",
            "in": "query",
            "name": "channel[description]",
            "type": "string",
            "x-group": "channel"
          },
          {
            "description": "Filter expression",
            "in": "query",
            "name": "channel[filterExpression]",
            "type": "string",
            "x-group": "channel"
          },
          {
            "description": "active status",
            "in": "query",
            "name": "channel[isActive]",
            "type": "boolean",
            "x-group": "channel"
          },
          {
            "description": "Enum Type: `KalturaAssetOrderBy`\n\nChannel order",
            "enum": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "in": "query",
            "name": "channel[order]",
            "type": "string",
            "x-enumLabels": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "x-enumType": "KalturaAssetOrderBy",
            "x-group": "channel"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: undefined\n* `NoObjectToInsert`: undefined"
          }
        },
        "tags": [
          "channel"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaChannel`",
            "name": "channel",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/channel/action/delete": {
      "get": {
        "description": "Delete channel by its channel id",
        "operationId": "channel.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "channel identifier",
            "in": "query",
            "name": "channelId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ObjectNotExist`: undefined\n* `IdentifierRequired`: undefined"
          }
        },
        "tags": [
          "channel"
        ]
      }
    },
    "/service/channel/action/get": {
      "get": {
        "description": "Returns channel info",
        "operationId": "channel.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Channel Identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/channel/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          }
        },
        "tags": [
          "channel"
        ]
      }
    },
    "/service/channel/action/update": {
      "get": {
        "description": "Update channel details. Currently supports only KSQL channel",
        "operationId": "channel.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Channel identifier",
            "in": "query",
            "name": "channelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Channel name",
            "in": "query",
            "name": "channel[name]",
            "type": "string",
            "x-group": "channel"
          },
          {
            "description": "Cannel description",
            "in": "query",
            "name": "channel[description]",
            "type": "string",
            "x-group": "channel"
          },
          {
            "description": "Filter expression",
            "in": "query",
            "name": "channel[filterExpression]",
            "type": "string",
            "x-group": "channel"
          },
          {
            "description": "active status",
            "in": "query",
            "name": "channel[isActive]",
            "type": "boolean",
            "x-group": "channel"
          },
          {
            "description": "Enum Type: `KalturaAssetOrderBy`\n\nChannel order",
            "enum": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "in": "query",
            "name": "channel[order]",
            "type": "string",
            "x-enumLabels": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "x-enumType": "KalturaAssetOrderBy",
            "x-group": "channel"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          },
          "x-Errors": {
            "description": "* `ObjectNotExist`: undefined\n* `NameRequired`: undefined\n* `NoObjectToInsert`: undefined"
          }
        },
        "tags": [
          "channel"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaChannel`",
            "name": "channel",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurationgroup/action/add": {
      "get": {
        "description": "Add a new configuration group",
        "operationId": "configurationGroup.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group name",
            "in": "query",
            "name": "configurationGroup[name]",
            "type": "string",
            "x-group": "configurationGroup"
          },
          {
            "description": "`insertOnly`\n\nIs default",
            "in": "query",
            "name": "configurationGroup[isDefault]",
            "type": "boolean",
            "x-group": "configurationGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationGroup`",
            "name": "configurationGroup",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurationgroup/action/delete": {
      "get": {
        "description": "Remove a configuration group, including its tags, device configurations and devices associations",
        "operationId": "configurationGroup.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroup"
        ]
      }
    },
    "/service/configurationgroup/action/get": {
      "get": {
        "description": "Return the configuration group details, including group identifiers, tags, and number of associated devices, and list of device configuration",
        "operationId": "configurationGroup.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/configurationgroup/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroup"
        ]
      }
    },
    "/service/configurationgroup/action/list": {
      "get": {
        "description": "Return the list of configuration groups",
        "operationId": "configurationGroup.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupListResponse"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroup"
        ]
      }
    },
    "/service/configurationgroup/action/update": {
      "get": {
        "description": "Update configuration group name",
        "operationId": "configurationGroup.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Configuration group name",
            "in": "query",
            "name": "configurationGroup[name]",
            "type": "string",
            "x-group": "configurationGroup"
          },
          {
            "description": "`insertOnly`\n\nIs default",
            "in": "query",
            "name": "configurationGroup[isDefault]",
            "type": "boolean",
            "x-group": "configurationGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationGroup`",
            "name": "configurationGroup",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurationgroupdevice/action/add": {
      "get": {
        "description": "Associate a collection of devices to a configuration group. If a device is already associated to another group – old association is replaced",
        "operationId": "configurationGroupDevice.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group id",
            "in": "query",
            "name": "configurationGroupDevice[configurationGroupId]",
            "type": "string",
            "x-group": "configurationGroupDevice"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "configurationGroupDevice[udid]",
            "type": "string",
            "x-group": "configurationGroupDevice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupDevice"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationGroupDevice`",
            "name": "configurationGroupDevice",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupDevice"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurationgroupdevice/action/delete": {
      "get": {
        "description": "Remove a device association",
        "operationId": "configurationGroupDevice.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupDevice"
        ]
      }
    },
    "/service/configurationgroupdevice/action/get": {
      "get": {
        "description": "Return the configuration group to which a specific device is associated to",
        "operationId": "configurationGroupDevice.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupDevice"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupDevice"
        ]
      }
    },
    "/service/configurationgroupdevice/action/list": {
      "get": {
        "description": "Return the list of associated devices for a given configuration group",
        "operationId": "configurationGroupDevice.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaConfigurationGroupDeviceOrderBy",
            "x-group": "filter"
          },
          {
            "in": "query",
            "name": "filter[configurationGroupIdEqual]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupDeviceListResponse"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupDevice"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationGroupDeviceFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupDeviceFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurationgrouptag/action/add": {
      "get": {
        "description": "Add a new tag to a configuration group. If this tag is already associated to another group, request fails",
        "operationId": "configurationGroupTag.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group identifier",
            "in": "query",
            "name": "configurationGroupTag[configurationGroupId]",
            "type": "string",
            "x-group": "configurationGroupTag"
          },
          {
            "description": "Tag",
            "in": "query",
            "name": "configurationGroupTag[tag]",
            "type": "string",
            "x-group": "configurationGroupTag"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTag"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupTag"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationGroupTag`",
            "name": "configurationGroupTag",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTag"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurationgrouptag/action/delete": {
      "get": {
        "description": "Remove a tag association from configuration group",
        "operationId": "configurationGroupTag.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Tag",
            "in": "query",
            "name": "tag",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupTag"
        ]
      }
    },
    "/service/configurationgrouptag/action/get": {
      "get": {
        "description": "Return the configuration group the tag is associated to",
        "operationId": "configurationGroupTag.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Tag",
            "in": "query",
            "name": "tag",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTag"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupTag"
        ]
      }
    },
    "/service/configurationgrouptag/action/list": {
      "get": {
        "description": "Return list of tags for a configuration group",
        "operationId": "configurationGroupTag.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaConfigurationGroupTagOrderBy",
            "x-group": "filter"
          },
          {
            "in": "query",
            "name": "filter[configurationGroupIdEqual]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTagListResponse"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurationGroupTag"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationGroupTagFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTagFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurations/action/add": {
      "get": {
        "description": "Add a new device configuration to a configuration group",
        "operationId": "configurations.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration group id",
            "in": "query",
            "name": "configurations[configurationGroupId]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Application name",
            "in": "query",
            "name": "configurations[appName]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Client version",
            "in": "query",
            "name": "configurations[clientVersion]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Enum Type: `KalturaPlatform`\n\nPlatform: Android/iOS/WindowsPhone/Blackberry/STB/CTV/Other",
            "enum": [
              "Android",
              "iOS",
              "WindowsPhone",
              "Blackberry",
              "STB",
              "CTV",
              "Other"
            ],
            "in": "query",
            "name": "configurations[platform]",
            "type": "string",
            "x-enumLabels": [
              "ANDROID",
              "IOS",
              "WINDOWSPHONE",
              "BLACKBERRY",
              "STB",
              "CTV",
              "OTHER"
            ],
            "x-enumType": "KalturaPlatform",
            "x-group": "configurations"
          },
          {
            "description": "External push id",
            "in": "query",
            "name": "configurations[externalPushId]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Is force update",
            "in": "query",
            "name": "configurations[isForceUpdate]",
            "type": "boolean",
            "x-group": "configurations"
          },
          {
            "description": "Content",
            "in": "query",
            "name": "configurations[content]",
            "type": "string",
            "x-group": "configurations"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurations"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurations`",
            "name": "configurations",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurations/action/delete": {
      "get": {
        "description": "Delete a device configuration",
        "operationId": "configurations.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurations"
        ]
      }
    },
    "/service/configurations/action/get": {
      "get": {
        "description": "Return the device configuration",
        "operationId": "configurations.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/configurations/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurations"
        ]
      }
    },
    "/service/configurations/action/list": {
      "get": {
        "description": "Return a list of device configurations of a configuration group",
        "operationId": "configurations.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaConfigurationsOrderBy",
            "x-group": "filter"
          },
          {
            "in": "query",
            "name": "filter[configurationGroupIdEqual]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationsListResponse"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurations"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurationsFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationsFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/configurations/action/serveByDevice": {
      "get": {
        "description": "Return a device configuration applicable for a specific device (UDID), app name, software version, platform and optionally a configuration group’s tag",
        "operationId": "configurations.serveByDevice",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Application name",
            "in": "query",
            "name": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client version",
            "in": "query",
            "name": "clientVersion",
            "required": true,
            "type": "string"
          },
          {
            "description": "platform",
            "in": "query",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Tag",
            "in": "query",
            "name": "tag",
            "required": true,
            "type": "string"
          },
          {
            "description": "Partner Id",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurations"
        ]
      }
    },
    "/service/configurations/action/update": {
      "get": {
        "description": "Update device configuration",
        "operationId": "configurations.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Configuration identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Configuration group id",
            "in": "query",
            "name": "configurations[configurationGroupId]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Application name",
            "in": "query",
            "name": "configurations[appName]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Client version",
            "in": "query",
            "name": "configurations[clientVersion]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Enum Type: `KalturaPlatform`\n\nPlatform: Android/iOS/WindowsPhone/Blackberry/STB/CTV/Other",
            "enum": [
              "Android",
              "iOS",
              "WindowsPhone",
              "Blackberry",
              "STB",
              "CTV",
              "Other"
            ],
            "in": "query",
            "name": "configurations[platform]",
            "type": "string",
            "x-enumLabels": [
              "ANDROID",
              "IOS",
              "WINDOWSPHONE",
              "BLACKBERRY",
              "STB",
              "CTV",
              "OTHER"
            ],
            "x-enumType": "KalturaPlatform",
            "x-group": "configurations"
          },
          {
            "description": "External push id",
            "in": "query",
            "name": "configurations[externalPushId]",
            "type": "string",
            "x-group": "configurations"
          },
          {
            "description": "Is force update",
            "in": "query",
            "name": "configurations[isForceUpdate]",
            "type": "boolean",
            "x-group": "configurations"
          },
          {
            "description": "Content",
            "in": "query",
            "name": "configurations[content]",
            "type": "string",
            "x-group": "configurations"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "configurations"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaConfigurations`",
            "name": "configurations",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/country/action/list": {
      "get": {
        "description": "Get the list of countries for the partner with option to filter by countries identifiers",
        "operationId": "country.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NAME_ASC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NAME_ASC"
            ],
            "x-enumType": "KalturaCountryOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Country identifiers",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCountryListResponse"
            }
          }
        },
        "tags": [
          "country"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaCountryFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaCountryFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/coupon/action/get": {
      "get": {
        "description": "Returns information about a coupon",
        "operationId": "coupon.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCoupon"
            }
          },
          "x-Errors": {
            "description": "* `CouponNotValid`: undefined"
          }
        },
        "tags": [
          "coupon"
        ]
      }
    },
    "/service/devicebrand/action/list": {
      "get": {
        "description": "Return a list of the available device brands.",
        "operationId": "deviceBrand.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceBrandListResponse"
            }
          }
        },
        "tags": [
          "deviceBrand"
        ]
      }
    },
    "/service/devicefamily/action/list": {
      "get": {
        "description": "Return a list of the available device families.",
        "operationId": "deviceFamily.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceFamilyListResponse"
            }
          }
        },
        "tags": [
          "deviceFamily"
        ]
      }
    },
    "/service/entitlement/action/cancel": {
      "get": {
        "description": "Immediately cancel a subscription, PPV or collection. Cancel is possible only if within cancellation window and content not already consumed",
        "operationId": "entitlement.cancel",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The mediaFileID to cancel",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nThe transaction type for the cancelation",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "transactionType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: undefined\n* `ContentAlreadyConsumed`: undefined\n* `CancelationWindowPeriodExpired`: undefined\n* `InvalidPurchase`: undefined"
          }
        },
        "tags": [
          "entitlement"
        ]
      }
    },
    "/service/entitlement/action/cancelRenewal": {
      "get": {
        "description": "Cancel a household service subscription at the next renewal. The subscription stays valid till the next renewal.",
        "operationId": "entitlement.cancelRenewal",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Subscription Code",
            "in": "query",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: undefined\n* `SubscriptionNotRenewable`: undefined\n* `InvalidPurchase`: undefined"
          }
        },
        "tags": [
          "entitlement"
        ]
      }
    },
    "/service/entitlement/action/externalReconcile": {
      "get": {
        "description": "Reconcile the user household&#39;s entitlements with an external entitlements source. This request is frequency protected to avoid too frequent calls per household.",
        "operationId": "entitlement.externalReconcile",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: undefined\n* `AdapterAppFailure`: undefined\n* `UserDoesNotExist`: undefined\n* `ReconciliationFrequencyLimitation`: undefined"
          }
        },
        "tags": [
          "entitlement"
        ]
      }
    },
    "/service/entitlement/action/forceCancel": {
      "get": {
        "description": "Immediately cancel a subscription, PPV or collection. Cancel applies regardless of cancellation window and content consumption status",
        "operationId": "entitlement.forceCancel",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The mediaFileID to cancel",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nThe transaction type for the cancelation",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "transactionType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: undefined\n* `InvalidPurchase`: undefined"
          }
        },
        "tags": [
          "entitlement"
        ]
      }
    },
    "/service/entitlement/action/grant": {
      "get": {
        "description": "Grant household for an entitlement for a PPV or Subscription.",
        "operationId": "entitlement.grant",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Identifier for the product package from which this content is offered",
            "in": "query",
            "name": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nProduct package type. Possible values: PPV, Subscription, Collection",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "productType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType"
          },
          {
            "description": "Controls if the new entitlements grant will appear in the user’s history. True – will add a history entry. False (or if ommited) – no history entry will be added",
            "in": "query",
            "name": "history",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "Identifier for the content. Relevant only if Product type = PPV",
            "in": "query",
            "name": "contentId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `NotForPurchase`: undefined\n* `UnableToPurchaseCollectionPurchased`: undefined\n* `UnKnownPPVModule`: undefined\n* `UnableToPurchasePPVPurchased`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `UnableToPurchaseSubscriptionPurchased`: undefined\n* `UnableToPurchaseFree`: undefined\n* `UnableToPurchaseForPurchaseSubscriptionOnly`: undefined"
          }
        },
        "tags": [
          "entitlement"
        ]
      }
    },
    "/service/entitlement/action/list": {
      "get": {
        "description": "Gets all the entitled media items for a household",
        "operationId": "entitlement.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "PURCHASE_DATE_ASC",
              "PURCHASE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "PURCHASE_DATE_ASC",
              "PURCHASE_DATE_DESC"
            ],
            "x-enumType": "KalturaEntitlementOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nThe type of the entitlements to return",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "filter[entitlementTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "filter[entityReferenceEqual]",
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy",
            "x-group": "filter"
          },
          {
            "description": "Is expired",
            "in": "query",
            "name": "filter[isExpiredEqual]",
            "type": "boolean",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntitlementListResponse"
            }
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaEntitlementFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaEntitlementFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/exporttask/action/add": {
      "get": {
        "description": "Adds a new bulk export task",
        "operationId": "exportTask.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Alias for the task used to solicit an export using API",
            "in": "query",
            "name": "task[alias]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Task display name",
            "in": "query",
            "name": "task[name]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
            "enum": [
              "vod",
              "epg",
              "users"
            ],
            "in": "query",
            "name": "task[dataType]",
            "type": "string",
            "x-enumLabels": [
              "VOD",
              "EPG",
              "USERS"
            ],
            "x-enumType": "KalturaExportDataType",
            "x-group": "task"
          },
          {
            "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
            "in": "query",
            "name": "task[filter]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
            "enum": [
              "full",
              "incremental"
            ],
            "in": "query",
            "name": "task[exportType]",
            "type": "string",
            "x-enumLabels": [
              "FULL",
              "INCREMENTAL"
            ],
            "x-enumType": "KalturaExportType",
            "x-group": "task"
          },
          {
            "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
            "in": "query",
            "name": "task[frequency]",
            "type": "integer",
            "x-group": "task"
          },
          {
            "description": "The URL for sending a notification when the task&#39;s export process is done",
            "in": "query",
            "name": "task[notificationUrl]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Indicates if the task is active or not",
            "in": "query",
            "name": "task[isActive]",
            "type": "boolean",
            "x-group": "task"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaExportTask`",
            "name": "task",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/exporttask/action/delete": {
      "get": {
        "description": "Deletes an existing bulk export task by task identifier",
        "operationId": "exportTask.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The identifier of the task to delete",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "exportTask"
        ]
      }
    },
    "/service/exporttask/action/get": {
      "get": {
        "description": "Gets an existing bulk export task by task identifier",
        "operationId": "exportTask.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The identifier of the task to get",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/exporttask/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        },
        "tags": [
          "exportTask"
        ]
      }
    },
    "/service/exporttask/action/list": {
      "get": {
        "description": "Returns bulk export tasks by tasks identifiers",
        "operationId": "exportTask.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "x-enumType": "KalturaExportTaskOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated tasks identifiers",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTaskListResponse"
            }
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaExportTaskFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaExportTaskFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/exporttask/action/update": {
      "get": {
        "description": "Updates an existing bulk export task by task identifier",
        "operationId": "exportTask.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The task id to update",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Alias for the task used to solicit an export using API",
            "in": "query",
            "name": "task[alias]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Task display name",
            "in": "query",
            "name": "task[name]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
            "enum": [
              "vod",
              "epg",
              "users"
            ],
            "in": "query",
            "name": "task[dataType]",
            "type": "string",
            "x-enumLabels": [
              "VOD",
              "EPG",
              "USERS"
            ],
            "x-enumType": "KalturaExportDataType",
            "x-group": "task"
          },
          {
            "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
            "in": "query",
            "name": "task[filter]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
            "enum": [
              "full",
              "incremental"
            ],
            "in": "query",
            "name": "task[exportType]",
            "type": "string",
            "x-enumLabels": [
              "FULL",
              "INCREMENTAL"
            ],
            "x-enumType": "KalturaExportType",
            "x-group": "task"
          },
          {
            "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
            "in": "query",
            "name": "task[frequency]",
            "type": "integer",
            "x-group": "task"
          },
          {
            "description": "The URL for sending a notification when the task&#39;s export process is done",
            "in": "query",
            "name": "task[notificationUrl]",
            "type": "string",
            "x-group": "task"
          },
          {
            "description": "Indicates if the task is active or not",
            "in": "query",
            "name": "task[isActive]",
            "type": "boolean",
            "x-group": "task"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaExportTask`",
            "name": "task",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/externalchannelprofile/action/add": {
      "get": {
        "description": "Insert new External channel for partner",
        "operationId": "externalChannelProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "External channel name",
            "in": "query",
            "name": "externalChannel[name]",
            "type": "string",
            "x-group": "externalChannel"
          },
          {
            "description": "External channel active status",
            "in": "query",
            "name": "externalChannel[isActive]",
            "type": "boolean",
            "x-group": "externalChannel"
          },
          {
            "description": "External channel external identifier",
            "in": "query",
            "name": "externalChannel[externalIdentifier]",
            "type": "string",
            "x-group": "externalChannel"
          },
          {
            "description": "Filter expression",
            "in": "query",
            "name": "externalChannel[filterExpression]",
            "type": "string",
            "x-group": "externalChannel"
          },
          {
            "description": "Recommendation engine id",
            "in": "query",
            "name": "externalChannel[recommendationEngineId]",
            "type": "integer",
            "x-group": "externalChannel"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            }
          },
          "x-Errors": {
            "description": "* `InactiveExternalChannelEnrichment`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `NameRequired`: undefined\n* `RecommendationEngineNotExist`: undefined\n* `RecommendationEngineIdentifierRequired`: undefined"
          }
        },
        "tags": [
          "externalChannelProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaExternalChannelProfile`",
            "name": "externalChannel",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/externalchannelprofile/action/delete": {
      "get": {
        "description": "Delete External channel by External channel id",
        "operationId": "externalChannelProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "External channel identifier",
            "in": "query",
            "name": "externalChannelId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ExternalChannelIdentifierRequired`: undefined\n* `ExternalChannelNotExist`: undefined"
          }
        },
        "tags": [
          "externalChannelProfile"
        ]
      }
    },
    "/service/externalchannelprofile/action/list": {
      "get": {
        "description": "Returns all External channels for partner",
        "operationId": "externalChannelProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfileListResponse"
            }
          }
        },
        "tags": [
          "externalChannelProfile"
        ]
      }
    },
    "/service/externalchannelprofile/action/update": {
      "get": {
        "description": "Update External channel details",
        "operationId": "externalChannelProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "External channel identifier",
            "in": "query",
            "name": "externalChannelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "External channel name",
            "in": "query",
            "name": "externalChannel[name]",
            "type": "string",
            "x-group": "externalChannel"
          },
          {
            "description": "External channel active status",
            "in": "query",
            "name": "externalChannel[isActive]",
            "type": "boolean",
            "x-group": "externalChannel"
          },
          {
            "description": "External channel external identifier",
            "in": "query",
            "name": "externalChannel[externalIdentifier]",
            "type": "string",
            "x-group": "externalChannel"
          },
          {
            "description": "Filter expression",
            "in": "query",
            "name": "externalChannel[filterExpression]",
            "type": "string",
            "x-group": "externalChannel"
          },
          {
            "description": "Recommendation engine id",
            "in": "query",
            "name": "externalChannel[recommendationEngineId]",
            "type": "integer",
            "x-group": "externalChannel"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdentifierRequired`: undefined\n* `ExternalChannelIdentifierRequired`: undefined\n* `InactiveExternalChannelEnrichment`: undefined\n* `NameRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `ExternalChannelNotExist`: undefined"
          }
        },
        "tags": [
          "externalChannelProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaExternalChannelProfile`",
            "name": "externalChannel",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/favorite/action/add": {
      "get": {
        "description": "Add media to user&#39;s favorite list",
        "operationId": "favorite.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "AssetInfo Model",
            "in": "query",
            "name": "favorite[assetId]",
            "type": "integer",
            "x-group": "favorite"
          },
          {
            "description": "Extra Value",
            "in": "query",
            "name": "favorite[extraData]",
            "type": "string",
            "x-group": "favorite"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFavorite"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `WrongPasswordOrUserName`: undefined"
          }
        },
        "tags": [
          "favorite"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaFavorite`",
            "name": "favorite",
            "schema": {
              "$ref": "#/definitions/KalturaFavorite"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/favorite/action/delete": {
      "get": {
        "description": "Remove media from user&#39;s favorite list",
        "operationId": "favorite.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Media identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `UserDoesNotExist`: undefined\n* `WrongPasswordOrUserName`: undefined"
          }
        },
        "tags": [
          "favorite"
        ]
      }
    },
    "/service/favorite/action/list": {
      "get": {
        "description": "Retrieving users&#39; favorites",
        "operationId": "favorite.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "x-enumType": "KalturaFavoriteOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Media type to filter by the favorite assets",
            "in": "query",
            "name": "filter[mediaTypeEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Media identifiers from which to filter the favorite assets",
            "in": "query",
            "name": "filter[mediaIdIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFavoriteListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "favorite"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaFavoriteFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaFavoriteFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/followtvseries/action/add": {
      "get": {
        "description": "Add a user&#39;s tv series follow.\r\n            Possible status codes: UserAlreadyFollowing = 8013, NotFound = 500007, InvalidAssetId = 4024",
        "operationId": "followTvSeries.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset Id",
            "in": "query",
            "name": "followTvSeries[assetId]",
            "type": "integer",
            "x-group": "followTvSeries"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeries"
            }
          },
          "x-Errors": {
            "description": "* `UserAlreadyFollowing`: undefined\n* `InvalidAssetId`: undefined"
          }
        },
        "tags": [
          "followTvSeries"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaFollowTvSeries`",
            "name": "followTvSeries",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeries"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/followtvseries/action/delete": {
      "get": {
        "description": "Delete a user&#39;s tv series follow.\r\n            Possible status codes: UserNotFollowing = 8012, NotFound = 500007, InvalidAssetId = 4024, AnnouncementNotFound = 8006",
        "operationId": "followTvSeries.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: undefined\n* `UserNotFollowing`: undefined\n* `InvalidAssetId`: undefined"
          }
        },
        "tags": [
          "followTvSeries"
        ]
      }
    },
    "/service/followtvseries/action/list": {
      "get": {
        "description": "List user&#39;s tv series follows.\r\n            Possible status codes:",
        "operationId": "followTvSeries.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "START_DATE_DESC",
              "START_DATE_ASC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "START_DATE_DESC",
              "START_DATE_ASC"
            ],
            "x-enumType": "KalturaFollowTvSeriesOrderBy",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeriesListResponse"
            }
          }
        },
        "tags": [
          "followTvSeries"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaFollowTvSeriesFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeriesFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/homenetwork/action/add": {
      "get": {
        "description": "Add a new home network to a household",
        "operationId": "homeNetwork.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "`insertOnly`\n\nHome network identifier",
            "in": "query",
            "name": "homeNetwork[externalId]",
            "type": "string",
            "x-group": "homeNetwork"
          },
          {
            "description": "Home network name",
            "in": "query",
            "name": "homeNetwork[name]",
            "type": "string",
            "x-group": "homeNetwork"
          },
          {
            "description": "Home network description",
            "in": "query",
            "name": "homeNetwork[description]",
            "type": "string",
            "x-group": "homeNetwork"
          },
          {
            "description": "Is home network is active",
            "in": "query",
            "name": "homeNetwork[isActive]",
            "type": "boolean",
            "x-group": "homeNetwork"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdentifierRequired`: undefined\n* `HomeNetworkAlreadyExists`: undefined\n* `HomeNetworkLimitation`: undefined"
          }
        },
        "tags": [
          "homeNetwork"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHomeNetwork`",
            "name": "homeNetwork",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/homenetwork/action/delete": {
      "get": {
        "description": "Delete household’s existing home network",
        "operationId": "homeNetwork.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The network to update",
            "in": "query",
            "name": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `HomeNetworkFrequency`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `HomeNetworkDoesNotExist`: undefined"
          }
        },
        "tags": [
          "homeNetwork"
        ]
      }
    },
    "/service/homenetwork/action/list": {
      "get": {
        "description": "Retrieve the household’s home networks",
        "operationId": "homeNetwork.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetworkListResponse"
            }
          }
        },
        "tags": [
          "homeNetwork"
        ]
      }
    },
    "/service/homenetwork/action/update": {
      "get": {
        "description": "Update and existing home network for a household",
        "operationId": "homeNetwork.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Home network identifier",
            "in": "query",
            "name": "externalId",
            "required": true,
            "type": "string"
          },
          {
            "description": "`insertOnly`\n\nHome network identifier",
            "in": "query",
            "name": "homeNetwork[externalId]",
            "type": "string",
            "x-group": "homeNetwork"
          },
          {
            "description": "Home network name",
            "in": "query",
            "name": "homeNetwork[name]",
            "type": "string",
            "x-group": "homeNetwork"
          },
          {
            "description": "Home network description",
            "in": "query",
            "name": "homeNetwork[description]",
            "type": "string",
            "x-group": "homeNetwork"
          },
          {
            "description": "Is home network is active",
            "in": "query",
            "name": "homeNetwork[isActive]",
            "type": "boolean",
            "x-group": "homeNetwork"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            }
          },
          "x-Errors": {
            "description": "* `HomeNetworkDoesNotExist`: undefined\n* `ExternalIdentifierRequired`: undefined"
          }
        },
        "tags": [
          "homeNetwork"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHomeNetwork`",
            "name": "homeNetwork",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/household/action/add": {
      "get": {
        "description": "Creates a household for the user",
        "operationId": "household.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Household name",
            "in": "query",
            "name": "household[name]",
            "type": "string",
            "x-group": "household"
          },
          {
            "description": "Household description",
            "in": "query",
            "name": "household[description]",
            "type": "string",
            "x-group": "household"
          },
          {
            "description": "`insertOnly`\n\nHousehold external identifier",
            "in": "query",
            "name": "household[externalId]",
            "type": "string",
            "x-group": "household"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdUserFailed`: undefined\n* `DomainNotExists`: undefined"
          }
        },
        "tags": [
          "household"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHousehold`",
            "name": "household",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/household/action/delete": {
      "get": {
        "description": "Fully delete a household. Delete all of the household information, including users, devices, transactions and assets.",
        "operationId": "household.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Household identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "household"
        ]
      }
    },
    "/service/household/action/get": {
      "get": {
        "description": "Returns the household model",
        "operationId": "household.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Household identifier",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/household/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdUserFailed`: undefined\n* `DomainNotExists`: undefined"
          }
        },
        "tags": [
          "household"
        ]
      }
    },
    "/service/household/action/resetFrequency": {
      "get": {
        "description": "Reset a household’s time limitation for removing user or device",
        "operationId": "household.resetFrequency",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaHouseholdFrequencyType`\n\nPossible values: devices – reset the device change frequency. \r\n            users – reset the user add/remove frequency",
            "enum": [
              "devices",
              "users"
            ],
            "in": "query",
            "name": "frequencyType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "DEVICES",
              "USERS"
            ],
            "x-enumType": "KalturaHouseholdFrequencyType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          }
        },
        "tags": [
          "household"
        ]
      }
    },
    "/service/household/action/resume": {
      "get": {
        "description": "Resumed a given household service to its previous service settings",
        "operationId": "household.resume",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainAlreadyActive`: undefined"
          }
        },
        "tags": [
          "household"
        ]
      }
    },
    "/service/household/action/suspend": {
      "get": {
        "description": "Suspend a given household service. Sets the household status to “suspended&quot;.The household service settings are maintained for later resume",
        "operationId": "household.suspend",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainAlreadySuspended`: undefined"
          }
        },
        "tags": [
          "household"
        ]
      }
    },
    "/service/household/action/update": {
      "get": {
        "description": "Update the household name and description",
        "operationId": "household.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Household name",
            "in": "query",
            "name": "household[name]",
            "type": "string",
            "x-group": "household"
          },
          {
            "description": "Household description",
            "in": "query",
            "name": "household[description]",
            "type": "string",
            "x-group": "household"
          },
          {
            "description": "`insertOnly`\n\nHousehold external identifier",
            "in": "query",
            "name": "household[externalId]",
            "type": "string",
            "x-group": "household"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          }
        },
        "tags": [
          "household"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHousehold`",
            "name": "household",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/householddevice/action/add": {
      "get": {
        "description": "Add device to household",
        "operationId": "householdDevice.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Household identifier",
            "in": "query",
            "name": "device[householdId]",
            "type": "integer",
            "x-group": "device"
          },
          {
            "description": "`insertOnly`\n\nDevice UDID",
            "in": "query",
            "name": "device[udid]",
            "type": "string",
            "x-group": "device"
          },
          {
            "description": "Device name",
            "in": "query",
            "name": "device[name]",
            "type": "string",
            "x-group": "device"
          },
          {
            "description": "Device brand identifier",
            "in": "query",
            "name": "device[brandId]",
            "type": "integer",
            "x-group": "device"
          },
          {
            "description": "Device activation date (epoch)",
            "in": "query",
            "name": "device[activatedOn]",
            "type": "integer",
            "x-group": "device"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DeviceExistsInOtherDomains`: undefined\n* `DomainNotExists`: undefined\n* `DomainSuspended`: undefined\n* `NoUsersInDomain`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHouseholdDevice`",
            "name": "device",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/householddevice/action/addByPin": {
      "get": {
        "description": "Registers a device to a household using pin code",
        "operationId": "householdDevice.addByPin",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device name",
            "in": "query",
            "name": "deviceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pin code",
            "in": "query",
            "name": "pin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: undefined\n* `ExceededLimit`: undefined\n* `DuplicatePin`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ]
      }
    },
    "/service/householddevice/action/delete": {
      "get": {
        "description": "Removes a device from household",
        "operationId": "householdDevice.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: undefined\n* `DeviceNotInDomain`: undefined\n* `LimitationPeriod`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ]
      }
    },
    "/service/householddevice/action/generatePin": {
      "get": {
        "description": "Generates device pin to use when adding a device to household by pin",
        "operationId": "householdDevice.generatePin",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device brand identifier",
            "in": "query",
            "name": "brandId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDevicePin"
            }
          }
        },
        "tags": [
          "householdDevice"
        ]
      }
    },
    "/service/householddevice/action/get": {
      "get": {
        "description": "Returns device registration status to the supplied household",
        "operationId": "householdDevice.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: undefined\n* `DeviceNotInDomain`: undefined\n* `DeviceExistsInOtherDomains`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ]
      }
    },
    "/service/householddevice/action/list": {
      "get": {
        "description": "Returns the devices within the household",
        "operationId": "householdDevice.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaHouseholdDeviceOrderBy",
            "x-group": "filter"
          },
          {
            "description": "The identifier of the household",
            "in": "query",
            "name": "filter[householdIdEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Device family Ids",
            "in": "query",
            "name": "filter[deviceFamilyIdIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDeviceListResponse"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHouseholdDeviceFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDeviceFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/householddevice/action/update": {
      "get": {
        "description": "Update the name of the device by UDID",
        "operationId": "householdDevice.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Household identifier",
            "in": "query",
            "name": "device[householdId]",
            "type": "integer",
            "x-group": "device"
          },
          {
            "description": "`insertOnly`\n\nDevice UDID",
            "in": "query",
            "name": "device[udid]",
            "type": "string",
            "x-group": "device"
          },
          {
            "description": "Device name",
            "in": "query",
            "name": "device[name]",
            "type": "string",
            "x-group": "device"
          },
          {
            "description": "Device brand identifier",
            "in": "query",
            "name": "device[brandId]",
            "type": "integer",
            "x-group": "device"
          },
          {
            "description": "Device activation date (epoch)",
            "in": "query",
            "name": "device[activatedOn]",
            "type": "integer",
            "x-group": "device"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHouseholdDevice`",
            "name": "device",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/householddevice/action/updateStatus": {
      "get": {
        "description": "Update the name of the device by UDID",
        "operationId": "householdDevice.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaDeviceStatus`\n\nDevice status",
            "enum": [
              "PENDING",
              "ACTIVATED",
              "NOT_ACTIVATED"
            ],
            "in": "query",
            "name": "status",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PENDING",
              "ACTIVATED",
              "NOT_ACTIVATED"
            ],
            "x-enumType": "KalturaDeviceStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ExceededLimit`: undefined\n* `LimitationPeriod`: undefined"
          }
        },
        "tags": [
          "householdDevice"
        ]
      }
    },
    "/service/householdlimitations/action/get": {
      "get": {
        "description": "Get the limitation module by id",
        "operationId": "householdLimitations.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/householdlimitations/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdLimitations"
            }
          }
        },
        "tags": [
          "householdLimitations"
        ]
      }
    },
    "/service/householdpaymentgateway/action/disable": {
      "get": {
        "description": "Disable payment-gateway on the household",
        "operationId": "householdPaymentGateway.disable",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayIdRequired`: undefined\n* `HouseholdNotSetToPaymentGateway`: undefined\n* `PaymentGatewayNotExist`: undefined\n* `PaymentGatewaySelectionIsDisabled`: undefined\n* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ]
      }
    },
    "/service/householdpaymentgateway/action/enable": {
      "get": {
        "description": "Enable a payment-gateway provider for the household.",
        "operationId": "householdPaymentGateway.enable",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotValid`: undefined\n* `UserSuspended`: undefined\n* `PaymentGatewayIdRequired`: undefined\n* `ErrorSavingPaymentGatewayHousehold`: undefined\n* `HouseholdAlreadySetToPaymentGateway`: undefined\n* `PaymentGatewaySelectionIsDisabled`: undefined"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ]
      }
    },
    "/service/householdpaymentgateway/action/getChargeID": {
      "get": {
        "description": "Get a household’s billing account identifier (charge ID) for a given payment gateway",
        "operationId": "householdPaymentGateway.getChargeID",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "External identifier for the payment gateway",
            "in": "query",
            "name": "paymentGatewayExternalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdentifierRequired`: undefined\n* `ChargeIdNotSetToHousehold`: undefined\n* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ]
      }
    },
    "/service/householdpaymentgateway/action/invoke": {
      "get": {
        "description": "Gets the Payment Gateway Configuration for the payment gateway identifier given",
        "operationId": "householdPaymentGateway.invoke",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The payemnt gateway for which to return the registration URL/s for the household. If omitted – return the regisration URL for the household for the default payment gateway",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Represent the client’s intent for working with the payment gateway. Intent options to be coordinated with the applicable payment gateway adapter.",
            "in": "query",
            "name": "intent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayConfiguration"
            }
          },
          "x-Errors": {
            "description": "* `SignatureMismatch`: undefined\n* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ]
      }
    },
    "/service/householdpaymentgateway/action/list": {
      "get": {
        "description": "Get a list of all configured Payment Gateways providers available for the account. For each payment is provided with the household associated payment methods.",
        "operationId": "householdPaymentGateway.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentGatewayListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ]
      }
    },
    "/service/householdpaymentgateway/action/setChargeID": {
      "get": {
        "description": "Set user billing account identifier (charge ID), for a specific household and a specific payment gateway",
        "operationId": "householdPaymentGateway.setChargeID",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "External identifier for the payment gateway",
            "in": "query",
            "name": "paymentGatewayExternalId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The billing user account identifier for this household at the given payment gateway",
            "in": "query",
            "name": "chargeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayChargeIdRequired`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `PaymentGatewayNotExist`: undefined\n* `ErrorSavingPaymentGatewayHousehold`: undefined\n* `ChargeIdAlreadySetToHouseholdPaymentGateway`: undefined"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ]
      }
    },
    "/service/householdpaymentmethod/action/add": {
      "get": {
        "description": "Add a new payment method for household",
        "operationId": "householdPaymentMethod.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "`insertOnly`\n\nExternal identifier for the household payment method",
            "in": "query",
            "name": "householdPaymentMethod[externalId]",
            "type": "string",
            "x-group": "householdPaymentMethod"
          },
          {
            "description": "Payment-gateway identifier",
            "in": "query",
            "name": "householdPaymentMethod[paymentGatewayId]",
            "type": "integer",
            "x-group": "householdPaymentMethod"
          },
          {
            "description": "Description of the payment method details",
            "in": "query",
            "name": "householdPaymentMethod[details]",
            "type": "string",
            "x-group": "householdPaymentMethod"
          },
          {
            "description": "Payment method profile identifier",
            "in": "query",
            "name": "householdPaymentMethod[paymentMethodProfileId]",
            "type": "integer",
            "x-group": "householdPaymentMethod"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotSetForHousehold`: undefined\n* `PaymentGatewayNotSupportPaymentMethod`: undefined\n* `PaymentGatewayNotValid`: undefined\n* `PaymentGatewayNotSetForHousehold`: undefined\n* `ErrorSavingPaymentGatewayHouseholdPaymentMethod`: undefined"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHouseholdPaymentMethod`",
            "name": "householdPaymentMethod",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/householdpaymentmethod/action/forceRemove": {
      "get": {
        "description": "Force remove of a payment method of the household.",
        "operationId": "householdPaymentMethod.forceRemove",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Payment method Identifier",
            "in": "query",
            "name": "paymentMethodId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: undefined\n* `PaymentMethodNotSetForHousehold`: undefined\n* `PaymentGatewayNotSetForHousehold`: undefined"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ]
      }
    },
    "/service/householdpaymentmethod/action/list": {
      "get": {
        "description": "Get a list of all payment methods of the household.",
        "operationId": "householdPaymentMethod.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentMethodListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ]
      }
    },
    "/service/householdpaymentmethod/action/remove": {
      "get": {
        "description": "Removes a payment method of the household.",
        "operationId": "householdPaymentMethod.remove",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Payment method Identifier",
            "in": "query",
            "name": "paymentMethodId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotSetForHousehold`: undefined\n* `PaymentMethodNotSetForHousehold`: undefined\n* `PaymentMethodIsUsedByHousehold`: undefined\n* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ]
      }
    },
    "/service/householdpaymentmethod/action/setAsDefault": {
      "get": {
        "description": "Set a payment method as default for the household.",
        "operationId": "householdPaymentMethod.setAsDefault",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Payment method Identifier",
            "in": "query",
            "name": "paymentMethodId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotSetForHousehold`: undefined\n* `PaymentGatewayNotValid`: undefined\n* `PaymentMethodNotSetForHousehold`: undefined\n* `ErrorSavingPaymentGatewayHouseholdPaymentMethod`: undefined\n* `PaymentGatewayNotSupportPaymentMethod`: undefined"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ]
      }
    },
    "/service/householdpremiumservice/action/list": {
      "get": {
        "description": "Returns all the premium services allowed for the household",
        "operationId": "householdPremiumService.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPremiumServiceListResponse"
            }
          }
        },
        "tags": [
          "householdPremiumService"
        ]
      }
    },
    "/service/householdquota/action/get": {
      "get": {
        "description": "Returns the household&#39;s quota data",
        "operationId": "householdQuota.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdQuota"
            }
          }
        },
        "tags": [
          "householdQuota"
        ]
      }
    },
    "/service/householduser/action/add": {
      "get": {
        "description": "Adds a user to household",
        "operationId": "householdUser.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The identifier of the household",
            "in": "query",
            "name": "householdUser[householdId]",
            "type": "integer",
            "x-group": "householdUser"
          },
          {
            "description": "The identifier of the user",
            "in": "query",
            "name": "householdUser[userId]",
            "type": "string",
            "x-group": "householdUser"
          },
          {
            "description": "True if the user added as master use",
            "in": "query",
            "name": "householdUser[isMaster]",
            "type": "boolean",
            "x-group": "householdUser"
          },
          {
            "description": "`insertOnly`\n\nThe username of the household master for adding a user in status pending for the household master to approve",
            "in": "query",
            "name": "householdUser[householdMasterUsername]",
            "type": "string",
            "x-group": "householdUser"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUser"
            }
          },
          "x-Errors": {
            "description": "* `UserExistsInOtherDomains`: undefined\n* `RequestFailed`: undefined\n* `DomainSuspended`: undefined\n* `InvalidUser`: undefined\n* `UserAlreadyInDomain`: undefined\n* `UserNotAllowed`: undefined\n* `ExceededUserLimit`: undefined\n* `NoUsersInDomain`: undefined\n* `ActionUserNotMaster`: undefined"
          }
        },
        "tags": [
          "householdUser"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHouseholdUser`",
            "name": "householdUser",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUser"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/householduser/action/delete": {
      "get": {
        "description": "Removes a user from household",
        "operationId": "householdUser.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The identifier of the user to delete",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: undefined\n* `UserNotAllowed`: undefined\n* `NoUsersInDomain`: undefined\n* `DomainSuspended`: undefined\n* `InvalidUser`: undefined\n* `LimitationPeriod`: undefined\n* `UserNotExistsInDomain`: undefined"
          }
        },
        "tags": [
          "householdUser"
        ]
      }
    },
    "/service/householduser/action/list": {
      "get": {
        "description": "Returns the users within the household",
        "operationId": "householdUser.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaHouseholdUserOrderBy",
            "x-group": "filter"
          },
          {
            "description": "The identifier of the household",
            "in": "query",
            "name": "filter[householdIdEqual]",
            "type": "integer",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUserListResponse"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: undefined\n* `HouseholdUserFailed`: undefined"
          }
        },
        "tags": [
          "householdUser"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaHouseholdUserFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUserFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/inboxmessage/action/get": {
      "get": {
        "description": "TBD",
        "operationId": "inboxMessage.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "message id",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/inboxmessage/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessage"
            }
          },
          "x-Errors": {
            "description": "* `UserInboxMessagesNotExist`: undefined"
          }
        },
        "tags": [
          "inboxMessage"
        ]
      }
    },
    "/service/inboxmessage/action/list": {
      "get": {
        "description": "List inbox messages",
        "operationId": "inboxMessage.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaInboxMessageOrderBy",
            "x-group": "filter"
          },
          {
            "description": "List of inbox message types to search within.",
            "in": "query",
            "name": "filter[typeIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "createdAtGreaterThanOrEqual",
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "createdAtLessThanOrEqual",
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessageListResponse"
            }
          },
          "x-Errors": {
            "description": "* `MessageIdentifierRequired`: undefined\n* `UserInboxMessagesNotExist`: undefined"
          }
        },
        "tags": [
          "inboxMessage"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaInboxMessageFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessageFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/inboxmessage/action/updateStatus": {
      "get": {
        "description": "TBD",
        "operationId": "inboxMessage.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaInboxMessageStatus`",
            "enum": [
              "Unread",
              "Read",
              "Deleted"
            ],
            "in": "query",
            "name": "status",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "UNREAD",
              "READ",
              "DELETED"
            ],
            "x-enumType": "KalturaInboxMessageStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "inboxMessage"
        ]
      }
    },
    "/service/licensedurl/action/get": {
      "get": {
        "description": "Get the URL for playing an asset - program, media or recording",
        "operationId": "licensedUrl.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset identifier",
            "in": "query",
            "name": "request[assetId]",
            "type": "string",
            "x-group": "request"
          },
          {
            "enum": [
              "KalturaLicensedUrlMediaRequest",
              "KalturaLicensedUrlRecordingRequest",
              "KalturaLicensedUrlEpgRequest"
            ],
            "in": "query",
            "name": "request[objectType]",
            "type": "string",
            "x-group": "request"
          },
          {
            "description": "Identifier of the content to get the link for (file identifier)",
            "in": "query",
            "name": "request[contentId]",
            "type": "integer",
            "x-group": "request",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlMediaRequest"
              ]
            }
          },
          {
            "description": "Base URL for the licensed URLs",
            "in": "query",
            "name": "request[baseUrl]",
            "type": "string",
            "x-group": "request",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlMediaRequest"
              ]
            }
          },
          {
            "description": "The file type for the URL",
            "in": "query",
            "name": "request[fileType]",
            "type": "string",
            "x-group": "request",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlRecordingRequest"
              ]
            }
          },
          {
            "description": "Enum Type: `KalturaStreamType`\n\nThe stream type to get the URL for",
            "enum": [
              "catchup",
              "start_over",
              "trick_play"
            ],
            "in": "query",
            "name": "request[streamType]",
            "type": "string",
            "x-enumLabels": [
              "CATCHUP",
              "START_OVER",
              "TRICK_PLAY"
            ],
            "x-enumType": "KalturaStreamType",
            "x-group": "request",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlEpgRequest"
              ]
            }
          },
          {
            "description": "The start date of the stream (epoch)",
            "in": "query",
            "name": "request[startDate]",
            "type": "integer",
            "x-group": "request",
            "x-inputType": "datetime",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlEpgRequest"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLicensedUrl"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: undefined\n* `UserSuspended`: undefined\n* `InvalidBaseLink`: undefined\n* `RecordingNotFound`: undefined\n* `DeviceNotInDomain`: undefined\n* `RecordingPlaybackNotAllowedForNotEntitledEpgChannel`: undefined\n* `ProgramDoesntExist`: undefined\n* `RecordingPlaybackNotAllowedForNonExistingEpgChannel`: undefined\n* `RecordingStatusNotValid`: undefined\n* `MediaConcurrencyLimitation`: undefined\n* `ServiceNotAllowed`: undefined\n* `NotEntitled`: undefined\n* `DeviceTypeNotAllowed`: undefined\n* `ConcurrencyLimitation`: undefined"
          }
        },
        "tags": [
          "licensedUrl"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaLicensedUrlBaseRequest`",
            "name": "request",
            "schema": {
              "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/messagetemplate/action/get": {
      "get": {
        "description": "Retrieve a message template used in push notifications and inbox",
        "operationId": "messageTemplate.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaOTTAssetType`\n\npossible values: Asset type – Series",
            "enum": [
              0
            ],
            "in": "query",
            "name": "assetType",
            "required": true,
            "type": "integer",
            "x-enumLabels": [
              "SERIES"
            ],
            "x-enumType": "KalturaOTTAssetType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            }
          }
        },
        "tags": [
          "messageTemplate"
        ]
      }
    },
    "/service/messagetemplate/action/update": {
      "get": {
        "description": "Set the account’s push notifications and inbox messages templates",
        "operationId": "messageTemplate.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaOTTAssetType`\n\nThe asset type to update its template",
            "enum": [
              0
            ],
            "in": "query",
            "name": "assetType",
            "required": true,
            "type": "integer",
            "x-enumLabels": [
              "SERIES"
            ],
            "x-enumType": "KalturaOTTAssetType"
          },
          {
            "description": "The message template with placeholders",
            "in": "query",
            "name": "template[message]",
            "type": "string",
            "x-group": "template"
          },
          {
            "description": "Default date format for the date &amp; time entries used in the template",
            "in": "query",
            "name": "template[dateFormat]",
            "type": "string",
            "x-group": "template"
          },
          {
            "description": "Enum Type: `KalturaOTTAssetType`\n\nTemplate type. Possible values: Series",
            "enum": [
              0
            ],
            "in": "query",
            "name": "template[assetType]",
            "type": "integer",
            "x-enumLabels": [
              "SERIES"
            ],
            "x-enumType": "KalturaOTTAssetType",
            "x-group": "template"
          },
          {
            "description": "Sound file name to play upon message arrival to the device (if supported by target device)",
            "in": "query",
            "name": "template[sound]",
            "type": "string",
            "x-group": "template"
          },
          {
            "description": "an optional action",
            "in": "query",
            "name": "template[action]",
            "type": "string",
            "x-group": "template"
          },
          {
            "description": "URL template for deep linking. Example - /app/location/{mediaId}",
            "in": "query",
            "name": "template[url]",
            "type": "string",
            "x-group": "template"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            }
          }
        },
        "tags": [
          "messageTemplate"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaMessageTemplate`",
            "name": "template",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/meta/action/list": {
      "get": {
        "description": "Get the list of meta mappings for the partner",
        "operationId": "meta.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaMetaOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaMetaFieldName`\n\nMeta system field name to filter by",
            "enum": [
              "NONE",
              "SERIES_ID",
              "SEASON_NUMBER",
              "EPISODE_NUMBER"
            ],
            "in": "query",
            "name": "filter[fieldNameEqual]",
            "type": "string",
            "x-enumLabels": [
              "NONE",
              "SERIES_ID",
              "SEASON_NUMBER",
              "EPISODE_NUMBER"
            ],
            "x-enumType": "KalturaMetaFieldName",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaMetaFieldName`\n\nMeta system field name to filter by",
            "enum": [
              "NONE",
              "SERIES_ID",
              "SEASON_NUMBER",
              "EPISODE_NUMBER"
            ],
            "in": "query",
            "name": "filter[fieldNameNotEqual]",
            "type": "string",
            "x-enumLabels": [
              "NONE",
              "SERIES_ID",
              "SEASON_NUMBER",
              "EPISODE_NUMBER"
            ],
            "x-enumType": "KalturaMetaFieldName",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaMetaType`\n\nMeta type to filter by",
            "enum": [
              "STRING",
              "NUMBER",
              "BOOLEAN",
              "STRING_ARRAY"
            ],
            "in": "query",
            "name": "filter[typeEqual]",
            "type": "string",
            "x-enumLabels": [
              "STRING",
              "NUMBER",
              "BOOLEAN",
              "STRING_ARRAY"
            ],
            "x-enumType": "KalturaMetaType",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetaListResponse"
            }
          }
        },
        "tags": [
          "meta"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaMetaFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaMetaFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/notification/action/initiateCleanup": {
      "get": {
        "description": "TBD",
        "operationId": "notification.initiateCleanup",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/service/notification/action/register": {
      "get": {
        "description": "TBD",
        "operationId": "notification.register",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "In case type is \"announcement\", identifier should be the announcement ID. In case type is \"system\", identifier should be \"login\" (the login topic)",
            "in": "query",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaNotificationType`\n\n\"announcement\" - TV-Series topic, \"system\" - login topic",
            "enum": [
              "announcement",
              "system"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "ANNOUNCEMENT",
              "SYSTEM"
            ],
            "x-enumType": "KalturaNotificationType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegistryResponse"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/service/notification/action/setDevicePushToken": {
      "get": {
        "description": "Registers the device push token to the push service",
        "operationId": "notification.setDevicePushToken",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The device-application pair authentication for push delivery",
            "in": "query",
            "name": "pushToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "notification"
        ]
      }
    },
    "/service/notificationspartnersettings/action/get": {
      "get": {
        "description": "Retrieve the partner notification settings.",
        "operationId": "notificationsPartnerSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsPartnerSettings"
            }
          }
        },
        "tags": [
          "notificationsPartnerSettings"
        ]
      }
    },
    "/service/notificationspartnersettings/action/update": {
      "get": {
        "description": "Update the account notification settings",
        "operationId": "notificationsPartnerSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Push notification capability is enabled for the account",
            "in": "query",
            "name": "settings[pushNotificationEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "System announcement capability is enabled for the account",
            "in": "query",
            "name": "settings[pushSystemAnnouncementsEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Window start time (UTC) for send automated push messages",
            "in": "query",
            "name": "settings[pushStartHour]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Window end time (UTC) for send automated push messages",
            "in": "query",
            "name": "settings[pushEndHour]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Inbox enabled",
            "in": "query",
            "name": "settings[inboxEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Message TTL in days",
            "in": "query",
            "name": "settings[messageTTLDays]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Automatic issue follow notification",
            "in": "query",
            "name": "settings[automaticIssueFollowNotification]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Topic expiration duration in days",
            "in": "query",
            "name": "settings[topicExpirationDurationDays]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Push adapter URL",
            "in": "query",
            "name": "settings[pushAdapterUrl]",
            "type": "string",
            "x-group": "settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PushNotificationFalse`: undefined"
          }
        },
        "tags": [
          "notificationsPartnerSettings"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaNotificationsPartnerSettings`",
            "name": "settings",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsPartnerSettings"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/notificationssettings/action/get": {
      "get": {
        "description": "Retrieve the user’s notification settings.",
        "operationId": "notificationsSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsSettings"
            }
          }
        },
        "tags": [
          "notificationsSettings"
        ]
      }
    },
    "/service/notificationssettings/action/update": {
      "get": {
        "description": "Update the user’s notification settings.",
        "operationId": "notificationsSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Specify if the user want to receive push notifications or not",
            "in": "query",
            "name": "settings[pushNotificationEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Specify if the user will be notified for followed content via push. (requires push_notification_enabled to be enabled)",
            "in": "query",
            "name": "settings[pushFollowEnabled]",
            "type": "boolean",
            "x-group": "settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "notificationsSettings"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaNotificationsSettings`",
            "name": "settings",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsSettings"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/ossadapterprofile/action/add": {
      "get": {
        "description": "Insert new OSS adapter for partner",
        "operationId": "ossAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "OSS adapter name",
            "in": "query",
            "name": "ossAdapter[name]",
            "type": "string",
            "x-group": "ossAdapter"
          },
          {
            "description": "OSS adapter active status",
            "in": "query",
            "name": "ossAdapter[isActive]",
            "type": "boolean",
            "x-group": "ossAdapter"
          },
          {
            "description": "OSS adapter adapter URL",
            "in": "query",
            "name": "ossAdapter[adapterUrl]",
            "type": "string",
            "x-group": "ossAdapter"
          },
          {
            "description": "OSS adapter external identifier",
            "in": "query",
            "name": "ossAdapter[externalIdentifier]",
            "type": "string",
            "x-group": "ossAdapter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterUrlRequired`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `NameRequired`: undefined\n* `NoOSSAdapterToInsert`: undefined"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaOSSAdapterProfile`",
            "name": "ossAdapter",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/ossadapterprofile/action/delete": {
      "get": {
        "description": "Delete OSS adapter by OSS adapter id",
        "operationId": "ossAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "OSS adapter identifier",
            "in": "query",
            "name": "ossAdapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `OSSAdapterIdentifierRequired`: undefined\n* `OSSAdapterNotExist`: undefined\n* `ActionIsNotAllowed`: undefined"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ]
      }
    },
    "/service/ossadapterprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate oss adapter shared secret",
        "operationId": "ossAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "OSS adapter identifier",
            "in": "query",
            "name": "ossAdapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `OSSAdapterIdentifierRequired`: undefined\n* `OSSAdapterNotExist`: undefined"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ]
      }
    },
    "/service/ossadapterprofile/action/get": {
      "get": {
        "description": "Returns all OSS adapters for partner : id + name",
        "operationId": "ossAdapterProfile.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/ossadapterprofile/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          }
        },
        "tags": [
          "ossAdapterProfile"
        ]
      }
    },
    "/service/ossadapterprofile/action/list": {
      "get": {
        "description": "Returns all OSS adapters for partner : id + name",
        "operationId": "ossAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "ossAdapterProfile"
        ]
      }
    },
    "/service/ossadapterprofile/action/update": {
      "get": {
        "description": "Update OSS adapter details",
        "operationId": "ossAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "OSS adapter identifier",
            "in": "query",
            "name": "ossAdapterId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "OSS adapter name",
            "in": "query",
            "name": "ossAdapter[name]",
            "type": "string",
            "x-group": "ossAdapter"
          },
          {
            "description": "OSS adapter active status",
            "in": "query",
            "name": "ossAdapter[isActive]",
            "type": "boolean",
            "x-group": "ossAdapter"
          },
          {
            "description": "OSS adapter adapter URL",
            "in": "query",
            "name": "ossAdapter[adapterUrl]",
            "type": "string",
            "x-group": "ossAdapter"
          },
          {
            "description": "OSS adapter external identifier",
            "in": "query",
            "name": "ossAdapter[externalIdentifier]",
            "type": "string",
            "x-group": "ossAdapter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `OSSAdapterIdentifierRequired`: undefined\n* `NoOSSAdapterToUpdate`: undefined\n* `AdapterUrlRequired`: undefined"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaOSSAdapterProfile`",
            "name": "ossAdapter",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/ottcategory/action/get": {
      "get": {
        "description": "Retrieve the list of categories (hierarchical) and their associated channels",
        "operationId": "ottCategory.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Category Identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/ottcategory/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTCategory"
            }
          }
        },
        "tags": [
          "ottCategory"
        ]
      }
    },
    "/service/ottuser/action/activate": {
      "get": {
        "description": "Activate the account by activation token",
        "operationId": "ottUser.activate",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The partner ID",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Username of the user to activate",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Activation token of the user",
            "in": "query",
            "name": "activationToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/addRole": {
      "get": {
        "description": "Edit user details.",
        "operationId": "ottUser.addRole",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The role identifier to add",
            "in": "query",
            "name": "roleId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/anonymousLogin": {
      "get": {
        "description": "Returns tokens (KS and refresh token) for anonymous access",
        "operationId": "ottUser.anonymousLogin",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The partner ID",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The caller device's UDID",
            "in": "query",
            "name": "udid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/delete": {
      "get": {
        "description": "Permanently delete a user. User to delete cannot be an exclusive household master, and cannot be default user.",
        "operationId": "ottUser.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ExclusiveMasterUserCannotBeDeleted`: undefined\n* `UserDoesNotExist`: undefined\n* `DefaultUserCannotBeDeleted`: undefined\n* `DomainSuspended`: undefined\n* `LimitationPeriod`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/get": {
      "get": {
        "description": "Retrieving users&#39; data",
        "operationId": "ottUser.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/getEncryptedUserId": {
      "get": {
        "description": "Returns the identifier of the user encrypted with SHA1 using configured key",
        "operationId": "ottUser.getEncryptedUserId",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStringValue"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/list": {
      "get": {
        "description": "Retrieve user by external identifier or username or if filter is null all user in the master or the user itself",
        "operationId": "ottUser.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaOTTUserOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Username",
            "in": "query",
            "name": "filter[usernameEqual]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "User external identifier",
            "in": "query",
            "name": "filter[externalIdEqual]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "List of user identifiers separated by &#39;,&#39;",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUserListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaOTTUserFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUserFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/ottuser/action/login": {
      "get": {
        "description": "login with user name and password.",
        "operationId": "ottUser.login",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner Identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "user name",
            "in": "query",
            "name": "username",
            "required": false,
            "type": "string"
          },
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string",
            "x-inputType": "password"
          },
          {
            "description": "extra params",
            "in": "query",
            "name": "extraParams",
            "required": false,
            "type": "object"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `ErrorOnInitUser`: undefined\n* `DeviceNotRegistered`: undefined\n* `UserDoubleLogIn`: undefined\n* `UserNotMasterApproved`: undefined\n* `UserDoesNotExist`: undefined\n* `UserNotInDomain`: undefined\n* `WrongPasswordOrUserName`: undefined\n* `UserSuspended`: undefined\n* `InsideLockTime`: undefined\n* `UserNotActivated`: undefined\n* `UserAllreadyLoggedIn`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/loginWithPin": {
      "get": {
        "description": "User sign-in via a time-expired sign-in PIN.",
        "operationId": "ottUser.loginWithPin",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner Identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "pin code",
            "in": "query",
            "name": "pin",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": false,
            "type": "string"
          },
          {
            "description": "Additional security parameter to validate the login",
            "in": "query",
            "name": "secret",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `SecretIsWrong`: undefined\n* `LoginViaPinNotAllowed`: undefined\n* `DeviceNotRegistered`: undefined\n* `ErrorOnInitUser`: undefined\n* `UserNotMasterApproved`: undefined\n* `UserWithNoDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserAllreadyLoggedIn`: undefined\n* `PinNotExists`: undefined\n* `PinExpired`: undefined\n* `UserNotInDomain`: undefined\n* `WrongPasswordOrUserName`: undefined\n* `UserDoubleLogIn`: undefined\n* `NoValidPin`: undefined\n* `UserSuspended`: undefined\n* `InsideLockTime`: undefined\n* `UserNotActivated`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/logout": {
      "get": {
        "description": "Logout the calling user.",
        "operationId": "ottUser.logout",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/refreshSession": {
      "get": {
        "description": "Returns new Kaltura session (ks) for the user, using the supplied refresh_token (only if it&#39;s valid and not expired)",
        "operationId": "ottUser.refreshSession",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Refresh token",
            "in": "query",
            "name": "refreshToken",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          },
          "x-Errors": {
            "description": "* `RefreshTokenFailed`: Refresh token failed\n* `InvalidRefreshToken`: Invalid refresh token\n* `InvalidKS`: Invalid KS format"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/register": {
      "get": {
        "description": "Sign up a new user.",
        "operationId": "ottUser.register",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Username",
            "in": "query",
            "name": "user[username]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "First name",
            "in": "query",
            "name": "user[firstName]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Last name",
            "in": "query",
            "name": "user[lastName]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Email",
            "in": "query",
            "name": "user[email]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Address",
            "in": "query",
            "name": "user[address]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "City",
            "in": "query",
            "name": "user[city]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Country identifier",
            "in": "query",
            "name": "user[countryId]",
            "type": "integer",
            "x-group": "user"
          },
          {
            "description": "Zip code",
            "in": "query",
            "name": "user[zip]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Phone",
            "in": "query",
            "name": "user[phone]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "`insertOnly`\n\nAffiliate code",
            "in": "query",
            "name": "user[affiliateCode]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "`insertOnly`\n\nExternal user identifier",
            "in": "query",
            "name": "user[externalId]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "User type description",
            "in": "query",
            "name": "user[userType][description]",
            "type": "string",
            "x-group": "user[userType]"
          },
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string",
            "x-inputType": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: undefined\n* `UserExists`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaOTTUser`",
            "name": "user",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            },
            "subGroups": [
              {
                "name": "user[userType]"
              }
            ]
          }
        ]
      }
    },
    "/service/ottuser/action/resendActivationToken": {
      "get": {
        "description": "Resend the activation token to a user",
        "operationId": "ottUser.resendActivationToken",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The partner ID",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Username of the user to activate",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/resetPassword": {
      "get": {
        "description": "Send an e-mail with URL to enable the user to set new password.",
        "operationId": "ottUser.resetPassword",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner Identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "user name",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/setInitialPassword": {
      "get": {
        "description": "Renew the user&#39;s password after validating the token that sent as part of URL in e-mail.",
        "operationId": "ottUser.setInitialPassword",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner Identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Token that sent by e-mail",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "description": "New password",
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string",
            "x-inputType": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/ottuser/action/update": {
      "get": {
        "description": "Update user information",
        "operationId": "ottUser.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Username",
            "in": "query",
            "name": "user[username]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "First name",
            "in": "query",
            "name": "user[firstName]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Last name",
            "in": "query",
            "name": "user[lastName]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Email",
            "in": "query",
            "name": "user[email]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Address",
            "in": "query",
            "name": "user[address]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "City",
            "in": "query",
            "name": "user[city]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Country identifier",
            "in": "query",
            "name": "user[countryId]",
            "type": "integer",
            "x-group": "user"
          },
          {
            "description": "Zip code",
            "in": "query",
            "name": "user[zip]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "Phone",
            "in": "query",
            "name": "user[phone]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "`insertOnly`\n\nAffiliate code",
            "in": "query",
            "name": "user[affiliateCode]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "`insertOnly`\n\nExternal user identifier",
            "in": "query",
            "name": "user[externalId]",
            "type": "string",
            "x-group": "user"
          },
          {
            "description": "User type description",
            "in": "query",
            "name": "user[userType][description]",
            "type": "string",
            "x-group": "user[userType]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaOTTUser`",
            "name": "user",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            },
            "subGroups": [
              {
                "name": "user[userType]"
              }
            ]
          }
        ]
      }
    },
    "/service/ottuser/action/updateLoginData": {
      "get": {
        "description": "Given a user name and existing password, change to a new password.",
        "operationId": "ottUser.updateLoginData",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "user name",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "old password",
            "in": "query",
            "name": "oldPassword",
            "required": true,
            "type": "string"
          },
          {
            "description": "new password",
            "in": "query",
            "name": "newPassword",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserAllreadyLoggedIn`: undefined\n* `UserDoesNotExist`: undefined\n* `InsideLockTime`: undefined\n* `WrongPasswordOrUserName`: undefined"
          }
        },
        "tags": [
          "ottUser"
        ]
      }
    },
    "/service/parentalrule/action/disable": {
      "get": {
        "description": "Disables a parental rule that was previously defined by the household master. Disable can be at specific user or household level.",
        "operationId": "parentalRule.disable",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Rule Identifier",
            "in": "query",
            "name": "ruleId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "entityReference",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserParentalRuleNotExists`: undefined\n* `DomainNotExists`: undefined\n* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined\n* `UserSuspended`: undefined\n* `RuleNotExists`: undefined"
          }
        },
        "tags": [
          "parentalRule"
        ]
      }
    },
    "/service/parentalrule/action/disableDefault": {
      "get": {
        "description": "Disables a parental rule that was defined at account level. Disable can be at specific user or household level.",
        "operationId": "parentalRule.disableDefault",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "entityReference",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserWithNoDomain`: undefined\n* `DomainNotExists`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "parentalRule"
        ]
      }
    },
    "/service/parentalrule/action/enable": {
      "get": {
        "description": "Enable a parental rules for a user",
        "operationId": "parentalRule.enable",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Rule Identifier",
            "in": "query",
            "name": "ruleId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "entityReference",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `RuleNotExists`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `DomainNotExists`: undefined\n* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "parentalRule"
        ]
      }
    },
    "/service/parentalrule/action/list": {
      "get": {
        "description": "Return the parental rules that applies for the user or household. Can include rules that have been associated in account, household, or user level.\r\n            Association level is also specified in the response.",
        "operationId": "parentalRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "PARTNER_SORT_VALUE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "PARTNER_SORT_VALUE"
            ],
            "x-enumType": "KalturaParentalRuleOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "filter[entityReferenceEqual]",
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRuleListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `DomainNotExists`: undefined\n* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaParentalRuleFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRuleFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/partnerconfiguration/action/update": {
      "get": {
        "description": "Update Partner Configuration",
        "operationId": "partnerConfiguration.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "KalturaBillingPartnerConfig"
            ],
            "in": "query",
            "name": "configuration[objectType]",
            "type": "string",
            "x-group": "configuration"
          },
          {
            "description": "configuration value",
            "in": "query",
            "name": "configuration[value]",
            "type": "string",
            "x-group": "configuration",
            "x-showCondition": {
              "name": "configuration[objectType]",
              "value": [
                "KalturaBillingPartnerConfig"
              ]
            }
          },
          {
            "description": "Enum Type: `KalturaPartnerConfigurationType`\n\npartner configuration type",
            "enum": [
              "DefaultPaymentGateway",
              "EnablePaymentGatewaySelection",
              "OSSAdapter"
            ],
            "in": "query",
            "name": "configuration[type]",
            "type": "string",
            "x-enumLabels": [
              "DEFAULTPAYMENTGATEWAY",
              "ENABLEPAYMENTGATEWAYSELECTION",
              "OSSADAPTER"
            ],
            "x-enumType": "KalturaPartnerConfigurationType",
            "x-group": "configuration",
            "x-showCondition": {
              "name": "configuration[objectType]",
              "value": [
                "KalturaBillingPartnerConfig"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "partnerConfiguration"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPartnerConfiguration`",
            "name": "configuration",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerConfiguration"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/paymentgatewayprofile/action/add": {
      "get": {
        "description": "Insert new payment gateway for partner",
        "operationId": "paymentGatewayProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "payment gateway name",
            "in": "query",
            "name": "paymentGateway[name]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway default (true/false)",
            "in": "query",
            "name": "paymentGateway[isDefault]",
            "type": "boolean",
            "x-group": "paymentGateway"
          },
          {
            "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
            "enum": [
              "none",
              "account",
              "household"
            ],
            "in": "query",
            "name": "paymentGateway[selectedBy]",
            "type": "string",
            "x-enumLabels": [
              "NONE",
              "ACCOUNT",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaHouseholdPaymentGatewaySelectedBy",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway is active status",
            "in": "query",
            "name": "paymentGateway[isActive]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway adapter URL",
            "in": "query",
            "name": "paymentGateway[adapterUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway transact URL",
            "in": "query",
            "name": "paymentGateway[transactUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway status URL",
            "in": "query",
            "name": "paymentGateway[statusUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway renew URL",
            "in": "query",
            "name": "paymentGateway[renewUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway external identifier",
            "in": "query",
            "name": "paymentGateway[externalIdentifier]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Pending Interval in minutes",
            "in": "query",
            "name": "paymentGateway[pendingInterval]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Pending Retries",
            "in": "query",
            "name": "paymentGateway[pendingRetries]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Shared Secret",
            "in": "query",
            "name": "paymentGateway[sharedSecret]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Renew Interval Minutes",
            "in": "query",
            "name": "paymentGateway[renewIntervalMinutes]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Renew Start Minutes",
            "in": "query",
            "name": "paymentGateway[renewStartMinutes]",
            "type": "integer",
            "x-group": "paymentGateway"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          },
          "x-Errors": {
            "description": "* `SharedSecretRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `NameRequired`: undefined\n* `NoPaymentGatewayToInsert`: undefined"
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPaymentGatewayProfile`",
            "name": "paymentGateway",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/paymentgatewayprofile/action/delete": {
      "get": {
        "description": "Delete payment gateway by payment gateway id",
        "operationId": "paymentGatewayProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate payment gateway shared secret",
        "operationId": "paymentGatewayProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment gateway identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayIdRequired`: undefined\n* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/getConfiguration": {
      "get": {
        "description": "Gets the Payment Gateway Configuration for the payment gateway identifier given",
        "operationId": "paymentGatewayProfile.getConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The payemnt gateway for which to return the registration URL/s for the household. If omitted – return the regisration URL for the household for the default payment gateway",
            "in": "query",
            "name": "alias",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represent the client’s intent for working with the payment gateway. Intent options to be coordinated with the applicable payment gateway adapter.",
            "in": "query",
            "name": "intent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayConfiguration"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: undefined\n* `SignatureMismatch`: undefined"
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/list": {
      "get": {
        "description": "Returns all payment gateways for partner : id + name",
        "operationId": "paymentGatewayProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfileListResponse"
            }
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/update": {
      "get": {
        "description": "Update payment gateway details",
        "operationId": "paymentGatewayProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment Gateway Identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "payment gateway name",
            "in": "query",
            "name": "paymentGateway[name]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway default (true/false)",
            "in": "query",
            "name": "paymentGateway[isDefault]",
            "type": "boolean",
            "x-group": "paymentGateway"
          },
          {
            "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
            "enum": [
              "none",
              "account",
              "household"
            ],
            "in": "query",
            "name": "paymentGateway[selectedBy]",
            "type": "string",
            "x-enumLabels": [
              "NONE",
              "ACCOUNT",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaHouseholdPaymentGatewaySelectedBy",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway is active status",
            "in": "query",
            "name": "paymentGateway[isActive]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway adapter URL",
            "in": "query",
            "name": "paymentGateway[adapterUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway transact URL",
            "in": "query",
            "name": "paymentGateway[transactUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway status URL",
            "in": "query",
            "name": "paymentGateway[statusUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway renew URL",
            "in": "query",
            "name": "paymentGateway[renewUrl]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Payment gateway external identifier",
            "in": "query",
            "name": "paymentGateway[externalIdentifier]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Pending Interval in minutes",
            "in": "query",
            "name": "paymentGateway[pendingInterval]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Pending Retries",
            "in": "query",
            "name": "paymentGateway[pendingRetries]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Shared Secret",
            "in": "query",
            "name": "paymentGateway[sharedSecret]",
            "type": "string",
            "x-group": "paymentGateway"
          },
          {
            "description": "Renew Interval Minutes",
            "in": "query",
            "name": "paymentGateway[renewIntervalMinutes]",
            "type": "integer",
            "x-group": "paymentGateway"
          },
          {
            "description": "Renew Start Minutes",
            "in": "query",
            "name": "paymentGateway[renewStartMinutes]",
            "type": "integer",
            "x-group": "paymentGateway"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayIdRequired`: undefined\n* `SharedSecretRequired`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `ActionIsNotAllowed`: undefined\n* `NameRequired`: undefined"
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPaymentGatewayProfile`",
            "name": "paymentGateway",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/paymentmethodprofile/action/add": {
      "get": {
        "description": "TBD",
        "operationId": "paymentMethodProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment gateway identifier (internal)",
            "in": "query",
            "name": "paymentMethod[paymentGatewayId]",
            "type": "integer",
            "x-group": "paymentMethod"
          },
          {
            "description": "Payment method name",
            "in": "query",
            "name": "paymentMethod[name]",
            "type": "string",
            "x-group": "paymentMethod"
          },
          {
            "description": "Indicates whether the payment method allow multiple instances",
            "in": "query",
            "name": "paymentMethod[allowMultiInstance]",
            "type": "boolean",
            "x-group": "paymentMethod"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: undefined\n* `PaymentGatewayIdRequired`: undefined\n* `PaymentMethodNameRequired`: undefined"
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPaymentMethodProfile`",
            "name": "paymentMethod",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/paymentmethodprofile/action/delete": {
      "get": {
        "description": "Delete payment method profile",
        "operationId": "paymentMethodProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment method identifier to delete",
            "in": "query",
            "name": "paymentMethodId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotExist`: undefined\n* `PaymentMethodIdRequired`: undefined\n* `PaymentGatewayIdRequired`: undefined\n* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "paymentMethodProfile"
        ]
      }
    },
    "/service/paymentmethodprofile/action/list": {
      "get": {
        "description": "TBD",
        "operationId": "paymentMethodProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaPaymentMethodProfileOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Payment gateway identifier to list the payment methods for",
            "in": "query",
            "name": "filter[paymentGatewayIdEqual]",
            "type": "integer",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfileListResponse"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: undefined"
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPaymentMethodProfileFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfileFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/paymentmethodprofile/action/update": {
      "get": {
        "description": "Update payment method",
        "operationId": "paymentMethodProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment method identifier to update",
            "in": "query",
            "name": "paymentMethodId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Payment gateway identifier (internal)",
            "in": "query",
            "name": "paymentMethod[paymentGatewayId]",
            "type": "integer",
            "x-group": "paymentMethod"
          },
          {
            "description": "Payment method name",
            "in": "query",
            "name": "paymentMethod[name]",
            "type": "string",
            "x-group": "paymentMethod"
          },
          {
            "description": "Indicates whether the payment method allow multiple instances",
            "in": "query",
            "name": "paymentMethod[allowMultiInstance]",
            "type": "boolean",
            "x-group": "paymentMethod"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotExist`: undefined\n* `PaymentGatewayNotExist`: undefined\n* `PaymentGatewayIdRequired`: undefined\n* `PaymentMethodIdRequired`: undefined"
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPaymentMethodProfile`",
            "name": "paymentMethod",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/personalfeed/action/list": {
      "get": {
        "description": "List user&#39;s feeds.\r\n            Possible status codes:",
        "operationId": "personalFeed.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC"
            ],
            "x-enumType": "KalturaPersonalFeedOrderBy",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalFeedListResponse"
            }
          }
        },
        "tags": [
          "personalFeed"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPersonalFeedFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalFeedFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/pin/action/get": {
      "get": {
        "description": "Retrieve the parental or purchase PIN that applies for the household or user. Includes specification of where the PIN was defined at – account, household or user  level",
        "operationId": "pin.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "by",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          },
          {
            "description": "Enum Type: `KalturaPinType`\n\nThe PIN type to retrieve",
            "enum": [
              "purchase",
              "parental"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "x-enumType": "KalturaPinType"
          },
          {
            "description": "Rule ID - for PIN per rule (MediaCorp): BEO-1923",
            "in": "query",
            "name": "ruleId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined\n* `UserSuspended`: undefined\n* `NoPinDefined`: undefined\n* `DomainNotExists`: undefined"
          }
        },
        "tags": [
          "pin"
        ]
      }
    },
    "/service/pin/action/update": {
      "get": {
        "description": "Set the parental or purchase PIN that applies for the user or the household.",
        "operationId": "pin.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "by",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          },
          {
            "description": "Enum Type: `KalturaPinType`\n\nThe PIN type to retrieve",
            "enum": [
              "purchase",
              "parental"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "x-enumType": "KalturaPinType"
          },
          {
            "description": "PIN code",
            "in": "query",
            "name": "pin[pin]",
            "type": "string",
            "x-group": "pin"
          },
          {
            "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
            "enum": [
              "invalid",
              "user",
              "household",
              "account"
            ],
            "in": "query",
            "name": "pin[origin]",
            "type": "string",
            "x-enumLabels": [
              "INVALID",
              "USER",
              "HOUSEHOLD",
              "ACCOUNT"
            ],
            "x-enumType": "KalturaRuleLevel",
            "x-group": "pin"
          },
          {
            "description": "Enum Type: `KalturaPinType`\n\nPIN type",
            "enum": [
              "purchase",
              "parental"
            ],
            "in": "query",
            "name": "pin[type]",
            "type": "string",
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "x-enumType": "KalturaPinType",
            "x-group": "pin"
          },
          {
            "enum": [
              "KalturaPurchaseSettings"
            ],
            "in": "query",
            "name": "pin[objectType]",
            "type": "string",
            "x-group": "pin"
          },
          {
            "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
            "enum": [
              "block",
              "ask",
              "allow"
            ],
            "in": "query",
            "name": "pin[permission]",
            "type": "string",
            "x-enumLabels": [
              "BLOCK",
              "ASK",
              "ALLOW"
            ],
            "x-enumType": "KalturaPurchaseSettingsType",
            "x-group": "pin",
            "x-showCondition": {
              "name": "pin[objectType]",
              "value": [
                "KalturaPurchaseSettings"
              ]
            }
          },
          {
            "description": "Rule ID - for PIN per rule (MediaCorp): BEO-1923",
            "in": "query",
            "name": "ruleId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined\n* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "pin"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPin`",
            "name": "pin",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/pin/action/validate": {
      "get": {
        "description": "Validate a purchase or parental PIN for a user.",
        "operationId": "pin.validate",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "PIN to validate",
            "in": "query",
            "name": "pin",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaPinType`\n\nThe PIN type to retrieve",
            "enum": [
              "purchase",
              "parental"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "x-enumType": "KalturaPinType"
          },
          {
            "description": "Rule ID - for PIN per rule (MediaCorp): BEO-1923",
            "in": "query",
            "name": "ruleId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `NoPinDefined`: undefined\n* `PinMismatch`: undefined\n* `UserWithNoDomain`: undefined\n* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "pin"
        ]
      }
    },
    "/service/ppv/action/get": {
      "get": {
        "description": "Returns ppv object by internal identifier",
        "operationId": "ppv.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "ppv identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/ppv/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPpv"
            }
          }
        },
        "tags": [
          "ppv"
        ]
      }
    },
    "/service/productprice/action/list": {
      "get": {
        "description": "Returns a price and a purchase status for each subscription or/and media file, for a given user (if passed) and with the consideration of a coupon code (if passed).",
        "operationId": "productPrice.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "PRODUCT_ID_ASC",
              "PRODUCT_ID_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "PRODUCT_ID_ASC",
              "PRODUCT_ID_DESC"
            ],
            "x-enumType": "KalturaProductPriceOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated subscriptions identifiers",
            "in": "query",
            "name": "filter[subscriptionIdIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Comma separated media files identifiers",
            "in": "query",
            "name": "filter[fileIdIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "A flag that indicates if only the lowest price of an item should return",
            "in": "query",
            "name": "filter[isLowest]",
            "type": "boolean",
            "x-group": "filter"
          },
          {
            "description": "Discount coupon code",
            "in": "query",
            "name": "filter[couponCodeEqual]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaProductPriceListResponse"
            }
          }
        },
        "tags": [
          "productPrice"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaProductPriceFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaProductPriceFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/purchasesettings/action/get": {
      "get": {
        "description": "Retrieve the purchase settings.\r\n            Includes specification of where these settings were defined – account, household or user",
        "operationId": "purchaseSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "by",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            }
          },
          "x-Errors": {
            "description": "* `UserWithNoDomain`: undefined\n* `UserSuspended`: undefined\n* `UserDoesNotExist`: undefined\n* `DomainNotExists`: undefined"
          }
        },
        "tags": [
          "purchaseSettings"
        ]
      }
    },
    "/service/purchasesettings/action/update": {
      "get": {
        "description": "Set a purchase PIN for the household or user",
        "operationId": "purchaseSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "entityReference",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy"
          },
          {
            "description": "PIN code",
            "in": "query",
            "name": "settings[pin]",
            "type": "string",
            "x-group": "settings"
          },
          {
            "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
            "enum": [
              "invalid",
              "user",
              "household",
              "account"
            ],
            "in": "query",
            "name": "settings[origin]",
            "type": "string",
            "x-enumLabels": [
              "INVALID",
              "USER",
              "HOUSEHOLD",
              "ACCOUNT"
            ],
            "x-enumType": "KalturaRuleLevel",
            "x-group": "settings"
          },
          {
            "description": "Enum Type: `KalturaPinType`\n\nPIN type",
            "enum": [
              "purchase",
              "parental"
            ],
            "in": "query",
            "name": "settings[type]",
            "type": "string",
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "x-enumType": "KalturaPinType",
            "x-group": "settings"
          },
          {
            "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
            "enum": [
              "block",
              "ask",
              "allow"
            ],
            "in": "query",
            "name": "settings[permission]",
            "type": "string",
            "x-enumLabels": [
              "BLOCK",
              "ASK",
              "ALLOW"
            ],
            "x-enumType": "KalturaPurchaseSettingsType",
            "x-group": "settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `PurchaseSettingsTypeInvalid`: undefined\n* `DomainNotExists`: undefined\n* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined"
          }
        },
        "tags": [
          "purchaseSettings"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPurchaseSettings`",
            "name": "settings",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/recommendationprofile/action/add": {
      "get": {
        "description": "Insert new recommendation engine for partner",
        "operationId": "recommendationProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "recommendation engine name",
            "in": "query",
            "name": "recommendationEngine[name]",
            "type": "string",
            "x-group": "recommendationEngine"
          },
          {
            "description": "recommendation engine is active status",
            "in": "query",
            "name": "recommendationEngine[isActive]",
            "type": "boolean",
            "x-group": "recommendationEngine"
          },
          {
            "description": "recommendation engine adapter URL",
            "in": "query",
            "name": "recommendationEngine[adapterUrl]",
            "type": "string",
            "x-group": "recommendationEngine"
          },
          {
            "description": "recommendation engine external identifier",
            "in": "query",
            "name": "recommendationEngine[externalIdentifier]",
            "type": "string",
            "x-group": "recommendationEngine"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterUrlRequired`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined\n* `NameRequired`: undefined"
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaRecommendationProfile`",
            "name": "recommendationEngine",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/recommendationprofile/action/delete": {
      "get": {
        "description": "Delete recommendation engine by recommendation engine id",
        "operationId": "recommendationProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "recommendation engine Identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `RecommendationEngineNotExist`: undefined\n* `RecommendationEngineIdentifierRequired`: undefined"
          }
        },
        "tags": [
          "recommendationProfile"
        ]
      }
    },
    "/service/recommendationprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate recommendation engine  shared secret",
        "operationId": "recommendationProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "recommendation engine Identifier",
            "in": "query",
            "name": "recommendationEngineId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          },
          "x-Errors": {
            "description": "* `RecommendationEngineIdentifierRequired`: undefined\n* `RecommendationEngineNotExist`: undefined"
          }
        },
        "tags": [
          "recommendationProfile"
        ]
      }
    },
    "/service/recommendationprofile/action/list": {
      "get": {
        "description": "Returns all recommendation engines for partner",
        "operationId": "recommendationProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfileListResponse"
            }
          }
        },
        "tags": [
          "recommendationProfile"
        ]
      }
    },
    "/service/recommendationprofile/action/update": {
      "get": {
        "description": "Update recommendation engine details",
        "operationId": "recommendationProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "recommendation engine identifier",
            "in": "query",
            "name": "recommendationEngineId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "recommendation engine name",
            "in": "query",
            "name": "recommendationEngine[name]",
            "type": "string",
            "x-group": "recommendationEngine"
          },
          {
            "description": "recommendation engine is active status",
            "in": "query",
            "name": "recommendationEngine[isActive]",
            "type": "boolean",
            "x-group": "recommendationEngine"
          },
          {
            "description": "recommendation engine adapter URL",
            "in": "query",
            "name": "recommendationEngine[adapterUrl]",
            "type": "string",
            "x-group": "recommendationEngine"
          },
          {
            "description": "recommendation engine external identifier",
            "in": "query",
            "name": "recommendationEngine[externalIdentifier]",
            "type": "string",
            "x-group": "recommendationEngine"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: undefined\n* `ExternalIdentifierRequired`: undefined\n* `RecommendationEngineNotExist`: undefined\n* `AdapterUrlRequired`: undefined\n* `RecommendationEngineIdentifierRequired`: undefined\n* `ExternalIdentifierMustBeUnique`: undefined"
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaRecommendationProfile`",
            "name": "recommendationEngine",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/recording/action/add": {
      "get": {
        "description": "Issue a record request for a program",
        "operationId": "recording.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Kaltura unique ID representing the program identifier",
            "in": "query",
            "name": "recording[assetId]",
            "type": "integer",
            "x-group": "recording"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `InvalidAssetId`: undefined\n* `AlreadyRecordedAsSeriesOrSeason`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `UserNotInDomain`: undefined\n* `ExceededQuota`: undefined\n* `UserDoesNotExist`: undefined\n* `ServiceNotAllowed`: undefined\n* `NotEntitled`: undefined\n* `AccountCdvrNotEnabled`: undefined\n* `AccountCatchUpNotEnabled`: undefined\n* `ProgramCdvrNotEnabled`: undefined\n* `ProgramCatchUpNotEnabled`: undefined\n* `CatchUpBufferLimitation`: undefined\n* `ProgramNotInRecordingScheduleWindow`: undefined"
          }
        },
        "tags": [
          "recording"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaRecording`",
            "name": "recording",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/recording/action/cancel": {
      "get": {
        "description": "Cancel a previously requested recording. Cancel recording can be called for recording in status Scheduled or Recording Only",
        "operationId": "recording.cancel",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: undefined\n* `RecordingStatusNotValid`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined"
          }
        },
        "tags": [
          "recording"
        ]
      }
    },
    "/service/recording/action/delete": {
      "get": {
        "description": "Delete one or more user recording(s). Delete recording can be called only for recordings in status Recorded",
        "operationId": "recording.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: undefined\n* `RecordingStatusNotValid`: undefined\n* `UserNotInDomain`: undefined\n* `UserSuspended`: undefined\n* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined"
          }
        },
        "tags": [
          "recording"
        ]
      }
    },
    "/service/recording/action/get": {
      "get": {
        "description": "Returns recording object by internal identifier",
        "operationId": "recording.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "id",
              "method": "get",
              "path": "/service/recording/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: undefined"
          }
        },
        "tags": [
          "recording"
        ]
      }
    },
    "/service/recording/action/list": {
      "get": {
        "description": "Return a list of recordings for the household with optional filter by status and KSQL.",
        "operationId": "recording.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "TITLE_ASC",
              "TITLE_DESC",
              "START_DATE_ASC",
              "START_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "TITLE_ASC",
              "TITLE_DESC",
              "START_DATE_ASC",
              "START_DATE_DESC"
            ],
            "x-enumType": "KalturaRecordingOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Recording Statuses",
            "in": "query",
            "name": "filter[statusIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "KSQL expression",
            "in": "query",
            "name": "filter[filterExpression]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecordingListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserWithNoDomain`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined"
          }
        },
        "tags": [
          "recording"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaRecordingFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaRecordingFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/recording/action/protect": {
      "get": {
        "description": "Protects an existing recording from the cleanup process for the defined protection period",
        "operationId": "recording.protect",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `AccountProtectRecordNotEnabled`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `RecordingNotFound`: undefined\n* `RecordingStatusNotValid`: undefined\n* `ExceededProtectionQuota`: undefined"
          }
        },
        "tags": [
          "recording"
        ]
      }
    },
    "/service/region/action/list": {
      "get": {
        "description": "Returns all regions for the partner",
        "operationId": "region.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "x-enumType": "KalturaRegionOrderBy",
            "x-group": "filter"
          },
          {
            "description": "List of comma separated regions external identifiers",
            "in": "query",
            "name": "filter[externalIdIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegionListResponse"
            }
          }
        },
        "tags": [
          "region"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaRegionFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaRegionFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/registrysettings/action/list": {
      "get": {
        "description": "Retrieve the registry settings.",
        "operationId": "registrySettings.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegistrySettingsListResponse"
            }
          }
        },
        "tags": [
          "registrySettings"
        ]
      }
    },
    "/service/report/action/get": {
      "get": {
        "description": "Return a device configuration retrieval log request for a specific device.",
        "operationId": "report.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReport"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ]
      }
    },
    "/service/report/action/list": {
      "get": {
        "description": "Return device configurations retrieval log. Supports paging and can be filtered with the parameter &quot;FromData&quot;.",
        "operationId": "report.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaReportOrderBy",
            "x-group": "filter"
          },
          {
            "enum": [
              "KalturaDeviceReportFilter"
            ],
            "in": "query",
            "name": "filter[objectType]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "in": "query",
            "name": "filter[lastAccessDateGreaterThanOrEqual]",
            "type": "integer",
            "x-group": "filter",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaDeviceReportFilter"
              ]
            }
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportListResponse"
            }
          },
          "x-Errors": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaReportFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaReportFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/seriesrecording/action/add": {
      "get": {
        "description": "Issue a record request for a complete season or series",
        "operationId": "seriesRecording.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Kaltura EpgId",
            "in": "query",
            "name": "recording[epgId]",
            "type": "integer",
            "x-group": "recording"
          },
          {
            "description": "Kaltura ChannelId",
            "in": "query",
            "name": "recording[channelId]",
            "type": "integer",
            "x-group": "recording"
          },
          {
            "description": "Kaltura SeriesId",
            "in": "query",
            "name": "recording[seriesId]",
            "type": "string",
            "x-group": "recording"
          },
          {
            "description": "Kaltura SeasonNumber",
            "in": "query",
            "name": "recording[seasonNumber]",
            "type": "integer",
            "x-group": "recording"
          },
          {
            "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/series/season",
            "enum": [
              "SINGLE",
              "SEASON",
              "SERIES"
            ],
            "in": "query",
            "name": "recording[type]",
            "type": "string",
            "x-enumLabels": [
              "SINGLE",
              "SEASON",
              "SERIES"
            ],
            "x-enumType": "KalturaRecordingType",
            "x-group": "recording"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined\n* `ProgramCdvrNotEnabled`: undefined\n* `InvalidAssetId`: undefined\n* `UserNotInDomain`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `ServiceNotAllowed`: undefined\n* `NotEntitled`: undefined\n* `AccountCdvrNotEnabled`: undefined\n* `AccountSeriesRecordingNotEnabled`: undefined\n* `AlreadyRecordedAsSeriesOrSeason`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSeriesRecording`",
            "name": "recording",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/seriesrecording/action/cancel": {
      "get": {
        "description": "Cancel a previously requested series recording. Cancel series recording can be called for recording in status Scheduled or Recording Only",
        "operationId": "seriesRecording.cancel",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Series Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `SeriesRecordingNotFound`: undefined\n* `RecordingStatusNotValid`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `RecordingNotFound`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ]
      }
    },
    "/service/seriesrecording/action/cancelByEpgId": {
      "get": {
        "description": "Cancel EPG recording that was recorded as part of series",
        "operationId": "seriesRecording.cancelByEpgId",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Series Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "epg program identifier",
            "in": "query",
            "name": "epgId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `EpgIdNotPartOfSeries`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `RecordingNotFound`: undefined\n* `RecordingStatusNotValid`: undefined\n* `SeriesRecordingNotFound`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ]
      }
    },
    "/service/seriesrecording/action/cancelBySeasonNumber": {
      "get": {
        "description": "Cancel Season recording epgs that was recorded as part of series",
        "operationId": "seriesRecording.cancelBySeasonNumber",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Series Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Season Number",
            "in": "query",
            "name": "seasonNumber",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: undefined\n* `SeriesRecordingNotFound`: undefined\n* `SeasonNumberNotMatch`: undefined\n* `UserWithNoDomain`: undefined\n* `UserNotInDomain`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `RecordingStatusNotValid`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ]
      }
    },
    "/service/seriesrecording/action/delete": {
      "get": {
        "description": "Delete series recording(s). Delete series recording can be called recordings in any status",
        "operationId": "seriesRecording.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Series Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `RecordingStatusNotValid`: undefined\n* `UserDoesNotExist`: undefined\n* `SeriesRecordingNotFound`: undefined\n* `UserNotInDomain`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `RecordingNotFound`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ]
      }
    },
    "/service/seriesrecording/action/deleteBySeasonNumber": {
      "get": {
        "description": "Delete Season recording epgs that was recorded as part of series",
        "operationId": "seriesRecording.deleteBySeasonNumber",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Series Recording identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Season Number",
            "in": "query",
            "name": "seasonNumber",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: undefined\n* `SeriesRecordingNotFound`: undefined\n* `RecordingNotFound`: undefined\n* `RecordingStatusNotValid`: undefined\n* `SeasonNumberNotMatch`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ]
      }
    },
    "/service/seriesrecording/action/list": {
      "get": {
        "description": "Return a list of series recordings for the household with optional filter by status and KSQL.",
        "operationId": "seriesRecording.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "START_DATE_ASC",
              "START_DATE_DESC",
              "ID_ASC",
              "ID_DESC",
              "SERIES_ID_ASC",
              "SERIES_ID_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "START_DATE_ASC",
              "START_DATE_DESC",
              "ID_ASC",
              "ID_DESC",
              "SERIES_ID_ASC",
              "SERIES_ID_DESC"
            ],
            "x-enumType": "KalturaSeriesRecordingOrderBy",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecordingListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: undefined\n* `UserSuspended`: undefined\n* `UserWithNoDomain`: undefined\n* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSeriesRecordingFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecordingFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/session/action/get": {
      "get": {
        "description": "Parses KS",
        "operationId": "session.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Additional KS to parse, if not passed the user's KS will be parsed",
            "in": "query",
            "name": "session",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSession"
            }
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/session/action/switchUser": {
      "get": {
        "description": "Switching the user in the session by generating a new session for a new user within the same household",
        "operationId": "session.switchUser",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "The identifier of the user to change",
            "in": "query",
            "name": "userIdToSwitch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/service/social/action/UpdateConfiguration": {
      "get": {
        "description": "Set the user social network’s configuration information",
        "operationId": "social.UpdateConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "KalturaSocialFacebookConfig",
              "KalturaSocialUserConfig"
            ],
            "in": "query",
            "name": "configuration[objectType]",
            "type": "string",
            "x-group": "configuration"
          },
          {
            "description": "The application identifier",
            "in": "query",
            "name": "configuration[appId]",
            "type": "string",
            "x-group": "configuration",
            "x-showCondition": {
              "name": "configuration[objectType]",
              "value": [
                "KalturaSocialFacebookConfig"
              ]
            }
          },
          {
            "description": "List of application permissions",
            "in": "query",
            "name": "configuration[permissions]",
            "type": "string",
            "x-group": "configuration",
            "x-showCondition": {
              "name": "configuration[objectType]",
              "value": [
                "KalturaSocialFacebookConfig"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialConfig"
            }
          }
        },
        "tags": [
          "social"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSocialConfig`",
            "name": "configuration",
            "schema": {
              "$ref": "#/definitions/KalturaSocialConfig"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/social/action/get": {
      "get": {
        "description": "List social accounts",
        "operationId": "social.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/social/action/getByToken": {
      "get": {
        "description": "Return the user object with social information according to a provided external social token",
        "operationId": "social.getByToken",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Social token",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `Conflict`: undefined\n* `MinFriendsLimitation`: undefined"
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/social/action/getConfiguration": {
      "get": {
        "description": "Retrieve the social network’s configuration information",
        "operationId": "social.getConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          },
          {
            "description": "Partner identifier",
            "in": "query",
            "name": "partnerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialConfig"
            }
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/social/action/login": {
      "get": {
        "description": "Login using social token",
        "operationId": "social.login",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Social token",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          },
          {
            "description": "Device UDID",
            "in": "query",
            "name": "udid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/social/action/merge": {
      "get": {
        "description": "Connect an existing user in the system to an external social network user",
        "operationId": "social.merge",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "social token",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: undefined\n* `MinFriendsLimitation`: undefined\n* `Conflict`: undefined"
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/social/action/register": {
      "get": {
        "description": "Create a new user in the system using a provided external social token",
        "operationId": "social.register",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Partner identifier",
            "in": "query",
            "name": "partnerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "social token",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          },
          {
            "description": "User email",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `MinFriendsLimitation`: undefined\n* `Conflict`: undefined"
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/social/action/unmerge": {
      "get": {
        "description": "Disconnect an existing user in the system from its external social network user",
        "operationId": "social.unmerge",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "enum": [
              "facebook"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "FACEBOOK"
            ],
            "x-enumType": "KalturaSocialNetwork"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `MinFriendsLimitation`: undefined\n* `WrongPasswordOrUserName`: undefined\n* `Conflict`: undefined"
          }
        },
        "tags": [
          "social"
        ]
      }
    },
    "/service/socialaction/action/add": {
      "get": {
        "description": "Insert new user social action",
        "operationId": "socialAction.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Enum Type: `KalturaSocialActionType`\n\nAction type",
            "enum": [
              "LIKE",
              "WATCH",
              "RATE",
              "SHARE"
            ],
            "in": "query",
            "name": "socialAction[actionType]",
            "type": "string",
            "x-enumLabels": [
              "LIKE",
              "WATCH",
              "RATE",
              "SHARE"
            ],
            "x-enumType": "KalturaSocialActionType",
            "x-group": "socialAction"
          },
          {
            "description": "EPOC based timestamp for when the action occurred",
            "in": "query",
            "name": "socialAction[time]",
            "type": "integer",
            "x-group": "socialAction"
          },
          {
            "description": "ID of the asset that was acted upon",
            "in": "query",
            "name": "socialAction[assetId]",
            "type": "integer",
            "x-group": "socialAction"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nType of the asset that was acted upon, currently only VOD (media)",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "socialAction[assetType]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "socialAction"
          },
          {
            "description": "`writeOnly`\n\nThe value of the url",
            "in": "query",
            "name": "socialAction[url]",
            "type": "string",
            "x-group": "socialAction"
          },
          {
            "enum": [
              "KalturaSocialActionRate"
            ],
            "in": "query",
            "name": "socialAction[objectType]",
            "type": "string",
            "x-group": "socialAction"
          },
          {
            "description": "The value of the rating",
            "in": "query",
            "name": "socialAction[rate]",
            "type": "integer",
            "x-group": "socialAction",
            "x-showCondition": {
              "name": "socialAction[objectType]",
              "value": [
                "KalturaSocialActionRate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSocialActionResponse"
            }
          }
        },
        "tags": [
          "socialAction"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSocialAction`",
            "name": "socialAction",
            "schema": {
              "$ref": "#/definitions/KalturaSocialAction"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/socialaction/action/delete": {
      "get": {
        "description": "delete user social action",
        "operationId": "socialAction.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/KalturaNetworkActionStatus"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "socialAction"
        ]
      }
    },
    "/service/socialaction/action/list": {
      "get": {
        "description": "Get list of user social actions",
        "operationId": "socialAction.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaSocialActionOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated list of asset identifiers.",
            "in": "query",
            "name": "filter[assetIdIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "filter"
          },
          {
            "description": "Comma separated list of social actions to filter by",
            "in": "query",
            "name": "filter[actionTypeIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialActionListResponse"
            }
          }
        },
        "tags": [
          "socialAction"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSocialActionFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaSocialActionFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/socialcomment/action/list": {
      "get": {
        "description": "Get a list of all social comments filtered by asset ID and social platform",
        "operationId": "socialComment.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "x-enumType": "KalturaSocialCommentOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Asset ID to filter by",
            "in": "query",
            "name": "filter[assetIdEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by, currently only VOD (media)",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaSocialPlatform`\n\nComma separated list of social actions to filter by",
            "enum": [
              "IN_APP",
              "FACEBOOK",
              "TWITTER"
            ],
            "in": "query",
            "name": "filter[socialPlatformEqual]",
            "type": "string",
            "x-enumLabels": [
              "IN_APP",
              "FACEBOOK",
              "TWITTER"
            ],
            "x-enumType": "KalturaSocialPlatform",
            "x-group": "filter"
          },
          {
            "description": "The create date from which to get the comments",
            "in": "query",
            "name": "filter[createDateGreaterThan]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialCommentListResponse"
            }
          }
        },
        "tags": [
          "socialComment"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSocialCommentFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaSocialCommentFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/socialfriendactivity/action/list": {
      "get": {
        "description": "Get a list of the social friends activity for a user",
        "operationId": "socialFriendActivity.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaSocialFriendActivityOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Asset ID to filter by",
            "in": "query",
            "name": "filter[assetIdEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by, currently only VOD (media)",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "string",
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "x-enumType": "KalturaAssetType",
            "x-group": "filter"
          },
          {
            "description": "Comma separated list of social actions to filter by",
            "in": "query",
            "name": "filter[actionTypeIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialFriendActivityListResponse"
            }
          }
        },
        "tags": [
          "socialFriendActivity"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSocialFriendActivityFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaSocialFriendActivityFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/subscription/action/list": {
      "get": {
        "description": "Returns a list of subscriptions requested by Subscription ID or file ID",
        "operationId": "subscription.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "START_DATE_ASC",
              "START_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "START_DATE_ASC",
              "START_DATE_DESC"
            ],
            "x-enumType": "KalturaSubscriptionOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated subscription identifiers or file identifier (only 1) to get the subscriptions by",
            "in": "query",
            "name": "filter[subscriptionIdIn]",
            "type": "string",
            "x-group": "filter"
          },
          {
            "description": "Media-file identifier to get the subscriptions by",
            "in": "query",
            "name": "filter[mediaFileIdEqual]",
            "type": "integer",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionListResponse"
            }
          }
        },
        "tags": [
          "subscription"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaSubscriptionFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/system/action/getCountry": {
      "get": {
        "description": "Returns country details by the provided IP, if not provided - by the client IP",
        "operationId": "system.getCountry",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "IP",
            "in": "query",
            "name": "ip",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCountry"
            }
          },
          "x-Errors": {
            "description": "* `CountryNotFound`: undefined"
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/system/action/getTime": {
      "get": {
        "description": "Returns current server timestamp",
        "operationId": "system.getTime",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/system/action/getVersion": {
      "get": {
        "description": "Returns current server version",
        "operationId": "system.getVersion",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/system/action/ping": {
      "get": {
        "description": "Returns true",
        "operationId": "system.ping",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "system"
        ]
      }
    },
    "/service/timeshiftedtvpartnersettings/action/get": {
      "get": {
        "description": "Retrieve the account’s time-shifted TV settings (catch-up and C-DVR, Trick-play, Start-over)",
        "operationId": "timeShiftedTvPartnerSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTimeShiftedTvPartnerSettings"
            }
          },
          "x-Errors": {
            "description": "* `TimeShiftedTvPartnerSettingsNotFound`: undefined"
          }
        },
        "tags": [
          "timeShiftedTvPartnerSettings"
        ]
      }
    },
    "/service/timeshiftedtvpartnersettings/action/update": {
      "get": {
        "description": "Configure the account’s time-shifted TV settings (catch-up and C-DVR, Trick-play, Start-over)",
        "operationId": "timeShiftedTvPartnerSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Is catch-up enabled",
            "in": "query",
            "name": "settings[catchUpEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is c-dvr enabled",
            "in": "query",
            "name": "settings[cdvrEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is start-over enabled",
            "in": "query",
            "name": "settings[startOverEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is trick-play enabled",
            "in": "query",
            "name": "settings[trickPlayEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is recording schedule window enabled",
            "in": "query",
            "name": "settings[recordingScheduleWindowEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is recording protection enabled",
            "in": "query",
            "name": "settings[protectionEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Catch-up buffer length",
            "in": "query",
            "name": "settings[catchUpBufferLength]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Trick play buffer length",
            "in": "query",
            "name": "settings[trickPlayBufferLength]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Recording schedule window. Indicates how long (in minutes) after the program starts it is allowed to schedule the recording",
            "in": "query",
            "name": "settings[recordingScheduleWindow]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Indicates how long (in seconds) before the program starts the recording will begin",
            "in": "query",
            "name": "settings[paddingBeforeProgramStarts]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Indicates how long (in seconds) after the program ends the recording will end",
            "in": "query",
            "name": "settings[paddingAfterProgramEnds]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Specify the time in days that a recording should be protected. Start time begins at protection request.",
            "in": "query",
            "name": "settings[protectionPeriod]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Indicates how many percent of the quota can be used for protection",
            "in": "query",
            "name": "settings[protectionQuotaPercentage]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Specify the time in days that a recording should be kept for user. Start time begins with the program end date.",
            "in": "query",
            "name": "settings[recordingLifetimePeriod]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
            "in": "query",
            "name": "settings[cleanupNoticePeriod]",
            "type": "integer",
            "x-group": "settings"
          },
          {
            "description": "Is recording of series enabled",
            "in": "query",
            "name": "settings[seriesRecordingEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is recording playback for non-entitled channel enables",
            "in": "query",
            "name": "settings[nonEntitledChannelPlaybackEnabled]",
            "type": "boolean",
            "x-group": "settings"
          },
          {
            "description": "Is recording playback for non-existing channel enables",
            "in": "query",
            "name": "settings[nonExistingChannelPlaybackEnabled]",
            "type": "boolean",
            "x-group": "settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `TimeShiftedTvPartnerSettingsNegativeBufferSent`: undefined\n* `TimeShiftedTvPartnerSettingsNotSent`: undefined"
          }
        },
        "tags": [
          "timeShiftedTvPartnerSettings"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaTimeShiftedTvPartnerSettings`",
            "name": "settings",
            "schema": {
              "$ref": "#/definitions/KalturaTimeShiftedTvPartnerSettings"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/topic/action/delete": {
      "get": {
        "description": "TBD",
        "operationId": "topic.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Topic identifier",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "topic"
        ]
      }
    },
    "/service/topic/action/get": {
      "get": {
        "description": "TBD",
        "operationId": "topic.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "topic id",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-dynamicEnum": {
              "array": "objects",
              "label": "name",
              "method": "get",
              "path": "/service/topic/action/list",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopic"
            }
          }
        },
        "tags": [
          "topic"
        ]
      }
    },
    "/service/topic/action/list": {
      "get": {
        "description": "TBD",
        "operationId": "topic.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaTopicOrderBy",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicListResponse"
            }
          }
        },
        "tags": [
          "topic"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaTopicFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaTopicFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/topic/action/updateStatus": {
      "get": {
        "description": "TBD",
        "operationId": "topic.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaTopicAutomaticIssueNotification`",
            "enum": [
              "Inherit",
              "Yes",
              "No"
            ],
            "in": "query",
            "name": "automaticIssueNotification",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "INHERIT",
              "YES",
              "NO"
            ],
            "x-enumType": "KalturaTopicAutomaticIssueNotification"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "topic"
        ]
      }
    },
    "/service/transaction/action/getPurchaseSessionId": {
      "get": {
        "description": "Retrieve the purchase session identifier",
        "operationId": "transaction.getPurchaseSessionId",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Identifier for the package from which this content is offered",
            "in": "query",
            "name": "purchaseSession[productId]",
            "type": "integer",
            "x-group": "purchaseSession"
          },
          {
            "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
            "in": "query",
            "name": "purchaseSession[contentId]",
            "type": "integer",
            "x-group": "purchaseSession"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "purchaseSession[productType]",
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType",
            "x-group": "purchaseSession"
          },
          {
            "description": "Identifier for paying currency, according to ISO 4217",
            "in": "query",
            "name": "purchaseSession[currency]",
            "type": "string",
            "x-group": "purchaseSession"
          },
          {
            "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
            "in": "query",
            "name": "purchaseSession[price]",
            "type": "number",
            "x-group": "purchaseSession"
          },
          {
            "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
            "in": "query",
            "name": "purchaseSession[paymentMethodId]",
            "type": "integer",
            "x-group": "purchaseSession"
          },
          {
            "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
            "in": "query",
            "name": "purchaseSession[paymentGatewayId]",
            "type": "integer",
            "x-group": "purchaseSession"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "purchaseSession[coupon]",
            "type": "string",
            "x-group": "purchaseSession"
          },
          {
            "description": "Additional data for the adapter",
            "in": "query",
            "name": "purchaseSession[adapterData]",
            "type": "string",
            "x-group": "purchaseSession"
          },
          {
            "description": "Preview module identifier (relevant only for subscription)",
            "in": "query",
            "name": "purchaseSession[previewModuleId]",
            "type": "integer",
            "x-group": "purchaseSession"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "transaction"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPurchaseSession`",
            "name": "purchaseSession",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSession"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/transaction/action/purchase": {
      "get": {
        "description": "Purchase specific product or subscription for a household. Upon successful charge entitlements to use the requested product or subscription are granted.",
        "operationId": "transaction.purchase",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Identifier for the package from which this content is offered",
            "in": "query",
            "name": "purchase[productId]",
            "type": "integer",
            "x-group": "purchase"
          },
          {
            "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
            "in": "query",
            "name": "purchase[contentId]",
            "type": "integer",
            "x-group": "purchase"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "purchase[productType]",
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType",
            "x-group": "purchase"
          },
          {
            "description": "Identifier for paying currency, according to ISO 4217",
            "in": "query",
            "name": "purchase[currency]",
            "type": "string",
            "x-group": "purchase"
          },
          {
            "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
            "in": "query",
            "name": "purchase[price]",
            "type": "number",
            "x-group": "purchase"
          },
          {
            "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
            "in": "query",
            "name": "purchase[paymentMethodId]",
            "type": "integer",
            "x-group": "purchase"
          },
          {
            "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
            "in": "query",
            "name": "purchase[paymentGatewayId]",
            "type": "integer",
            "x-group": "purchase"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "purchase[coupon]",
            "type": "string",
            "x-group": "purchase"
          },
          {
            "description": "Additional data for the adapter",
            "in": "query",
            "name": "purchase[adapterData]",
            "type": "string",
            "x-group": "purchase"
          },
          {
            "enum": [
              "KalturaPurchaseSession"
            ],
            "in": "query",
            "name": "purchase[objectType]",
            "type": "string",
            "x-group": "purchase"
          },
          {
            "description": "Preview module identifier (relevant only for subscription)",
            "in": "query",
            "name": "purchase[previewModuleId]",
            "type": "integer",
            "x-group": "purchase",
            "x-showCondition": {
              "name": "purchase[objectType]",
              "value": [
                "KalturaPurchaseSession"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          },
          "x-Errors": {
            "description": "* `NotForPurchase`: undefined\n* `UserNotInDomain`: undefined\n* `InvalidUser`: undefined\n* `PaymentMethodNotExist`: undefined\n* `UserDoesNotExist`: undefined\n* `UserSuspended`: undefined\n* `PaymentGatewayChargeIdRequired`: undefined\n* `SignatureMismatch`: undefined\n* `UnknownTransactionState`: undefined\n* `PaymentMethodNotSetForHousehold`: undefined\n* `UnableToPurchaseCollectionPurchased`: undefined\n* `UnableToPurchaseForPurchaseSubscriptionOnly`: undefined\n* `NoConfigurationFound`: undefined\n* `CouponNotValid`: undefined\n* `UnableToPurchasePPVPurchased`: undefined\n* `UnableToPurchaseFree`: undefined\n* `IncorrectPrice`: undefined\n* `PaymentGatewayNotExist`: undefined\n* `AdapterUrlRequired`: undefined\n* `UnableToPurchaseSubscriptionPurchased`: undefined\n* `UnKnownPPVModule`: undefined\n* `PaymentGatewayNotSetForHousehold`: undefined"
          }
        },
        "tags": [
          "transaction"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaPurchase`",
            "name": "purchase",
            "schema": {
              "$ref": "#/definitions/KalturaPurchase"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/transaction/action/setWaiver": {
      "get": {
        "description": "This method shall set the waiver flag on the user entitlement table and the waiver date field to the current date.",
        "operationId": "transaction.setWaiver",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset identifier",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nThe transaction type",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "transactionType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "transaction"
        ]
      }
    },
    "/service/transaction/action/updateStatus": {
      "get": {
        "description": "Updates a pending purchase transaction state.",
        "operationId": "transaction.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Payment gateway identifier",
            "in": "query",
            "name": "paymentGatewayId",
            "required": true,
            "type": "string"
          },
          {
            "description": "external transaction identifier",
            "in": "query",
            "name": "externalTransactionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Security signature to validate the caller is a payment gateway adapter application",
            "in": "query",
            "name": "signature",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaTransactionAdapterStatus`\n\nPayment gateway adapter application state for the transaction to update",
            "enum": [
              "OK",
              "PENDING",
              "FAILED"
            ],
            "in": "query",
            "name": "status[adapterTransactionStatus]",
            "type": "string",
            "x-enumLabels": [
              "OK",
              "PENDING",
              "FAILED"
            ],
            "x-enumType": "KalturaTransactionAdapterStatus",
            "x-group": "status"
          },
          {
            "description": "External transaction identifier",
            "in": "query",
            "name": "status[externalId]",
            "type": "string",
            "x-group": "status"
          },
          {
            "description": "Payment gateway transaction status",
            "in": "query",
            "name": "status[externalStatus]",
            "type": "string",
            "x-group": "status"
          },
          {
            "description": "Payment gateway message",
            "in": "query",
            "name": "status[externalMessage]",
            "type": "string",
            "x-group": "status"
          },
          {
            "description": "The reason the transaction failed",
            "in": "query",
            "name": "status[failReason]",
            "type": "integer",
            "x-group": "status"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "transaction"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaTransactionStatus`",
            "name": "status",
            "schema": {
              "$ref": "#/definitions/KalturaTransactionStatus"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/transaction/action/validateReceipt": {
      "get": {
        "description": "Verifies PPV/Subscription/Collection client purchase (such as InApp) and entitles the user.",
        "operationId": "transaction.validateReceipt",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Identifier for the package from which this content is offered",
            "in": "query",
            "name": "externalReceipt[productId]",
            "type": "integer",
            "x-group": "externalReceipt"
          },
          {
            "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
            "in": "query",
            "name": "externalReceipt[contentId]",
            "type": "integer",
            "x-group": "externalReceipt"
          },
          {
            "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "in": "query",
            "name": "externalReceipt[productType]",
            "type": "string",
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "x-enumType": "KalturaTransactionType",
            "x-group": "externalReceipt"
          },
          {
            "description": "A unique identifier that was provided by the In-App billing service to validate the purchase",
            "in": "query",
            "name": "externalReceipt[receiptId]",
            "type": "string",
            "x-group": "externalReceipt"
          },
          {
            "description": "The payment gateway name for the In-App billing service to be used. Possible values: Google/Apple",
            "in": "query",
            "name": "externalReceipt[paymentGatewayName]",
            "type": "string",
            "x-group": "externalReceipt"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          }
        },
        "tags": [
          "transaction"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaExternalReceipt`",
            "name": "externalReceipt",
            "schema": {
              "$ref": "#/definitions/KalturaExternalReceipt"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/transactionhistory/action/list": {
      "get": {
        "description": "Gets user or household transaction history.",
        "operationId": "transactionHistory.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "CREATE_DATE_ASC",
              "CREATE_DATE_DESC"
            ],
            "x-enumType": "KalturaTransactionHistoryOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "enum": [
              "user",
              "household"
            ],
            "in": "query",
            "name": "filter[entityReferenceEqual]",
            "type": "string",
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "x-enumType": "KalturaEntityReferenceBy",
            "x-group": "filter"
          },
          {
            "description": "Filter transactions later than specific date",
            "in": "query",
            "name": "filter[startDateGreaterThanOrEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Filter transactions earlier than specific date",
            "in": "query",
            "name": "filter[endDateLessThanOrEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "in": "query",
            "name": "pager[pageSize]",
            "type": "integer",
            "x-group": "pager"
          },
          {
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "in": "query",
            "name": "pager[pageIndex]",
            "type": "integer",
            "x-group": "pager"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBillingTransactionListResponse"
            }
          }
        },
        "tags": [
          "transactionHistory"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaTransactionHistoryFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaTransactionHistoryFilter"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaFilterPager`",
            "name": "pager",
            "schema": {
              "$ref": "#/definitions/KalturaFilterPager"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/userassetrule/action/list": {
      "get": {
        "description": "Retrieve all the rules (parental, geo, device or user-type) that applies for this user and asset.",
        "operationId": "userAssetRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NAME_ASC",
              "NAME_DESC"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NAME_ASC",
              "NAME_DESC"
            ],
            "x-enumType": "KalturaUserAssetRuleOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Asset identifier to filter by",
            "in": "query",
            "name": "filter[assetIdEqual]",
            "type": "integer",
            "x-group": "filter"
          },
          {
            "description": "Asset type to filter by - 0 = EPG, 1 = media",
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "type": "integer",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetRuleListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `DomainNotExists`: undefined\n* `UserDoesNotExist`: undefined\n* `UserWithNoDomain`: undefined\n* `UserNotInDomain`: undefined"
          }
        },
        "tags": [
          "userAssetRule"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaUserAssetRuleFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetRuleFilter"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/userassetslistitem/action/add": {
      "get": {
        "description": "Adds a new item to user’s private asset list",
        "operationId": "userAssetsListItem.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset identifier",
            "in": "query",
            "name": "userAssetsListItem[id]",
            "type": "string",
            "x-group": "userAssetsListItem"
          },
          {
            "description": "The order index of the asset in the list",
            "in": "query",
            "name": "userAssetsListItem[orderIndex]",
            "type": "integer",
            "x-group": "userAssetsListItem"
          },
          {
            "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nThe type of the asset",
            "enum": [
              "all",
              "media"
            ],
            "in": "query",
            "name": "userAssetsListItem[type]",
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "MEDIA"
            ],
            "x-enumType": "KalturaUserAssetsListItemType",
            "x-group": "userAssetsListItem"
          },
          {
            "description": "Enum Type: `KalturaUserAssetsListType`\n\nThe type of the list, all is not supported",
            "enum": [
              "all",
              "watch",
              "purchase",
              "library"
            ],
            "in": "query",
            "name": "userAssetsListItem[listType]",
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "WATCH",
              "PURCHASE",
              "LIBRARY"
            ],
            "x-enumType": "KalturaUserAssetsListType",
            "x-group": "userAssetsListItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            }
          }
        },
        "tags": [
          "userAssetsListItem"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaUserAssetsListItem`",
            "name": "userAssetsListItem",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/userassetslistitem/action/delete": {
      "get": {
        "description": "Deletes an item from user’s private asset list",
        "operationId": "userAssetsListItem.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset id to delete",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaUserAssetsListType`\n\nAsset list type to delete from",
            "enum": [
              "all",
              "watch",
              "purchase",
              "library"
            ],
            "in": "query",
            "name": "listType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "WATCH",
              "PURCHASE",
              "LIBRARY"
            ],
            "x-enumType": "KalturaUserAssetsListType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ItemNotFound`: undefined"
          }
        },
        "tags": [
          "userAssetsListItem"
        ]
      }
    },
    "/service/userassetslistitem/action/get": {
      "get": {
        "description": "Get an item from user’s private asset list",
        "operationId": "userAssetsListItem.get",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Asset id to get",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Enum Type: `KalturaUserAssetsListType`\n\nAsset list type to get from",
            "enum": [
              "all",
              "watch",
              "purchase",
              "library"
            ],
            "in": "query",
            "name": "listType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "WATCH",
              "PURCHASE",
              "LIBRARY"
            ],
            "x-enumType": "KalturaUserAssetsListType"
          },
          {
            "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nitem type to get",
            "enum": [
              "all",
              "media"
            ],
            "in": "query",
            "name": "itemType",
            "required": true,
            "type": "string",
            "x-enumLabels": [
              "ALL",
              "MEDIA"
            ],
            "x-enumType": "KalturaUserAssetsListItemType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            }
          },
          "x-Errors": {
            "description": "* `ItemNotFound`: undefined"
          }
        },
        "tags": [
          "userAssetsListItem"
        ]
      }
    },
    "/service/userloginpin/action/add": {
      "get": {
        "description": "Generate a time and usage expiry login-PIN that can allow a single login per PIN. If an active login-PIN already exists. Calling this API again for same user will add another login-PIN",
        "operationId": "userLoginPin.add",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Additional security parameter for optional enhanced security",
            "in": "query",
            "name": "secret",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginPin"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: undefined\n* `UserDoesNotExist`: undefined"
          }
        },
        "tags": [
          "userLoginPin"
        ]
      }
    },
    "/service/userloginpin/action/delete": {
      "get": {
        "description": "Immediately deletes a given pre set login pin code for the user.",
        "operationId": "userLoginPin.delete",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Login pin code to expire",
            "in": "query",
            "name": "pinCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "userLoginPin"
        ]
      }
    },
    "/service/userloginpin/action/deleteAll": {
      "get": {
        "description": "Immediately expire all active login-PINs for a user",
        "operationId": "userLoginPin.deleteAll",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "userLoginPin"
        ]
      }
    },
    "/service/userloginpin/action/update": {
      "get": {
        "description": "Set a time and usage expiry login-PIN that can allow a single login per PIN. If an active login-PIN already exists. Calling this API again for same user will add another login-PIN",
        "operationId": "userLoginPin.update",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Device Identifier",
            "in": "query",
            "name": "pinCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "Additional security parameter to validate the login",
            "in": "query",
            "name": "secret",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginPin"
            }
          },
          "x-Errors": {
            "description": "* `PinAlreadyExists`: undefined\n* `MissingSecurityParameter`: undefined\n* `LoginViaPinNotAllowed`: undefined\n* `PinNotInTheRightLength`: undefined"
          }
        },
        "tags": [
          "userLoginPin"
        ]
      }
    },
    "/service/userrole/action/list": {
      "get": {
        "description": "Retrieving user roles by identifiers, if filter is empty, returns all partner roles",
        "operationId": "userRole.list",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "enum": [
              "NONE"
            ],
            "in": "query",
            "name": "filter[orderBy]",
            "type": "integer",
            "x-enumLabels": [
              "NONE"
            ],
            "x-enumType": "KalturaUserRoleOrderBy",
            "x-group": "filter"
          },
          {
            "description": "Comma separated roles identifiers",
            "in": "query",
            "name": "filter[idIn]",
            "type": "string",
            "x-group": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRoleListResponse"
            }
          }
        },
        "tags": [
          "userRole"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaUserRoleFilter`",
            "name": "filter",
            "schema": {
              "$ref": "#/definitions/KalturaUserRoleFilter"
            },
            "subGroups": []
          }
        ]
      }
    }
  },
  "schemes": [
    "https",
    "http"
  ],
  "security": [
    {
      "ks": []
    }
  ],
  "securityDefinitions": {
    "ks": {
      "description": "A session ID generated by calling /service/session/action/start",
      "in": "query",
      "name": "ks",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "announcement"
    },
    {
      "name": "appToken"
    },
    {
      "name": "asset"
    },
    {
      "name": "assetComment"
    },
    {
      "name": "assetFile"
    },
    {
      "name": "assetHistory"
    },
    {
      "name": "assetStatistics"
    },
    {
      "name": "bookmark"
    },
    {
      "name": "cDVRAdapterProfile"
    },
    {
      "name": "cdnAdapterProfile"
    },
    {
      "name": "cdnPartnerSettings"
    },
    {
      "name": "channel"
    },
    {
      "name": "configurationGroup"
    },
    {
      "name": "configurationGroupDevice"
    },
    {
      "name": "configurationGroupTag"
    },
    {
      "name": "configurations"
    },
    {
      "name": "country"
    },
    {
      "name": "coupon"
    },
    {
      "name": "deviceBrand"
    },
    {
      "name": "deviceFamily"
    },
    {
      "name": "entitlement"
    },
    {
      "name": "exportTask"
    },
    {
      "name": "externalChannelProfile"
    },
    {
      "name": "favorite"
    },
    {
      "name": "followTvSeries"
    },
    {
      "name": "homeNetwork"
    },
    {
      "name": "household"
    },
    {
      "name": "householdDevice"
    },
    {
      "name": "householdLimitations"
    },
    {
      "name": "householdPaymentGateway"
    },
    {
      "name": "householdPaymentMethod"
    },
    {
      "name": "householdPremiumService"
    },
    {
      "name": "householdQuota"
    },
    {
      "name": "householdUser"
    },
    {
      "name": "inboxMessage"
    },
    {
      "name": "licensedUrl"
    },
    {
      "name": "messageTemplate"
    },
    {
      "name": "meta"
    },
    {
      "name": "notification"
    },
    {
      "name": "notificationsPartnerSettings"
    },
    {
      "name": "notificationsSettings"
    },
    {
      "name": "ossAdapterProfile"
    },
    {
      "name": "ottCategory"
    },
    {
      "name": "ottUser"
    },
    {
      "name": "parentalRule"
    },
    {
      "name": "partnerConfiguration"
    },
    {
      "name": "paymentGatewayProfile"
    },
    {
      "name": "paymentMethodProfile"
    },
    {
      "name": "personalFeed"
    },
    {
      "name": "pin"
    },
    {
      "name": "ppv"
    },
    {
      "name": "productPrice"
    },
    {
      "name": "purchaseSettings"
    },
    {
      "name": "recommendationProfile"
    },
    {
      "name": "recording"
    },
    {
      "name": "region"
    },
    {
      "name": "registrySettings"
    },
    {
      "name": "report"
    },
    {
      "name": "seriesRecording"
    },
    {
      "name": "session"
    },
    {
      "name": "social"
    },
    {
      "name": "socialAction"
    },
    {
      "name": "socialComment"
    },
    {
      "name": "socialFriendActivity"
    },
    {
      "name": "subscription"
    },
    {
      "name": "system"
    },
    {
      "name": "timeShiftedTvPartnerSettings"
    },
    {
      "name": "topic"
    },
    {
      "name": "transaction"
    },
    {
      "name": "transactionHistory"
    },
    {
      "name": "userAssetRule"
    },
    {
      "name": "userAssetsListItem"
    },
    {
      "name": "userLoginPin"
    },
    {
      "name": "userRole"
    }
  ],
  "x-enums": {
    "KalturaAnnouncementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAnnouncementOrderBy"
    },
    "KalturaAnnouncementRecipientsType": {
      "oneOf": [
        {
          "enum": [
            "All"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "LoggedIn"
          ],
          "title": "LOGGEDIN"
        },
        {
          "enum": [
            "Guests"
          ],
          "title": "GUESTS"
        },
        {
          "enum": [
            "Other"
          ],
          "title": "OTHER"
        }
      ],
      "title": "KalturaAnnouncementRecipientsType"
    },
    "KalturaAnnouncementStatus": {
      "oneOf": [
        {
          "enum": [
            "NotSent"
          ],
          "title": "NOTSENT"
        },
        {
          "enum": [
            "Sending"
          ],
          "title": "SENDING"
        },
        {
          "enum": [
            "Sent"
          ],
          "title": "SENT"
        },
        {
          "enum": [
            "Aborted"
          ],
          "title": "ABORTED"
        }
      ],
      "title": "KalturaAnnouncementStatus"
    },
    "KalturaApiParameterPermissionItemAction": {
      "oneOf": [
        {
          "enum": [
            "READ"
          ],
          "title": "READ"
        },
        {
          "enum": [
            "INSERT"
          ],
          "title": "INSERT"
        },
        {
          "enum": [
            "UPDATE"
          ],
          "title": "UPDATE"
        },
        {
          "enum": [
            "USAGE"
          ],
          "title": "USAGE"
        }
      ],
      "title": "KalturaApiParameterPermissionItemAction"
    },
    "KalturaAppTokenHashType": {
      "oneOf": [
        {
          "enum": [
            "SHA1"
          ],
          "title": "SHA1"
        },
        {
          "enum": [
            "SHA256"
          ],
          "title": "SHA256"
        },
        {
          "enum": [
            "SHA512"
          ],
          "title": "SHA512"
        },
        {
          "enum": [
            "MD5"
          ],
          "title": "MD5"
        }
      ],
      "title": "KalturaAppTokenHashType"
    },
    "KalturaAppTokenStatus": {
      "oneOf": [
        {
          "enum": [
            0
          ],
          "title": "DELETED"
        },
        {
          "enum": [
            1
          ],
          "title": "DISABLED"
        },
        {
          "enum": [
            2
          ],
          "title": "ACTIVE"
        }
      ],
      "title": "KalturaAppTokenStatus"
    },
    "KalturaAssetCommentOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaAssetCommentOrderBy"
    },
    "KalturaAssetHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetHistoryOrderBy"
    },
    "KalturaAssetOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        }
      ],
      "title": "KalturaAssetOrderBy"
    },
    "KalturaAssetReferenceType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "epg_internal"
          ],
          "title": "EPG_INTERNAL"
        },
        {
          "enum": [
            "epg_external"
          ],
          "title": "EPG_EXTERNAL"
        }
      ],
      "title": "KalturaAssetReferenceType"
    },
    "KalturaAssetType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "recording"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        }
      ],
      "title": "KalturaAssetType"
    },
    "KalturaBillingAction": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "renew_payment"
          ],
          "title": "RENEW_PAYMENT"
        },
        {
          "enum": [
            "renew_canceled_subscription"
          ],
          "title": "RENEW_CANCELED_SUBSCRIPTION"
        },
        {
          "enum": [
            "cancel_subscription_order"
          ],
          "title": "CANCEL_SUBSCRIPTION_ORDER"
        },
        {
          "enum": [
            "subscription_date_changed"
          ],
          "title": "SUBSCRIPTION_DATE_CHANGED"
        }
      ],
      "title": "KalturaBillingAction"
    },
    "KalturaBillingItemsType": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "pre_paid"
          ],
          "title": "PRE_PAID"
        },
        {
          "enum": [
            "pre_paid_expired"
          ],
          "title": "PRE_PAID_EXPIRED"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        }
      ],
      "title": "KalturaBillingItemsType"
    },
    "KalturaBookmarkActionType": {
      "oneOf": [
        {
          "enum": [
            "HIT"
          ],
          "title": "HIT"
        },
        {
          "enum": [
            "PLAY"
          ],
          "title": "PLAY"
        },
        {
          "enum": [
            "STOP"
          ],
          "title": "STOP"
        },
        {
          "enum": [
            "PAUSE"
          ],
          "title": "PAUSE"
        },
        {
          "enum": [
            "FIRST_PLAY"
          ],
          "title": "FIRST_PLAY"
        },
        {
          "enum": [
            "SWOOSH"
          ],
          "title": "SWOOSH"
        },
        {
          "enum": [
            "FULL_SCREEN"
          ],
          "title": "FULL_SCREEN"
        },
        {
          "enum": [
            "SEND_TO_FRIEND"
          ],
          "title": "SEND_TO_FRIEND"
        },
        {
          "enum": [
            "LOAD"
          ],
          "title": "LOAD"
        },
        {
          "enum": [
            "FULL_SCREEN_EXIT"
          ],
          "title": "FULL_SCREEN_EXIT"
        },
        {
          "enum": [
            "FINISH"
          ],
          "title": "FINISH"
        },
        {
          "enum": [
            "ERROR"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "BITRATE_CHANGE"
          ],
          "title": "BITRATE_CHANGE"
        },
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaBookmarkActionType"
    },
    "KalturaBookmarkOrderBy": {
      "oneOf": [
        {
          "enum": [
            "POSITION_ASC"
          ],
          "title": "POSITION_ASC"
        },
        {
          "enum": [
            "POSITION_DESC"
          ],
          "title": "POSITION_DESC"
        }
      ],
      "title": "KalturaBookmarkOrderBy"
    },
    "KalturaBundleType": {
      "oneOf": [
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        }
      ],
      "title": "KalturaBundleType"
    },
    "KalturaCatalogReferenceBy": {
      "oneOf": [
        {
          "enum": [
            "MEDIA"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "EPG_INTERNAL"
          ],
          "title": "EPG_INTERNAL"
        },
        {
          "enum": [
            "EPG_EXTERNAL"
          ],
          "title": "EPG_EXTERNAL"
        }
      ],
      "title": "KalturaCatalogReferenceBy"
    },
    "KalturaCatalogWith": {
      "oneOf": [
        {
          "enum": [
            "images"
          ],
          "title": "IMAGES"
        },
        {
          "enum": [
            "files"
          ],
          "title": "FILES"
        },
        {
          "enum": [
            "stats"
          ],
          "title": "STATS"
        }
      ],
      "title": "KalturaCatalogWith"
    },
    "KalturaChannelEnrichment": {
      "oneOf": [
        {
          "enum": [
            "ClientLocation"
          ],
          "title": "CLIENTLOCATION"
        },
        {
          "enum": [
            "UserId"
          ],
          "title": "USERID"
        },
        {
          "enum": [
            "HouseholdId"
          ],
          "title": "HOUSEHOLDID"
        },
        {
          "enum": [
            "DeviceId"
          ],
          "title": "DEVICEID"
        },
        {
          "enum": [
            "DeviceType"
          ],
          "title": "DEVICETYPE"
        },
        {
          "enum": [
            "UTCOffset"
          ],
          "title": "UTCOFFSET"
        },
        {
          "enum": [
            "Language"
          ],
          "title": "LANGUAGE"
        },
        {
          "enum": [
            "NPVRSupport"
          ],
          "title": "NPVRSUPPORT"
        },
        {
          "enum": [
            "Catchup"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "Parental"
          ],
          "title": "PARENTAL"
        },
        {
          "enum": [
            "DTTRegion"
          ],
          "title": "DTTREGION"
        },
        {
          "enum": [
            "AtHome"
          ],
          "title": "ATHOME"
        }
      ],
      "title": "KalturaChannelEnrichment"
    },
    "KalturaConfigurationGroupDeviceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaConfigurationGroupDeviceOrderBy"
    },
    "KalturaConfigurationGroupTagOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaConfigurationGroupTagOrderBy"
    },
    "KalturaConfigurationsOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaConfigurationsOrderBy"
    },
    "KalturaContextType": {
      "oneOf": [
        {
          "enum": [
            "none"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "recording"
          ],
          "title": "RECORDING"
        }
      ],
      "title": "KalturaContextType"
    },
    "KalturaCountryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        }
      ],
      "title": "KalturaCountryOrderBy"
    },
    "KalturaCouponStatus": {
      "oneOf": [
        {
          "enum": [
            "VALID"
          ],
          "title": "VALID"
        },
        {
          "enum": [
            "NOT_EXISTS"
          ],
          "title": "NOT_EXISTS"
        },
        {
          "enum": [
            "ALREADY_USED"
          ],
          "title": "ALREADY_USED"
        },
        {
          "enum": [
            "EXPIRED"
          ],
          "title": "EXPIRED"
        },
        {
          "enum": [
            "INACTIVE"
          ],
          "title": "INACTIVE"
        }
      ],
      "title": "KalturaCouponStatus"
    },
    "KalturaCutWith": {
      "oneOf": [
        {
          "enum": [
            "or"
          ],
          "title": "OR"
        },
        {
          "enum": [
            "and"
          ],
          "title": "AND"
        }
      ],
      "title": "KalturaCutWith"
    },
    "KalturaDeviceRegistrationStatus": {
      "oneOf": [
        {
          "enum": [
            "not_registered"
          ],
          "title": "NOT_REGISTERED"
        },
        {
          "enum": [
            "registered"
          ],
          "title": "REGISTERED"
        },
        {
          "enum": [
            "registered_to_another_household"
          ],
          "title": "REGISTERED_TO_ANOTHER_HOUSEHOLD"
        }
      ],
      "title": "KalturaDeviceRegistrationStatus"
    },
    "KalturaDeviceStatus": {
      "oneOf": [
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "ACTIVATED"
          ],
          "title": "ACTIVATED"
        },
        {
          "enum": [
            "NOT_ACTIVATED"
          ],
          "title": "NOT_ACTIVATED"
        }
      ],
      "title": "KalturaDeviceStatus"
    },
    "KalturaEntitlementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PURCHASE_DATE_ASC"
          ],
          "title": "PURCHASE_DATE_ASC"
        },
        {
          "enum": [
            "PURCHASE_DATE_DESC"
          ],
          "title": "PURCHASE_DATE_DESC"
        }
      ],
      "title": "KalturaEntitlementOrderBy"
    },
    "KalturaEntityReferenceBy": {
      "oneOf": [
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        }
      ],
      "title": "KalturaEntityReferenceBy"
    },
    "KalturaExportDataType": {
      "oneOf": [
        {
          "enum": [
            "vod"
          ],
          "title": "VOD"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        },
        {
          "enum": [
            "users"
          ],
          "title": "USERS"
        }
      ],
      "title": "KalturaExportDataType"
    },
    "KalturaExportTaskOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaExportTaskOrderBy"
    },
    "KalturaExportType": {
      "oneOf": [
        {
          "enum": [
            "full"
          ],
          "title": "FULL"
        },
        {
          "enum": [
            "incremental"
          ],
          "title": "INCREMENTAL"
        }
      ],
      "title": "KalturaExportType"
    },
    "KalturaFavoriteOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaFavoriteOrderBy"
    },
    "KalturaFollowTvSeriesOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        }
      ],
      "title": "KalturaFollowTvSeriesOrderBy"
    },
    "KalturaHouseholdDeviceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaHouseholdDeviceOrderBy"
    },
    "KalturaHouseholdFrequencyType": {
      "oneOf": [
        {
          "enum": [
            "devices"
          ],
          "title": "DEVICES"
        },
        {
          "enum": [
            "users"
          ],
          "title": "USERS"
        }
      ],
      "title": "KalturaHouseholdFrequencyType"
    },
    "KalturaHouseholdPaymentGatewaySelectedBy": {
      "oneOf": [
        {
          "enum": [
            "none"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "account"
          ],
          "title": "ACCOUNT"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        }
      ],
      "title": "KalturaHouseholdPaymentGatewaySelectedBy"
    },
    "KalturaHouseholdRestriction": {
      "oneOf": [
        {
          "enum": [
            "not_restricted"
          ],
          "title": "NOT_RESTRICTED"
        },
        {
          "enum": [
            "user_master_restricted"
          ],
          "title": "USER_MASTER_RESTRICTED"
        },
        {
          "enum": [
            "device_master_restricted"
          ],
          "title": "DEVICE_MASTER_RESTRICTED"
        },
        {
          "enum": [
            "device_user_master_restricted"
          ],
          "title": "DEVICE_USER_MASTER_RESTRICTED"
        }
      ],
      "title": "KalturaHouseholdRestriction"
    },
    "KalturaHouseholdState": {
      "oneOf": [
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "created_without_npvr_account"
          ],
          "title": "CREATED_WITHOUT_NPVR_ACCOUNT"
        },
        {
          "enum": [
            "suspended"
          ],
          "title": "SUSPENDED"
        },
        {
          "enum": [
            "no_users_in_household"
          ],
          "title": "NO_USERS_IN_HOUSEHOLD"
        }
      ],
      "title": "KalturaHouseholdState"
    },
    "KalturaHouseholdSuspensionState": {
      "oneOf": [
        {
          "enum": [
            "NOT_SUSPENDED"
          ],
          "title": "NOT_SUSPENDED"
        },
        {
          "enum": [
            "SUSPENDED"
          ],
          "title": "SUSPENDED"
        }
      ],
      "title": "KalturaHouseholdSuspensionState"
    },
    "KalturaHouseholdUserOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaHouseholdUserOrderBy"
    },
    "KalturaHouseholdUserStatus": {
      "oneOf": [
        {
          "enum": [
            "OK"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        }
      ],
      "title": "KalturaHouseholdUserStatus"
    },
    "KalturaHouseholdWith": {
      "oneOf": [
        {
          "enum": [
            "users_base_info"
          ],
          "title": "USERS_BASE_INFO"
        },
        {
          "enum": [
            "users_full_info"
          ],
          "title": "USERS_FULL_INFO"
        }
      ],
      "title": "KalturaHouseholdWith"
    },
    "KalturaIdentifierTypeBy": {
      "oneOf": [
        {
          "enum": [
            "internal_id"
          ],
          "title": "INTERNAL_ID"
        },
        {
          "enum": [
            "external_id"
          ],
          "title": "EXTERNAL_ID"
        }
      ],
      "title": "KalturaIdentifierTypeBy"
    },
    "KalturaInboxMessageOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaInboxMessageOrderBy"
    },
    "KalturaInboxMessageStatus": {
      "oneOf": [
        {
          "enum": [
            "Unread"
          ],
          "title": "UNREAD"
        },
        {
          "enum": [
            "Read"
          ],
          "title": "READ"
        },
        {
          "enum": [
            "Deleted"
          ],
          "title": "DELETED"
        }
      ],
      "title": "KalturaInboxMessageStatus"
    },
    "KalturaInboxMessageType": {
      "oneOf": [
        {
          "enum": [
            "SystemAnnouncement"
          ],
          "title": "SYSTEMANNOUNCEMENT"
        },
        {
          "enum": [
            "Followed"
          ],
          "title": "FOLLOWED"
        }
      ],
      "title": "KalturaInboxMessageType"
    },
    "KalturaMetaFieldName": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "SERIES_ID"
          ],
          "title": "SERIES_ID"
        },
        {
          "enum": [
            "SEASON_NUMBER"
          ],
          "title": "SEASON_NUMBER"
        },
        {
          "enum": [
            "EPISODE_NUMBER"
          ],
          "title": "EPISODE_NUMBER"
        }
      ],
      "title": "KalturaMetaFieldName"
    },
    "KalturaMetaOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaMetaOrderBy"
    },
    "KalturaMetaType": {
      "oneOf": [
        {
          "enum": [
            "STRING"
          ],
          "title": "STRING"
        },
        {
          "enum": [
            "NUMBER"
          ],
          "title": "NUMBER"
        },
        {
          "enum": [
            "BOOLEAN"
          ],
          "title": "BOOLEAN"
        },
        {
          "enum": [
            "STRING_ARRAY"
          ],
          "title": "STRING_ARRAY"
        }
      ],
      "title": "KalturaMetaType"
    },
    "KalturaNotificationType": {
      "oneOf": [
        {
          "enum": [
            "announcement"
          ],
          "title": "ANNOUNCEMENT"
        },
        {
          "enum": [
            "system"
          ],
          "title": "SYSTEM"
        }
      ],
      "title": "KalturaNotificationType"
    },
    "KalturaOTTAssetType": {
      "oneOf": [
        {
          "enum": [
            0
          ],
          "title": "SERIES"
        }
      ],
      "title": "KalturaOTTAssetType"
    },
    "KalturaOTTUserOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaOTTUserOrderBy"
    },
    "KalturaParentalRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PARTNER_SORT_VALUE"
          ],
          "title": "PARTNER_SORT_VALUE"
        }
      ],
      "title": "KalturaParentalRuleOrderBy"
    },
    "KalturaParentalRuleType": {
      "oneOf": [
        {
          "enum": [
            "ALL"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "MOVIES"
          ],
          "title": "MOVIES"
        },
        {
          "enum": [
            "TV_SERIES"
          ],
          "title": "TV_SERIES"
        }
      ],
      "title": "KalturaParentalRuleType"
    },
    "KalturaPartnerConfigurationType": {
      "oneOf": [
        {
          "enum": [
            "DefaultPaymentGateway"
          ],
          "title": "DEFAULTPAYMENTGATEWAY"
        },
        {
          "enum": [
            "EnablePaymentGatewaySelection"
          ],
          "title": "ENABLEPAYMENTGATEWAYSELECTION"
        },
        {
          "enum": [
            "OSSAdapter"
          ],
          "title": "OSSADAPTER"
        }
      ],
      "title": "KalturaPartnerConfigurationType"
    },
    "KalturaPaymentMethodProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPaymentMethodProfileOrderBy"
    },
    "KalturaPaymentMethodType": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "credit_card"
          ],
          "title": "CREDIT_CARD"
        },
        {
          "enum": [
            "sms"
          ],
          "title": "SMS"
        },
        {
          "enum": [
            "pay_pal"
          ],
          "title": "PAY_PAL"
        },
        {
          "enum": [
            "debit_card"
          ],
          "title": "DEBIT_CARD"
        },
        {
          "enum": [
            "ideal"
          ],
          "title": "IDEAL"
        },
        {
          "enum": [
            "incaso"
          ],
          "title": "INCASO"
        },
        {
          "enum": [
            "gift"
          ],
          "title": "GIFT"
        },
        {
          "enum": [
            "visa"
          ],
          "title": "VISA"
        },
        {
          "enum": [
            "master_card"
          ],
          "title": "MASTER_CARD"
        },
        {
          "enum": [
            "in_app"
          ],
          "title": "IN_APP"
        },
        {
          "enum": [
            "m1"
          ],
          "title": "M1"
        },
        {
          "enum": [
            "change_subscription"
          ],
          "title": "CHANGE_SUBSCRIPTION"
        },
        {
          "enum": [
            "offline"
          ],
          "title": "OFFLINE"
        }
      ],
      "title": "KalturaPaymentMethodType"
    },
    "KalturaPersonalFeedOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        }
      ],
      "title": "KalturaPersonalFeedOrderBy"
    },
    "KalturaPinType": {
      "oneOf": [
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "parental"
          ],
          "title": "PARENTAL"
        }
      ],
      "title": "KalturaPinType"
    },
    "KalturaPlatform": {
      "oneOf": [
        {
          "enum": [
            "Android"
          ],
          "title": "ANDROID"
        },
        {
          "enum": [
            "iOS"
          ],
          "title": "IOS"
        },
        {
          "enum": [
            "WindowsPhone"
          ],
          "title": "WINDOWSPHONE"
        },
        {
          "enum": [
            "Blackberry"
          ],
          "title": "BLACKBERRY"
        },
        {
          "enum": [
            "STB"
          ],
          "title": "STB"
        },
        {
          "enum": [
            "CTV"
          ],
          "title": "CTV"
        },
        {
          "enum": [
            "Other"
          ],
          "title": "OTHER"
        }
      ],
      "title": "KalturaPlatform"
    },
    "KalturaPositionOwner": {
      "oneOf": [
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        },
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        }
      ],
      "title": "KalturaPositionOwner"
    },
    "KalturaProductPriceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PRODUCT_ID_ASC"
          ],
          "title": "PRODUCT_ID_ASC"
        },
        {
          "enum": [
            "PRODUCT_ID_DESC"
          ],
          "title": "PRODUCT_ID_DESC"
        }
      ],
      "title": "KalturaProductPriceOrderBy"
    },
    "KalturaPurchaseSettingsType": {
      "oneOf": [
        {
          "enum": [
            "block"
          ],
          "title": "BLOCK"
        },
        {
          "enum": [
            "ask"
          ],
          "title": "ASK"
        },
        {
          "enum": [
            "allow"
          ],
          "title": "ALLOW"
        }
      ],
      "title": "KalturaPurchaseSettingsType"
    },
    "KalturaPurchaseStatus": {
      "oneOf": [
        {
          "enum": [
            "ppv_purchased"
          ],
          "title": "PPV_PURCHASED"
        },
        {
          "enum": [
            "free"
          ],
          "title": "FREE"
        },
        {
          "enum": [
            "for_purchase_subscription_only"
          ],
          "title": "FOR_PURCHASE_SUBSCRIPTION_ONLY"
        },
        {
          "enum": [
            "subscription_purchased"
          ],
          "title": "SUBSCRIPTION_PURCHASED"
        },
        {
          "enum": [
            "for_purchase"
          ],
          "title": "FOR_PURCHASE"
        },
        {
          "enum": [
            "subscription_purchased_wrong_currency"
          ],
          "title": "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY"
        },
        {
          "enum": [
            "pre_paid_purchased"
          ],
          "title": "PRE_PAID_PURCHASED"
        },
        {
          "enum": [
            "geo_commerce_blocked"
          ],
          "title": "GEO_COMMERCE_BLOCKED"
        },
        {
          "enum": [
            "entitled_to_preview_module"
          ],
          "title": "ENTITLED_TO_PREVIEW_MODULE"
        },
        {
          "enum": [
            "first_device_limitation"
          ],
          "title": "FIRST_DEVICE_LIMITATION"
        },
        {
          "enum": [
            "collection_purchased"
          ],
          "title": "COLLECTION_PURCHASED"
        },
        {
          "enum": [
            "user_suspended"
          ],
          "title": "USER_SUSPENDED"
        },
        {
          "enum": [
            "not_for_purchase"
          ],
          "title": "NOT_FOR_PURCHASE"
        }
      ],
      "title": "KalturaPurchaseStatus"
    },
    "KalturaRecordingContextOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaRecordingContextOrderBy"
    },
    "KalturaRecordingOrderBy": {
      "oneOf": [
        {
          "enum": [
            "TITLE_ASC"
          ],
          "title": "TITLE_ASC"
        },
        {
          "enum": [
            "TITLE_DESC"
          ],
          "title": "TITLE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        }
      ],
      "title": "KalturaRecordingOrderBy"
    },
    "KalturaRecordingStatus": {
      "oneOf": [
        {
          "enum": [
            "SCHEDULED"
          ],
          "title": "SCHEDULED"
        },
        {
          "enum": [
            "RECORDING"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "RECORDED"
          ],
          "title": "RECORDED"
        },
        {
          "enum": [
            "CANCELED"
          ],
          "title": "CANCELED"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        },
        {
          "enum": [
            "DELETED"
          ],
          "title": "DELETED"
        }
      ],
      "title": "KalturaRecordingStatus"
    },
    "KalturaRecordingType": {
      "oneOf": [
        {
          "enum": [
            "SINGLE"
          ],
          "title": "SINGLE"
        },
        {
          "enum": [
            "SEASON"
          ],
          "title": "SEASON"
        },
        {
          "enum": [
            "SERIES"
          ],
          "title": "SERIES"
        }
      ],
      "title": "KalturaRecordingType"
    },
    "KalturaRegionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaRegionOrderBy"
    },
    "KalturaReportOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaReportOrderBy"
    },
    "KalturaRuleLevel": {
      "oneOf": [
        {
          "enum": [
            "invalid"
          ],
          "title": "INVALID"
        },
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        },
        {
          "enum": [
            "account"
          ],
          "title": "ACCOUNT"
        }
      ],
      "title": "KalturaRuleLevel"
    },
    "KalturaRuleType": {
      "oneOf": [
        {
          "enum": [
            "parental"
          ],
          "title": "PARENTAL"
        },
        {
          "enum": [
            "geo"
          ],
          "title": "GEO"
        },
        {
          "enum": [
            "user_type"
          ],
          "title": "USER_TYPE"
        },
        {
          "enum": [
            "device"
          ],
          "title": "DEVICE"
        }
      ],
      "title": "KalturaRuleType"
    },
    "KalturaScheduledRecordingAssetType": {
      "oneOf": [
        {
          "enum": [
            "single"
          ],
          "title": "SINGLE"
        },
        {
          "enum": [
            "series"
          ],
          "title": "SERIES"
        },
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        }
      ],
      "title": "KalturaScheduledRecordingAssetType"
    },
    "KalturaSeriesRecordingOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        },
        {
          "enum": [
            "ID_DESC"
          ],
          "title": "ID_DESC"
        },
        {
          "enum": [
            "SERIES_ID_ASC"
          ],
          "title": "SERIES_ID_ASC"
        },
        {
          "enum": [
            "SERIES_ID_DESC"
          ],
          "title": "SERIES_ID_DESC"
        }
      ],
      "title": "KalturaSeriesRecordingOrderBy"
    },
    "KalturaSessionType": {
      "oneOf": [
        {
          "enum": [
            0
          ],
          "title": "USER"
        },
        {
          "enum": [
            2
          ],
          "title": "ADMIN"
        }
      ],
      "title": "KalturaSessionType"
    },
    "KalturaSocialActionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaSocialActionOrderBy"
    },
    "KalturaSocialActionPrivacy": {
      "oneOf": [
        {
          "enum": [
            "ALLOW"
          ],
          "title": "ALLOW"
        },
        {
          "enum": [
            "DONT_ALLOW"
          ],
          "title": "DONT_ALLOW"
        }
      ],
      "title": "KalturaSocialActionPrivacy"
    },
    "KalturaSocialActionType": {
      "oneOf": [
        {
          "enum": [
            "LIKE"
          ],
          "title": "LIKE"
        },
        {
          "enum": [
            "WATCH"
          ],
          "title": "WATCH"
        },
        {
          "enum": [
            "RATE"
          ],
          "title": "RATE"
        },
        {
          "enum": [
            "SHARE"
          ],
          "title": "SHARE"
        }
      ],
      "title": "KalturaSocialActionType"
    },
    "KalturaSocialCommentOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaSocialCommentOrderBy"
    },
    "KalturaSocialFriendActivityOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaSocialFriendActivityOrderBy"
    },
    "KalturaSocialNetwork": {
      "oneOf": [
        {
          "enum": [
            "facebook"
          ],
          "title": "FACEBOOK"
        }
      ],
      "title": "KalturaSocialNetwork"
    },
    "KalturaSocialPlatform": {
      "oneOf": [
        {
          "enum": [
            "IN_APP"
          ],
          "title": "IN_APP"
        },
        {
          "enum": [
            "FACEBOOK"
          ],
          "title": "FACEBOOK"
        },
        {
          "enum": [
            "TWITTER"
          ],
          "title": "TWITTER"
        }
      ],
      "title": "KalturaSocialPlatform"
    },
    "KalturaSocialPrivacy": {
      "oneOf": [
        {
          "enum": [
            "UNKNOWN"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "EVERYONE"
          ],
          "title": "EVERYONE"
        },
        {
          "enum": [
            "ALL_FRIENDS"
          ],
          "title": "ALL_FRIENDS"
        },
        {
          "enum": [
            "FRIENDS_OF_FRIENDS"
          ],
          "title": "FRIENDS_OF_FRIENDS"
        },
        {
          "enum": [
            "SELF"
          ],
          "title": "SELF"
        },
        {
          "enum": [
            "CUSTOM"
          ],
          "title": "CUSTOM"
        }
      ],
      "title": "KalturaSocialPrivacy"
    },
    "KalturaSocialStatus": {
      "oneOf": [
        {
          "enum": [
            "error"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "user_does_not_exist"
          ],
          "title": "USER_DOES_NOT_EXIST"
        },
        {
          "enum": [
            "no_user_social_settings_found"
          ],
          "title": "NO_USER_SOCIAL_SETTINGS_FOUND"
        },
        {
          "enum": [
            "asset_already_liked"
          ],
          "title": "ASSET_ALREADY_LIKED"
        },
        {
          "enum": [
            "not_allowed"
          ],
          "title": "NOT_ALLOWED"
        },
        {
          "enum": [
            "invalid_parameters"
          ],
          "title": "INVALID_PARAMETERS"
        },
        {
          "enum": [
            "no_facebook_action"
          ],
          "title": "NO_FACEBOOK_ACTION"
        },
        {
          "enum": [
            "asset_already_rated"
          ],
          "title": "ASSET_ALREADY_RATED"
        },
        {
          "enum": [
            "asset_dose_not_exists"
          ],
          "title": "ASSET_DOSE_NOT_EXISTS"
        },
        {
          "enum": [
            "invalid_platform_request"
          ],
          "title": "INVALID_PLATFORM_REQUEST"
        },
        {
          "enum": [
            "invalid_access_token"
          ],
          "title": "INVALID_ACCESS_TOKEN"
        }
      ],
      "title": "KalturaSocialStatus"
    },
    "KalturaStreamType": {
      "oneOf": [
        {
          "enum": [
            "catchup"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "start_over"
          ],
          "title": "START_OVER"
        },
        {
          "enum": [
            "trick_play"
          ],
          "title": "TRICK_PLAY"
        }
      ],
      "title": "KalturaStreamType"
    },
    "KalturaSubscriptionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        }
      ],
      "title": "KalturaSubscriptionOrderBy"
    },
    "KalturaTopicAutomaticIssueNotification": {
      "oneOf": [
        {
          "enum": [
            "Inherit"
          ],
          "title": "INHERIT"
        },
        {
          "enum": [
            "Yes"
          ],
          "title": "YES"
        },
        {
          "enum": [
            "No"
          ],
          "title": "NO"
        }
      ],
      "title": "KalturaTopicAutomaticIssueNotification"
    },
    "KalturaTopicOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaTopicOrderBy"
    },
    "KalturaTransactionAdapterStatus": {
      "oneOf": [
        {
          "enum": [
            "OK"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        }
      ],
      "title": "KalturaTransactionAdapterStatus"
    },
    "KalturaTransactionHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaTransactionHistoryOrderBy"
    },
    "KalturaTransactionType": {
      "oneOf": [
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        }
      ],
      "title": "KalturaTransactionType"
    },
    "KalturaUserAssetRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaUserAssetRuleOrderBy"
    },
    "KalturaUserAssetsListItemType": {
      "oneOf": [
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        }
      ],
      "title": "KalturaUserAssetsListItemType"
    },
    "KalturaUserAssetsListType": {
      "oneOf": [
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "watch"
          ],
          "title": "WATCH"
        },
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "library"
          ],
          "title": "LIBRARY"
        }
      ],
      "title": "KalturaUserAssetsListType"
    },
    "KalturaUserRoleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaUserRoleOrderBy"
    },
    "KalturaUserState": {
      "oneOf": [
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "user_with_no_household"
          ],
          "title": "USER_WITH_NO_HOUSEHOLD"
        },
        {
          "enum": [
            "user_created_with_no_role"
          ],
          "title": "USER_CREATED_WITH_NO_ROLE"
        },
        {
          "enum": [
            "user_not_activated"
          ],
          "title": "USER_NOT_ACTIVATED"
        }
      ],
      "title": "KalturaUserState"
    },
    "KalturaWatchStatus": {
      "oneOf": [
        {
          "enum": [
            "progress"
          ],
          "title": "PROGRESS"
        },
        {
          "enum": [
            "done"
          ],
          "title": "DONE"
        },
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        }
      ],
      "title": "KalturaWatchStatus"
    }
  },
  "x-errors": [
    {
      "name": "DomainAlreadyExists"
    },
    {
      "name": "ExceededLimit"
    },
    {
      "name": "DeviceTypeNotAllowed"
    },
    {
      "name": "DeviceNotInDomain"
    },
    {
      "name": "MasterEmailAlreadyExists"
    },
    {
      "name": "UserNotInDomain"
    },
    {
      "name": "DomainNotExists"
    },
    {
      "name": "HouseholdUserFailed"
    },
    {
      "name": "DomainCreatedWithoutNPVRAccount"
    },
    {
      "name": "DomainSuspended"
    },
    {
      "name": "DlmNotExist"
    },
    {
      "name": "WrongPasswordOrUserName"
    },
    {
      "name": "DomainAlreadySuspended"
    },
    {
      "name": "DomainAlreadyActive"
    },
    {
      "name": "LimitationPeriod"
    },
    {
      "name": "DeviceAlreadyExists"
    },
    {
      "name": "DeviceExistsInOtherDomains"
    },
    {
      "name": "NoUsersInDomain"
    },
    {
      "name": "UserExistsInOtherDomains"
    },
    {
      "name": "DeviceNotExists"
    },
    {
      "name": "UserNotExistsInDomain"
    },
    {
      "name": "ActionUserNotMaster"
    },
    {
      "name": "ExceededUserLimit"
    },
    {
      "name": "DomainNotInitialized"
    },
    {
      "name": "DeviceNotConfirmed"
    },
    {
      "name": "RequestFailed"
    },
    {
      "name": "InvalidUser"
    },
    {
      "name": "UserNotAllowed"
    },
    {
      "name": "DuplicatePin"
    },
    {
      "name": "UserAlreadyInDomain"
    },
    {
      "name": "NotAllowedToDelete"
    },
    {
      "name": "HomeNetworkAlreadyExists"
    },
    {
      "name": "HomeNetworkLimitation"
    },
    {
      "name": "HomeNetworkDoesNotExist"
    },
    {
      "name": "HomeNetworkFrequency"
    },
    {
      "name": "UserDoesNotExist"
    },
    {
      "name": "UserSuspended"
    },
    {
      "name": "GenerateNewLoginPIN"
    },
    {
      "name": "PinNotExists"
    },
    {
      "name": "PinExpired"
    },
    {
      "name": "NoValidPin"
    },
    {
      "name": "MissingSecurityParameter"
    },
    {
      "name": "SecretIsWrong"
    },
    {
      "name": "LoginViaPinNotAllowed"
    },
    {
      "name": "PinNotInTheRightLength"
    },
    {
      "name": "PinAlreadyExists"
    },
    {
      "name": "UserExists"
    },
    {
      "name": "InsideLockTime"
    },
    {
      "name": "UserNotActivated"
    },
    {
      "name": "UserAllreadyLoggedIn"
    },
    {
      "name": "UserDoubleLogIn"
    },
    {
      "name": "DeviceNotRegistered"
    },
    {
      "name": "NotActivated"
    },
    {
      "name": "ErrorOnInitUser"
    },
    {
      "name": "UserNotMasterApproved"
    },
    {
      "name": "UserWithNoDomain"
    },
    {
      "name": "UserTypeDoesNotExist"
    },
    {
      "name": "ActivationTokenNotFound"
    },
    {
      "name": "UserAlreadyMasterApproved"
    },
    {
      "name": "LoginServerDown"
    },
    {
      "name": "RoleAlreadyAssignedToUser"
    },
    {
      "name": "DefaultUserCannotBeDeleted"
    },
    {
      "name": "ExclusiveMasterUserCannotBeDeleted"
    },
    {
      "name": "ItemNotFound"
    },
    {
      "name": "InvalidPurchase"
    },
    {
      "name": "CancelationWindowPeriodExpired"
    },
    {
      "name": "SubscriptionNotRenewable"
    },
    {
      "name": "ServiceNotAllowed"
    },
    {
      "name": "InvalidBaseLink"
    },
    {
      "name": "ContentAlreadyConsumed"
    },
    {
      "name": "ReasonUnknown"
    },
    {
      "name": "ChargeStatusUnknown"
    },
    {
      "name": "ContentIDMissing"
    },
    {
      "name": "NoMediaRelatedToFile"
    },
    {
      "name": "NoContentID"
    },
    {
      "name": "NoProductID"
    },
    {
      "name": "CouponNotValid"
    },
    {
      "name": "UnableToPurchasePPVPurchased"
    },
    {
      "name": "UnableToPurchaseFree"
    },
    {
      "name": "UnableToPurchaseForPurchaseSubscriptionOnly"
    },
    {
      "name": "UnableToPurchaseSubscriptionPurchased"
    },
    {
      "name": "NotForPurchase"
    },
    {
      "name": "Fail"
    },
    {
      "name": "UnableToPurchaseCollectionPurchased"
    },
    {
      "name": "FileToMediaMismatch"
    },
    {
      "name": "ReconciliationFrequencyLimitation"
    },
    {
      "name": "InvalidCustomDataIdentifier"
    },
    {
      "name": "InvalidFileType"
    },
    {
      "name": "NotEntitled"
    },
    {
      "name": "AccountCdvrNotEnabled"
    },
    {
      "name": "AccountCatchUpNotEnabled"
    },
    {
      "name": "ProgramCdvrNotEnabled"
    },
    {
      "name": "ProgramCatchUpNotEnabled"
    },
    {
      "name": "CatchUpBufferLimitation"
    },
    {
      "name": "ProgramNotInRecordingScheduleWindow"
    },
    {
      "name": "RecordingNotFound"
    },
    {
      "name": "RecordingFailed"
    },
    {
      "name": "PaymentMethodIsUsedByHousehold"
    },
    {
      "name": "ExceededQuota"
    },
    {
      "name": "RecordingStatusNotValid"
    },
    {
      "name": "ExceededProtectionQuota"
    },
    {
      "name": "AccountProtectRecordNotEnabled"
    },
    {
      "name": "AccountSeriesRecordingNotEnabled"
    },
    {
      "name": "AlreadyRecordedAsSeriesOrSeason"
    },
    {
      "name": "SeriesRecordingNotFound"
    },
    {
      "name": "EpgIdNotPartOfSeries"
    },
    {
      "name": "RecordingPlaybackNotAllowedForNonExistingEpgChannel"
    },
    {
      "name": "RecordingPlaybackNotAllowedForNotEntitledEpgChannel"
    },
    {
      "name": "SeasonNumberNotMatch"
    },
    {
      "name": "MediaConcurrencyLimitation"
    },
    {
      "name": "ConcurrencyLimitation"
    },
    {
      "name": "BadSearchRequest"
    },
    {
      "name": "IndexMissing"
    },
    {
      "name": "SyntaxError"
    },
    {
      "name": "InvalidSearchField"
    },
    {
      "name": "NoRecommendationEngineToInsert"
    },
    {
      "name": "RecommendationEngineNotExist"
    },
    {
      "name": "RecommendationEngineIdentifierRequired"
    },
    {
      "name": "RecommendationEngineParamsRequired"
    },
    {
      "name": "NoExternalChannelToInsert"
    },
    {
      "name": "ExternalChannelNotExist"
    },
    {
      "name": "NoExternalChannelToUpdate"
    },
    {
      "name": "ExternalChannelIdentifierRequired"
    },
    {
      "name": "ExternalChannelHasNoRecommendationEngine"
    },
    {
      "name": "NoRecommendationEngineToUpdate"
    },
    {
      "name": "InactiveExternalChannelEnrichment"
    },
    {
      "name": "IdentifierRequired"
    },
    {
      "name": "ObjectNotExist"
    },
    {
      "name": "NoObjectToInsert"
    },
    {
      "name": "InvalidMediaType"
    },
    {
      "name": "InvalidAssetType"
    },
    {
      "name": "ProgramDoesntExist"
    },
    {
      "name": "ActionNotRecognized"
    },
    {
      "name": "InvalidAssetId"
    },
    {
      "name": "CountryNotFound"
    },
    {
      "name": "NoPinDefined"
    },
    {
      "name": "PinMismatch"
    },
    {
      "name": "RuleNotExists"
    },
    {
      "name": "NoOSSAdapterToInsert"
    },
    {
      "name": "NameRequired"
    },
    {
      "name": "SharedSecretRequired"
    },
    {
      "name": "OSSAdapterIdentifierRequired"
    },
    {
      "name": "OSSAdapterNotExist"
    },
    {
      "name": "OSSAdapterParamsRequired"
    },
    {
      "name": "UnknownOSSAdapterState"
    },
    {
      "name": "ActionIsNotAllowed"
    },
    {
      "name": "NoOSSAdapterToUpdate"
    },
    {
      "name": "AdapterUrlRequired"
    },
    {
      "name": "ConflictedParams"
    },
    {
      "name": "PurchaseSettingsTypeInvalid"
    },
    {
      "name": "ExportTaskNotFound"
    },
    {
      "name": "ExportNotificationUrlRequired"
    },
    {
      "name": "ExportFrequencyMinValue"
    },
    {
      "name": "AliasMustBeUnique"
    },
    {
      "name": "AliasRequired"
    },
    {
      "name": "UserParentalRuleNotExists"
    },
    {
      "name": "TimeShiftedTvPartnerSettingsNotFound"
    },
    {
      "name": "TimeShiftedTvPartnerSettingsNotSent"
    },
    {
      "name": "TimeShiftedTvPartnerSettingsNegativeBufferSent"
    },
    {
      "name": "CDNPartnerSettingsNotFound"
    },
    {
      "name": "IncorrectPrice"
    },
    {
      "name": "UnKnownPPVModule"
    },
    {
      "name": "ExpiredCard"
    },
    {
      "name": "CellularPermissionsError"
    },
    {
      "name": "UnKnownBillingProvider"
    },
    {
      "name": "PaymentGatewayIdRequired"
    },
    {
      "name": "PaymentGatewayParamsRequired"
    },
    {
      "name": "PaymentGatewayNotSetForHousehold"
    },
    {
      "name": "PaymentGatewayNotExist"
    },
    {
      "name": "PaymentGatewayChargeIdRequired"
    },
    {
      "name": "NoConfigurationFound"
    },
    {
      "name": "AdapterAppFailure"
    },
    {
      "name": "SignatureMismatch"
    },
    {
      "name": "ErrorSavingPaymentGatewayTransaction"
    },
    {
      "name": "ErrorSavingPaymentGatewayPending"
    },
    {
      "name": "ExternalIdentifierRequired"
    },
    {
      "name": "ErrorSavingPaymentGatewayHousehold"
    },
    {
      "name": "NoPaymentGateway"
    },
    {
      "name": "PaymentGatewayNameRequired"
    },
    {
      "name": "PaymentGatewaySharedSecretRequired"
    },
    {
      "name": "HouseholdAlreadySetToPaymentGateway"
    },
    {
      "name": "ChargeIdAlreadySetToHouseholdPaymentGateway"
    },
    {
      "name": "ChargeIdNotSetToHousehold"
    },
    {
      "name": "HouseholdNotSetToPaymentGateway"
    },
    {
      "name": "PaymentGatewaySelectionIsDisabled"
    },
    {
      "name": "NoResponseFromPaymentGateway"
    },
    {
      "name": "InvalidAccount"
    },
    {
      "name": "InsufficientFunds"
    },
    {
      "name": "UnknownPaymentGatewayResponse"
    },
    {
      "name": "PaymentGatewayAdapterUserKnown"
    },
    {
      "name": "PaymentGatewayAdapterReasonUnknown"
    },
    {
      "name": "SignatureDoesNotMatch"
    },
    {
      "name": "ErrorUpdatingPendingTransaction"
    },
    {
      "name": "PaymentGatewayTransactionNotFound"
    },
    {
      "name": "PaymentGatewayTransactionIsNotPending"
    },
    {
      "name": "ExternalIdentifierMustBeUnique"
    },
    {
      "name": "NoPaymentGatewayToInsert"
    },
    {
      "name": "UnknownTransactionState"
    },
    {
      "name": "PaymentGatewayNotValid"
    },
    {
      "name": "HouseholdRequired"
    },
    {
      "name": "PaymentGatewayAdapterFailReasonUnknown"
    },
    {
      "name": "NoPartnerConfigurationToUpdate"
    },
    {
      "name": "NoConfigurationValueToUpdate"
    },
    {
      "name": "PaymentMethodNotSetForHousehold"
    },
    {
      "name": "PaymentMethodNotExist"
    },
    {
      "name": "PaymentMethodIdRequired"
    },
    {
      "name": "PaymentMethodExternalIdRequired"
    },
    {
      "name": "ErrorSavingPaymentGatewayHouseholdPaymentMethod"
    },
    {
      "name": "PaymentMethodAlreadySetToHouseholdPaymentGateway"
    },
    {
      "name": "PaymentMethodNameRequired"
    },
    {
      "name": "PaymentGatewayNotSupportPaymentMethod"
    },
    {
      "name": "Conflict"
    },
    {
      "name": "MinFriendsLimitation"
    },
    {
      "name": "NoNotificationSettingsSent"
    },
    {
      "name": "PushNotificationFalse"
    },
    {
      "name": "NoNotificationPartnerSettings"
    },
    {
      "name": "NoNotificationSettings"
    },
    {
      "name": "AnnouncementMessageIsEmpty"
    },
    {
      "name": "AnnouncementInvalidStartTime"
    },
    {
      "name": "AnnouncementNotFound"
    },
    {
      "name": "AnnouncementUpdateNotAllowed"
    },
    {
      "name": "AnnouncementInvalidTimezone"
    },
    {
      "name": "FeatureDisabled"
    },
    {
      "name": "AnnouncementMessageTooLong"
    },
    {
      "name": "FailCreateAnnouncement"
    },
    {
      "name": "UserNotFollowing"
    },
    {
      "name": "UserAlreadyFollowing"
    },
    {
      "name": "MessagePlaceholdersInvalid"
    },
    {
      "name": "DatetimeFormatIsInvalid"
    },
    {
      "name": "MessageTemplateNotFound"
    },
    {
      "name": "URLPlaceholdersInvalid"
    },
    {
      "name": "InvalidMessageTTL"
    },
    {
      "name": "MessageIdentifierRequired"
    },
    {
      "name": "UserInboxMessagesNotExist"
    },
    {
      "name": "InvalidPriceCode"
    },
    {
      "name": "InvalidValue"
    },
    {
      "name": "InvalidDiscountCode"
    },
    {
      "name": "InvalidPricePlan"
    },
    {
      "name": "CodeMustBeUnique"
    },
    {
      "name": "CodeNotExist"
    },
    {
      "name": "InvalidCodeNotExist"
    },
    {
      "name": "InvalidChannels"
    },
    {
      "name": "InvalidFileTypes"
    },
    {
      "name": "InvalidPreviewModule"
    },
    {
      "name": "MandatoryField"
    },
    {
      "name": "UniqueFiled"
    },
    {
      "name": "InvalidUsageModule"
    },
    {
      "name": "InvalidCouponGroup"
    },
    {
      "name": "InvalidCurrency"
    },
    {
      "name": "ModuleNotExists"
    },
    {
      "name": "AdapterNotExists"
    },
    {
      "name": "AdapterIdentifierRequired"
    },
    {
      "name": "AdapterIsRequired"
    },
    {
      "name": "NoAdapterToInsert"
    },
    {
      "name": "IllegalXml"
    },
    {
      "name": "MissingExternalIdentifier"
    },
    {
      "name": "UnknownIngestType"
    },
    {
      "name": "EPGSProgramDatesError"
    },
    {
      "message": "Bad request",
      "name": "BadRequest"
    },
    {
      "message": "Invalid version [@version@]",
      "name": "InvalidVersion"
    },
    {
      "message": "Service Forbidden",
      "name": "ServiceForbidden"
    },
    {
      "message": "Action [@action@] is forbidden for property [@type@].[@property@]",
      "name": "PropertyActionForbidden"
    },
    {
      "message": "Argument [@argument@] in action [@service@].[@action@] is forbidden",
      "name": "ActionArgumentForbidden"
    },
    {
      "message": "Invalid KS format",
      "name": "InvalidKS"
    },
    {
      "message": "KS expired",
      "name": "ExpiredKS"
    },
    {
      "message": "Invalid refresh token",
      "name": "InvalidRefreshToken"
    },
    {
      "message": "Refresh token failed",
      "name": "RefreshTokenFailed"
    },
    {
      "message": "Invalid user [@id@]",
      "name": "InvalidUser"
    },
    {
      "message": "Service [@service@] not found",
      "name": "InvalidService"
    },
    {
      "message": "Action [@service@.@action@] not found",
      "name": "InvalidAction"
    },
    {
      "message": "Action not specified",
      "name": "ActionNotSpecified"
    },
    {
      "message": "Invalid action parameter [@parameter@]",
      "name": "InvalidActionParameter"
    },
    {
      "message": "Invalid action parameters",
      "name": "InvalidActionParameters"
    },
    {
      "message": "Argument [@argument@] is invalid",
      "name": "InvalidArgument"
    },
    {
      "message": "Argument [@argument@] must be numeric",
      "name": "ArgumentMustBeNumeric"
    },
    {
      "message": "Argument [@argument@] cannot be empty",
      "name": "ArgumentCannotBeEmpty"
    },
    {
      "message": "Argument [@argument@] is not writeable",
      "name": "ArgumentReadonly"
    },
    {
      "message": "Argument [@argument@] is not updateable",
      "name": "ArgumentInsertonly"
    },
    {
      "message": "Enumerator value [@value@] is not supported for argument [@argument@]",
      "name": "EnumValueNotSupported"
    },
    {
      "message": "Argument [@argument@] values must be of type [@enum@]",
      "name": "ArgumentShouldBeEnum"
    },
    {
      "message": "Argument [@argument@] values must have minimum value of [@value@]",
      "name": "ArgumentShouldContainMinValueCrossed"
    },
    {
      "message": "Argument [@argument@] values must have max value of [@value@]",
      "name": "ArgumentShouldContainMaxValueCrossed"
    },
    {
      "message": "One of the arguments [@arguments@] must have a value",
      "name": "ArgumentsCannotBeEmpty"
    },
    {
      "message": "Only one of @argument1@ or @argument2@ can be used, not both of them",
      "name": "ArgumentsConflictsEachOther"
    },
    {
      "message": "Argument [@argument@] time have passed",
      "name": "TimeInPast"
    },
    {
      "message": "Argument [@argument@] maximum length is [@value@]",
      "name": "ArgumentMaxLengthCrossed"
    },
    {
      "message": "Argument [@argument@] minimum length is [@value@]",
      "name": "ArgumentMinLengthCrossed"
    },
    {
      "message": "Argument [@argument@] maximum value is [@value@]",
      "name": "ArgumentMaxValueCrossed"
    },
    {
      "message": "Argument [@argument@] minimum value is [@value@]",
      "name": "ArgumentMinValueCrossed"
    },
    {
      "message": "Media ids must be numeric",
      "name": "MediaIdsMustBeNumeric"
    },
    {
      "message": "EPG internal ids must be numeric",
      "name": "EpgInternalIdsMustBeNumeric"
    },
    {
      "message": "Argument [@argument@] cannot be empty or all",
      "name": "ListTypeCannotBeEmptyOrAll"
    },
    {
      "message": "Duplicate asset: id [@id@] type = [@type@]",
      "name": "DuplicateAsset"
    },
    {
      "message": "Duplicate file: id [@id@]",
      "name": "DuplicateFile"
    },
    {
      "message": "Household [@household@] forbidden",
      "name": "HouseholdForbidden"
    },
    {
      "message": "Switching users is not allowed for partner",
      "name": "SwitchingUsersIsNotAllowedForPartner"
    },
    {
      "message": "Application-token [@id@] is not active",
      "name": "NotActiveAppToken"
    },
    {
      "message": "Invalid application-token hash",
      "name": "InvalidAppTokenHash"
    },
    {
      "message": "Application-token is expired",
      "name": "ExpiredAppToken"
    },
    {
      "message": "error",
      "name": "Error"
    },
    {
      "message": "Missing configuration [@configuration@]",
      "name": "MissingConfiguration"
    },
    {
      "message": "@objectType@ not found",
      "name": "NotFound"
    },
    {
      "message": "@objectType@ id [@id@] not found",
      "name": "ObjectIdNotFound"
    },
    {
      "message": "Invalid multirequest token",
      "name": "InvalidMultirequestToken"
    },
    {
      "message": "Abstract parameter type [@type@]",
      "name": "AbstractParameter"
    },
    {
      "message": "Missing parameter [@parameter@]",
      "name": "MissingParameter"
    },
    {
      "message": "Invalid multirequest token, response index is not zero based",
      "name": "MultirequestIndexNotZeroBased"
    },
    {
      "message": "Invalid multirequest token, invalid response index",
      "name": "MultirequestInvalidIndex"
    }
  ]
}